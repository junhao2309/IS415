---
title: "In-class Exercise 6"
date: "13 February 2023"
date-modified: "`r Sys.Date()`"
number-sections: true
format: html
execute: 
  echo: true
  eval: true
  warning: false
editor: visual
---

# Load packages

```{r}
pacman::p_load(sf, sfdep, tidyverse, tmap)
```

# The data

## Importing Geospatial data

```{r}
hunan <- st_read(dsn = "data/geospatial/",
                 layer = "Hunan")
  
```

## Importing Aspatial data

```{r}
hunan_2012 <- read_csv("data/aspatial/Hunan_2012.csv")
```

```{r}
hunan_GDPPC <- dplyr::left_join(hunan, hunan_2012) %>%
  select(1:4, 7, 15)
```

## Visualize the data on a Choropleth Map
```{r}
tmap_mode("plot")
tm_shape(hunan_GDPPC) +
  tm_fill("GDPPC",
          style = "quantile",
          palette = "Blues",
          title = "GDPPC") +
  tm_layout(main.title = "Distribution of GDP per capita by district",
            main.title.position = "center",
            main.title.size = 1.2,
            legend.height = 0.45,
            legend.width = 0.35,
            frame = TRUE) +
  tm_borders(alpha =0.5) +
  tm_compass(type = "8star", size =2) +
  tm_scale_bar() +
  tm_grid(alpha = 0.2)
```
# Identify area neighbours

## Contiguity neighbours method

In the code chunk below, st_contiguity() is used to derive a contiguity neighbour list by using Queen's method. By default, st_contiguity() uses queen = TRUE.
```{r}
cn_queen <- hunan_GDPPC %>%
  mutate(nb= st_contiguity(geometry),
         .before = 1)
```

The code chunk below uses st_contiguity() with queen = FALSE. This makes the contiguity neighbor list using the Rook's method.
```{r}
cn_rook <- hunan_GDPPC %>%
  mutate(nb = st_contiguity(geometry, 
                            queen = FALSE),
         .before = 1)
```

## Computing contiguity weights

### Queen's method
```{r}
wm_q <- hunan_GDPPC %>%
  mutate(nb = st_contiguity(geometry),
         wt = st_weights(nb),
         .before = 1)
```

### Rook's method
```{r}
wm_q <- hunan_GDPPC %>%
  mutate(nb = st_contiguity(geometry),
         queen = FALSE,
         wt = st_weights(nb),
         .before = 1)
```





