[
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/data/geospatial/ELDERCARE.html",
    "href": "Hands-on_Ex/Hands-on_Ex10/data/geospatial/ELDERCARE.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>  ELDERCARE  ENG dataset\n\nELDERCARE\n\n                 0 0     false"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/data/geospatial/hexagons.html",
    "href": "Hands-on_Ex/Hands-on_Ex10/data/geospatial/hexagons.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n                 0 0     false"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html",
    "href": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html",
    "title": "Hands-On Exercise 10: Modelling Geographical Accessibility",
    "section": "",
    "text": "In this hands-on exercise, we will learn how to model geographical accessibility.\nThese are the learning outcome from this exercise:\n\nComputerise accessibility measure by using:\n\nHansen’s potential model\nSpatial Accessibility Measure (SAM)\n\nVisualise the accessibility measures by using tmap and ggplot2 packages\n\n\n\n\nMP14_SUBZONE_NO_SEA_PL: URA Master Plan 2014 subzone boundary GIS data. This data set is downloaded from data.gov.sg.\nhexagons: A 250m radius hexagons GIS data. This data set was created by using st_make_grid() of sf package. It is in ESRI shapefile format.\nELDERCARE: GIS data showing location of eldercare service. This data is downloaded from data.gov.sg. There are two versions. One in ESRI shapefile format. The other one in Google kml file format. For the purpose of this hands-on exercise, ESRI shapefile format is provided.\nOD_Matrix: a distance matrix in csv format. There are six fields in the data file. They are:\n\norigin_id: the unique id values of the origin (i.e. fid of hexagon data set.),\ndestination_id: the unique id values of the destination (i.e. fid of ELDERCARE data set.),\nentry_cost: the perpendicular distance between the origins and the nearest road),\nnetwork_cost: the actual network distance from the origin and destination,\nexit_cost: the perpendicular distance between the destination and the nearest road), and\ntotal_cost: the summation of entry_cost, network_cost and exit_cost.\n\n\nAll the values of the cost related fields are in metres.\n\n\n\n\npacman::p_load(tmap, SpatialAcc, sf, \n               ggstatsplot, reshape2,\n               tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html#geospatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html#geospatial-data",
    "title": "Hands-On Exercise 10: Modelling Geographical Accessibility",
    "section": "2.1 Geospatial Data",
    "text": "2.1 Geospatial Data\n\n2.1.1 Import Geospatial Data\n\nmpsz <- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_NO_SEA_PL\")\n\nReading layer `MP14_SUBZONE_NO_SEA_PL' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Hands-on_Ex/Hands-on_Ex10/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\nhexagons <- st_read(dsn = \"data/geospatial\", \n                    layer = \"hexagons\") \n\nReading layer `hexagons' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Hands-on_Ex/Hands-on_Ex10/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 3125 features and 6 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 21506.33 xmax: 50010.26 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\n\n\n\neldercare <- st_read(dsn = \"data/geospatial\", \n                     layer = \"ELDERCARE\") \n\nReading layer `ELDERCARE' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Hands-on_Ex/Hands-on_Ex10/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 120 features and 19 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14481.92 ymin: 28218.43 xmax: 41665.14 ymax: 46804.9\nProjected CRS: SVY21 / Singapore TM\n\n\n\n\n2.1.2 Update CRS information\nWe have to ensure ESPG code for all spatial data are in 3414.\n\nmpsz <- st_transform(mpsz, 3414)\neldercare <- st_transform(eldercare, 3414)\nhexagons <- st_transform(hexagons, 3414)\n\nWe can then check their crs by using st_crs() of sf package.\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n2.1.3 Cleaning and updating attribute fields of geospatial data\n\neldercare <- eldercare %>%\n  select(fid, ADDRESSPOS) %>%\n  mutate(capacity = 100)\n\n\nhexagons <- hexagons %>%\n  select(fid) %>%\n  mutate(demand = 100)\n\nA constant value of 100 is used for this practise. However, in practice, actual demand of the hexagon and capacity of the eldercare centre should be used."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html#aspatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex10/Hands-on_Ex10.html#aspatial-data",
    "title": "Hands-On Exercise 10: Modelling Geographical Accessibility",
    "section": "2.2 Aspatial Data",
    "text": "2.2 Aspatial Data\n\n2.2.1 Importing Distance Matrix\n\nODMatrix <- read_csv(\"data/aspatial/OD_Matrix.csv\", \n                     skip = 0)\n\n\n\n2.2.2 Tidying distance matrix\nWe can see that the imported data organises the distance matrix columnwise.\n\nglimpse(ODMatrix)\n\nRows: 375,000\nColumns: 6\n$ origin_id      <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ destination_id <dbl> 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18,…\n$ entry_cost     <dbl> 667.9336, 667.9336, 667.9336, 667.9336, 667.9336, 667.9…\n$ network_cost   <dbl> 19846.87, 45026.76, 17644.17, 36009.56, 31068.09, 31194…\n$ exit_cost      <dbl> 47.64874, 31.87162, 173.47882, 92.19676, 64.62840, 117.…\n$ total_cost     <dbl> 20562.45, 45726.57, 18485.58, 36769.69, 31800.65, 31979…\n\n\nWe will proceed to wrangle the data such that rows represent origins and columns represent destination.\nThe code chunk below uses spread() of tidyr package to transform the ODMatrix from thin format into fat format.\n\ndistmat <- ODMatrix %>%\n  select(origin_id, destination_id, total_cost) %>%\n  spread(destination_id, total_cost)%>%\n  select(c(-c('origin_id')))\n\nWe can then convert unit f measurement from metre to kilometre\n\ndistmat_km <- as.matrix(distmat/1000)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands on Exercise 3",
    "section": "",
    "text": "pacman::p_load(sf, spatstat, raster, maptools, tmap)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#import-spatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#import-spatial-data",
    "title": "Hands on Exercise 3",
    "section": "2.1 Import spatial data",
    "text": "2.1 Import spatial data\n\nchildcare_sf <- st_read(\"data/child-care-services-geojson.geojson\") %>%\n  st_transform(crs = 3414)\n\nReading layer `child-care-services-geojson' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Hands-on_Ex/Hands-on_Ex03/data/child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\nsg_sf <- st_read(dsn = \"data\", layer = \"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Hands-on_Ex/Hands-on_Ex03/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\n\n\nmpsz_sf <- st_read(dsn = \"data\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Hands-on_Ex/Hands-on_Ex03/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nBoth mpsz_sf and sg_sf are projecting with SVY21 but are currently using EPSG:9001. We can check by using st_crs()."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#convert-data-into-dataframe",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#convert-data-into-dataframe",
    "title": "Hands on Exercise 3",
    "section": "2.2 Convert data into dataframe",
    "text": "2.2 Convert data into dataframe\n\nsg_sf <- st_sf(sg_sf) %>%\n  st_transform(crs = 3414)\n\n\nmpsz_sf <- st_sf(mpsz_sf) %>%\n  st_transform(crs = 3414)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#mapping-geospatial-datasets",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#mapping-geospatial-datasets",
    "title": "Hands on Exercise 3",
    "section": "2.3 Mapping geospatial datasets",
    "text": "2.3 Mapping geospatial datasets\n\ntmap_mode(\"plot\")\nqtm(mpsz_sf) + \n  qtm(childcare_sf)\n\n\n\n\n\ntmap_mode(\"plot\")\n\nAlternative given by prof:\n\ntmap_mode(\"view\")\ntm_shape(childcare_sf) +\n  tm_dots()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#converting-sf-data-frames-to-sps-spatial-class",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#converting-sf-data-frames-to-sps-spatial-class",
    "title": "Hands on Exercise 3",
    "section": "3.1 Converting sf data frames to sp’s Spatial class",
    "text": "3.1 Converting sf data frames to sp’s Spatial class\n\nchildcare <- as_Spatial(childcare_sf)\nmpsz <- as_Spatial(mpsz_sf)\nsg <- as_Spatial(sg_sf)\n\nDisplay information of spatial class\n\nst_crs(childcare)\n\nCoordinate Reference System:\n  User input: SVY21 / Singapore TM \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n3.1.1 Converting Spatial class into generic sp format\nspatstat requires data to be in ppp object form Classes -> sp -> ppp\n\nchildcare_sp <- as(childcare, \"SpatialPoints\")\nsg_sp <- as(sg, \"SpatialPolygons\")\n\n\nchildcare_sp\n\nclass       : SpatialPoints \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\nsg_sp\n\nclass       : SpatialPolygons \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\n\n3.1.2 Converting the generic sp format into spatstat ppp format\n\nchildcare_ppp <- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 1545 points\nwindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n\n\n\nplot(childcare_ppp)\n\n\n\n\n\nsummary(childcare_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units\n\n\n\n\n3.1.3 Handling duplicated points\nTo check whether theres any duplicates:\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\n\nTo count number of co-indicence point, use multiplicity\n\n# multiplicity(childcare_ppp)\n\nTo know how mnay locations have more than one point events:\n\nsum(multiplicity(childcare_ppp) > 1)\n\n[1] 128\n\n\nThere is 128 duplicated point events\n\ntmap_mode('view')\ntm_shape(childcare) +\n  tm_dots(alpha = 0.4,\n          size = 0.05)\n\n\n\n\n\n\n\ntmap_mode('plot')\n\nWays to solve duplication problems: - 1. Delete duplicates – Cons: some useful point may be lost - 2. Use jittering: Adds a small perturbation so that duplicates do not occupy the same space - 3. Make each point unique\nThis code uses No.2 approach\n\nchildcare_ppp_jit <- rjitter(childcare_ppp,\n                             retry = TRUE,\n                             nsim = 1,\n                             drop = TRUE)\n\n\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE\n\n\n\n\n3.1.4 Creating owin object\nObject called owin is designed to represent polygonal region.\n\nsg_owin <- as(sg_sp, \"owin\")\n\nplot(sg_owin)\n\n\n\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n60 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         38 1.56140e+04      2.09e-05\npolygon 2        735 4.69093e+06      6.27e-03\npolygon 3         49 1.66986e+04      2.23e-05\npolygon 4         76 3.12332e+05      4.17e-04\npolygon 5       5141 6.36179e+08      8.50e-01\npolygon 6         42 5.58317e+04      7.46e-05\npolygon 7         67 1.31354e+06      1.75e-03\npolygon 8         15 4.46420e+03      5.96e-06\npolygon 9         14 5.46674e+03      7.30e-06\npolygon 10        37 5.26194e+03      7.03e-06\npolygon 11        53 3.44003e+04      4.59e-05\npolygon 12        74 5.82234e+04      7.78e-05\npolygon 13        69 5.63134e+04      7.52e-05\npolygon 14       143 1.45139e+05      1.94e-04\npolygon 15       165 3.38736e+05      4.52e-04\npolygon 16       130 9.40465e+04      1.26e-04\npolygon 17        19 1.80977e+03      2.42e-06\npolygon 18        16 2.01046e+03      2.69e-06\npolygon 19        93 4.30642e+05      5.75e-04\npolygon 20        90 4.15092e+05      5.54e-04\npolygon 21       721 1.92795e+06      2.57e-03\npolygon 22       330 1.11896e+06      1.49e-03\npolygon 23       115 9.28394e+05      1.24e-03\npolygon 24        37 1.01705e+04      1.36e-05\npolygon 25        25 1.66227e+04      2.22e-05\npolygon 26        10 2.14507e+03      2.86e-06\npolygon 27       190 2.02489e+05      2.70e-04\npolygon 28       175 9.25904e+05      1.24e-03\npolygon 29      1993 9.99217e+06      1.33e-02\npolygon 30        38 2.42492e+04      3.24e-05\npolygon 31        24 6.35239e+03      8.48e-06\npolygon 32        53 6.35791e+05      8.49e-04\npolygon 33        41 1.60161e+04      2.14e-05\npolygon 34        22 2.54368e+03      3.40e-06\npolygon 35        30 1.08382e+04      1.45e-05\npolygon 36       327 2.16921e+06      2.90e-03\npolygon 37       111 6.62927e+05      8.85e-04\npolygon 38        90 1.15991e+05      1.55e-04\npolygon 39        98 6.26829e+04      8.37e-05\npolygon 40       415 3.25384e+06      4.35e-03\npolygon 41       222 1.51142e+06      2.02e-03\npolygon 42       107 6.33039e+05      8.45e-04\npolygon 43         7 2.48299e+03      3.32e-06\npolygon 44        17 3.28303e+04      4.38e-05\npolygon 45        26 8.34758e+03      1.11e-05\npolygon 46       177 4.67446e+05      6.24e-04\npolygon 47        16 3.19460e+03      4.27e-06\npolygon 48        15 4.87296e+03      6.51e-06\npolygon 49        66 1.61841e+04      2.16e-05\npolygon 50       149 5.63430e+06      7.53e-03\npolygon 51       609 2.62570e+07      3.51e-02\npolygon 52         8 7.82256e+03      1.04e-05\npolygon 53       976 2.33447e+07      3.12e-02\npolygon 54        55 8.25379e+04      1.10e-04\npolygon 55       976 2.33447e+07      3.12e-02\npolygon 56        61 3.33449e+05      4.45e-04\npolygon 57         6 1.68410e+04      2.25e-05\npolygon 58         4 9.45963e+03      1.26e-05\npolygon 59        46 6.99702e+05      9.35e-04\npolygon 60        13 7.00873e+04      9.36e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 748741000 square units\nFraction of frame area: 0.414\n\n\n\n\n3.1.5 Combining point events object and owin object\nOutput combines the point and polygon feature in one ppp object class\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\n\nsummary(childcareSG_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 2.063463e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: polygonal boundary\n60 separate polygons (no holes)\n            vertices        area relative.area\npolygon 1         38 1.56140e+04      2.09e-05\npolygon 2        735 4.69093e+06      6.27e-03\npolygon 3         49 1.66986e+04      2.23e-05\npolygon 4         76 3.12332e+05      4.17e-04\npolygon 5       5141 6.36179e+08      8.50e-01\npolygon 6         42 5.58317e+04      7.46e-05\npolygon 7         67 1.31354e+06      1.75e-03\npolygon 8         15 4.46420e+03      5.96e-06\npolygon 9         14 5.46674e+03      7.30e-06\npolygon 10        37 5.26194e+03      7.03e-06\npolygon 11        53 3.44003e+04      4.59e-05\npolygon 12        74 5.82234e+04      7.78e-05\npolygon 13        69 5.63134e+04      7.52e-05\npolygon 14       143 1.45139e+05      1.94e-04\npolygon 15       165 3.38736e+05      4.52e-04\npolygon 16       130 9.40465e+04      1.26e-04\npolygon 17        19 1.80977e+03      2.42e-06\npolygon 18        16 2.01046e+03      2.69e-06\npolygon 19        93 4.30642e+05      5.75e-04\npolygon 20        90 4.15092e+05      5.54e-04\npolygon 21       721 1.92795e+06      2.57e-03\npolygon 22       330 1.11896e+06      1.49e-03\npolygon 23       115 9.28394e+05      1.24e-03\npolygon 24        37 1.01705e+04      1.36e-05\npolygon 25        25 1.66227e+04      2.22e-05\npolygon 26        10 2.14507e+03      2.86e-06\npolygon 27       190 2.02489e+05      2.70e-04\npolygon 28       175 9.25904e+05      1.24e-03\npolygon 29      1993 9.99217e+06      1.33e-02\npolygon 30        38 2.42492e+04      3.24e-05\npolygon 31        24 6.35239e+03      8.48e-06\npolygon 32        53 6.35791e+05      8.49e-04\npolygon 33        41 1.60161e+04      2.14e-05\npolygon 34        22 2.54368e+03      3.40e-06\npolygon 35        30 1.08382e+04      1.45e-05\npolygon 36       327 2.16921e+06      2.90e-03\npolygon 37       111 6.62927e+05      8.85e-04\npolygon 38        90 1.15991e+05      1.55e-04\npolygon 39        98 6.26829e+04      8.37e-05\npolygon 40       415 3.25384e+06      4.35e-03\npolygon 41       222 1.51142e+06      2.02e-03\npolygon 42       107 6.33039e+05      8.45e-04\npolygon 43         7 2.48299e+03      3.32e-06\npolygon 44        17 3.28303e+04      4.38e-05\npolygon 45        26 8.34758e+03      1.11e-05\npolygon 46       177 4.67446e+05      6.24e-04\npolygon 47        16 3.19460e+03      4.27e-06\npolygon 48        15 4.87296e+03      6.51e-06\npolygon 49        66 1.61841e+04      2.16e-05\npolygon 50       149 5.63430e+06      7.53e-03\npolygon 51       609 2.62570e+07      3.51e-02\npolygon 52         8 7.82256e+03      1.04e-05\npolygon 53       976 2.33447e+07      3.12e-02\npolygon 54        55 8.25379e+04      1.10e-04\npolygon 55       976 2.33447e+07      3.12e-02\npolygon 56        61 3.33449e+05      4.45e-04\npolygon 57         6 1.68410e+04      2.25e-05\npolygon 58         4 9.45963e+03      1.26e-05\npolygon 59        46 6.99702e+05      9.35e-04\npolygon 60        13 7.00873e+04      9.36e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 748741000 square units\nFraction of frame area: 0.414\n\n\n\nplot(childcareSG_ppp)\n\n\n\n\n\n\n3.1.6 First-order Spatial Point Patterns\n\n3.1.6.1 Computing kernel density estimation using automatic bandwidth selection method\n\nkde_childcareSG_bw <- density(childcareSG_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \n\n\nplot(kde_childcareSG_bw)\n\n\n\n\nWe can retrieve the bandwidth used to comput4e the kde layer\n\nbw <- bw.diggle(childcareSG_ppp)\nbw\n\n   sigma \n298.4095 \n\n\n\n\n3.1.6.2 Rescalling KDE values\n\nchildcareSG_ppp.km <- rescale(childcareSG_ppp, 1000, \"km\")\n\nAfter rescaling, we can place it back through density()\n\nkde_childcareSG.bw <- density(childcareSG_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")\nplot(kde_childcareSG.bw)\n\n\n\n\n\n\n3.1.6.3 Working with different automatic bandwidth methods\nThe code chunks below returns bandwidth using different methods\n\nbw.CvL(childcareSG_ppp.km)\n\n   sigma \n4.543278 \n\n\n\nbw.scott(childcareSG_ppp.km)\n\n sigma.x  sigma.y \n2.224898 1.450966 \n\n\n\nbw.ppl(childcareSG_ppp.km)\n\n    sigma \n0.3897114 \n\n\n\nbw.diggle(childcareSG_ppp.km)\n\n    sigma \n0.2984095 \n\n\nbw.ppl tends to produce more appropriate values when pattern consists predominantly of tight clusters bw.diggle is best when used to detect a single tight cluster in the midst of random noise\nThe code chunk below compares the plot output using bw.diggle and bw.ppl\n\nkde_childcareSG.ppl <- density(childcareSG_ppp.km, \n                               sigma=bw.ppl, \n                               edge=TRUE,\n                               kernel=\"gaussian\")\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"bw.diggle\")\nplot(kde_childcareSG.ppl, main = \"bw.ppl\")\n\n\n\n\nCode chunk compares kernel methods: Gaussian, Epanechnikov, Quartic, Dics\n\npar(mfrow=c(2,2))\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"Gaussian\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"epanechnikov\"), \n     main=\"Epanechnikov\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"quartic\"), \n     main=\"Quartic\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"disc\"), \n     main=\"Disc\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#fixed-and-adaptive-kde",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#fixed-and-adaptive-kde",
    "title": "Hands on Exercise 3",
    "section": "3.2 Fixed and Adaptive KDE",
    "text": "3.2 Fixed and Adaptive KDE\n\n3.2.1 Computing KDE by using fixed bandwidth\n\nkde_childcareSG_600 <- density(childcareSG_ppp.km, sigma=0.6, edge=TRUE, kernel=\"gaussian\")\nplot(kde_childcareSG_600)\n\n\n\n#signma = 0.6 refers to bandwidth of 600meter or 0.6km\n\n\n\n3.2.2 Computing KDE by using adaptive bandwidth\nFixed bandwidth method is very sensitive to highly skew distribution. To overcome this problem, use adaptive bandwidth: density.adaptive() of spatstat\n\nkde_childcareSG_adaptive <- adaptive.density(childcareSG_ppp.km, method=\"kernel\")\n\nplot(kde_childcareSG_adaptive)\n\n\n\n\nComparing fixed and adaptive:\n\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"Fixed bandwidth\")\nplot(kde_childcareSG_adaptive, main = \"Adaptive bandwidth\")\n\n\n\n\n\n\n3.2.3 Converting KDE output into grid object\n\ngridded_kde_childcareSG_bw <- as.SpatialGridDataFrame.im(kde_childcareSG.bw)\nspplot(gridded_kde_childcareSG_bw)\n\n\n\n\n\n3.2.3.1 Converting gridded output into raster\n\nkde_childcareSG_bw_raster <- raster(gridded_kde_childcareSG_bw)\n\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -1.005814e-14, 28.51831  (min, max)\n\n\nNotice that crs property is NA\n\n\n3.2.3.2 Assigning projection systems\nCodechunk below is used to include CRS information in kde_childcareSG_bw_raster\n\nprojection(kde_childcareSG_bw_raster) <- CRS(\"+init=EPSG:3414\")\n\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : -1.005814e-14, 28.51831  (min, max)\n\n\nNow, crs property is complete\n\n\n\n3.2.4 Visualising the output in tmap\n\ntm_shape(kde_childcareSG_bw_raster) +\n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\n\n\n\n\n\n3.2.5 Comparing Spatial Point Patterns using KDE\n\n3.2.5.1 Extract the target planning areas\n\npg = mpsz[mpsz@data$PLN_AREA_N == \"PUNGGOL\",]\ntm = mpsz[mpsz@data$PLN_AREA_N == \"TAMPINES\",]\nck = mpsz[mpsz@data$PLN_AREA_N == \"CHOA CHU KANG\",]\njw = mpsz[mpsz@data$PLN_AREA_N == \"JURONG WEST\",]\n\n\npar(mfrow=c(2,2))\nplot(pg, main = \"Ponggol\")\nplot(tm, main = \"Tampines\")\nplot(ck, main = \"Choa Chu Kang\")\nplot(jw, main = \"Jurong West\")\n\n\n\n\n\n\n3.2.5.2 Converting the spatial point data frame into generic sp format\n\npg_sp = as(pg, \"SpatialPolygons\")\ntm_sp = as(tm, \"SpatialPolygons\")\nck_sp = as(ck, \"SpatialPolygons\")\njw_sp = as(jw, \"SpatialPolygons\")\n\n\n\n3.2.5.3 Creating owin object\n\npg_owin = as(pg_sp, \"owin\")\ntm_owin = as(tm_sp, \"owin\")\nck_owin = as(ck_sp, \"owin\")\njw_owin = as(jw_sp, \"owin\")\n\n\n\n3.2.5.4 Combining childcare points and the study area\n\nchildcare_pg_ppp = childcare_ppp_jit[pg_owin]\nchildcare_tm_ppp = childcare_ppp_jit[tm_owin]\nchildcare_ck_ppp = childcare_ppp_jit[ck_owin]\nchildcare_jw_ppp = childcare_ppp_jit[jw_owin]\n\nUse rescale() functions to change unit of measurement from m to km.\n\nchildcare_pg_ppp.km = rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km = rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km = rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km = rescale(childcare_jw_ppp, 1000, \"km\")\n\n\npar(mfrow=c(2,2))\nplot(childcare_pg_ppp.km, main=\"Punggol\")\nplot(childcare_tm_ppp.km, main=\"Tampines\")\nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp.km, main=\"Jurong West\")\n\n\n\n\n\n\n3.2.5.5 Computing KDE\nCompute the KDE of these 4 planning areas. bw.diggle is used to derive bandwidth\n\npar(mfrow=c(2,2))\nplot(density(childcare_pg_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tempines\")\nplot(density(childcare_ck_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"JUrong West\")\n\n\n\n\n\n\n3.2.5.6 Computing bandwidth KDE\n\npar(mfrow=c(2,2))\nplot(density(childcare_ck_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Chou Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"JUrong West\")\nplot(density(childcare_pg_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#nearest-neighbour-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#nearest-neighbour-analysis",
    "title": "Hands on Exercise 3",
    "section": "3.3 Nearest Neighbour Analysis",
    "text": "3.3 Nearest Neighbour Analysis\nWe will use the Clark-Evans test of aggregation for a spatial point pattern by using clarkevans.test() of statspat\nThe test hypotheses are:\nH0 = The distribution of childcare services are randomly distributed H1 = The distribution of childcare services are not randomly distributed.\n\n3.3.1 Testing spatial point patterns using Clark and Evans Test\n\nclarkevans.test(childcareSG_ppp,\n                correction=\"none\",\n                clipregion=\"sg_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 99 simulations of CSR with fixed n\n\ndata:  childcareSG_ppp\nR = 0.54756, p-value = 0.01\nalternative hypothesis: clustered (R < 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#analysing-spatial-point-process-using-g-function",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#analysing-spatial-point-process-using-g-function",
    "title": "Hands on Exercise 3",
    "section": "4.1 Analysing Spatial Point Process Using G-Function",
    "text": "4.1 Analysing Spatial Point Process Using G-Function\nG functions is used to measure the distribution of the distances from an arbitrary event to its nearest event. This is computed by using Gest() of spatstat package.\n\n4.1.1 Choa Chu Kang planning area\n\nG_CK = Gest(childcare_ck_ppp, correction = \"border\")\nplot(G_CK, xlim = c(0,500))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "Getting Started\nLoad packages\n\npacman::p_load(tmap, tidyverse, sf)\n\n\n\nImporting Geospatial Data into R\n\nmpsz <- st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Hands-on_Ex/Hands-on_Ex02/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\nmpsz\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\n\n\nImporting Attribute Data into R\n\npopdata <- read_csv(\"data/aspatial/respopagesexfa2011to2020.csv\")\n\nRows: 738492 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, FA\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nData Preparation\nContext: Before a thematic map can be prepared, you are required to prepare a data table with year 2020 values. The data table should include the variables PA, SZ, YOUNG, ECONOMY ACTIVE, AGED, TOTAL, DEPENDENCY.\nYOUNG: age group 0 to 4 until age groyup 20 to 24, ECONOMY ACTIVE: age group 25-29 until age group 60-64, AGED: age group 65 and above, TOTAL: all age group, and DEPENDENCY: the ratio between young and aged against economy active group\n\npopdata2020 <- popdata %>%\n  filter(Time == 2020) %>%\n  group_by(PA, SZ, AG) %>%\n  summarise(`POP` = sum(`Pop`)) %>%\n  ungroup() %>%\n  pivot_wider(names_from=AG, \n              values_from=POP) %>%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12]), \n         ECONOMY_ACTIVE = rowSums(.[7:11]) +\n           rowSums(.[13:15]), \n         AGED = rowSums(.[16:21]),\n  #Column 3 to 6 and column 12 are under 24 yrs old\n  #Column 7 to 11 and 13 - 15 are between 25 - 64\n  #Column 16 to 21 are 65 and above\n         TOTAL = rowSums(.[3:21]),\n         DEPENDENCY = (YOUNG + AGED)\n         /ECONOMY_ACTIVE) %>%\n  select(PA, SZ, \n         YOUNG, ECONOMY_ACTIVE, AGED,\n         TOTAL, DEPENDENCY)\n\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n\n#rowSums() tallies the sum of values in the columns specified\n\nJoining the attribute data and geospatial data\n\npopdata2020 <- popdata2020 %>%\n  mutate_at(.vars = vars(PA,SZ),\n            .funs = funs(toupper)) |>\n  filter(ECONOMY_ACTIVE > 0)\n\nWarning: `funs()` was deprecated in dplyr 0.8.0.\nℹ Please use a list of either functions or lambdas:\n\n# Simple named list: list(mean = mean, median = median)\n\n# Auto named with `tibble::lst()`: tibble::lst(mean, median)\n\n# Using lambdas list(~ mean(., trim = .2), ~ median(., na.rm = TRUE))\n\npopdata2020\n\n# A tibble: 234 × 7\n   PA         SZ                     YOUNG ECONOMY_ACTIVE  AGED TOTAL DEPENDENCY\n   <chr>      <chr>                  <dbl>          <dbl> <dbl> <dbl>      <dbl>\n 1 ANG MO KIO ANG MO KIO TOWN CENTRE  1440           2640   770  4850      0.837\n 2 ANG MO KIO CHENG SAN               6660          15380  6080 28120      0.828\n 3 ANG MO KIO CHONG BOON              6150          13970  6450 26570      0.902\n 4 ANG MO KIO KEBUN BAHRU             5500          12040  5080 22620      0.879\n 5 ANG MO KIO SEMBAWANG HILLS         2130           3390  1270  6790      1.00 \n 6 ANG MO KIO SHANGRI-LA              3970           8430  3540 15940      0.891\n 7 ANG MO KIO TAGORE                  2220           4160  1520  7900      0.899\n 8 ANG MO KIO TOWNSVILLE              4720          11430  5050 21200      0.855\n 9 ANG MO KIO YIO CHU KANG EAST       1190           2230   740  4160      0.865\n10 ANG MO KIO YIO CHU KANG WEST       6610          12810  4680 24100      0.881\n# … with 224 more rows\n\n# mutate_at(.vars = , .funs =) : vars() selects columns. funs() applies a function on all records\n#toupper converts from lower case to uppercase as a default\n\nUse left_join() to combine geospatial data and attribute table by mpsz.SUBZONE_N and popdata2020.SZ as common identifier\n\nmpsz_pop2020 <- left_join(mpsz, popdata2020, by = c(\"SUBZONE_N\" = \"SZ\"))\n\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020\")\n\n\n\nChoropleth Mapping Geospatial Data Using tmap\nPlotting a choropleth map quickly using qtm()\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nqtm(mpsz_pop2020,\n    fill = \"DEPENDENCY\")\n\n\n\n\nNotes:\n\ntmap_mode() with “plot” produces a static map whereas “view” produces an interactive mode\nfill maps the variable attribute\n\nCreating a choropleth map by using tmaps element: Similar to ggplot2, use “+” as its adding on layers to the plot\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n        style = \"quantile\",\n        palette = \"Blues\",\n        title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html",
    "title": "Hands-On Exercise 7: Global Measures of Spatial Autocorrelation",
    "section": "",
    "text": "In this hands-on exercise, we are taught on the contents in Chapter 9: Global Measures of Spatial Autocorrelation and Chapter 10: Local Measures of Spatial Autocorrelation. We will be using the spdep package amongst other packages used."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#analytical-problem",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#analytical-problem",
    "title": "Hands-On Exercise 7: Global Measures of Spatial Autocorrelation",
    "section": "2.1 Analytical problem",
    "text": "2.1 Analytical problem\nAs mentioned in the course materials, in spatial policy, one of the main development objective of the local government is to ensure equal distribution of development with in the province. This helps policy makers to zoom in on any unequal distribution which can be seen clustering."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#the-study-data",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#the-study-data",
    "title": "Hands-On Exercise 7: Global Measures of Spatial Autocorrelation",
    "section": "2.2 The Study Data",
    "text": "2.2 The Study Data"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#load-packages",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#load-packages",
    "title": "Hands-On Exercise 7: Global Measures of Spatial Autocorrelation",
    "section": "2.3 Load packages:",
    "text": "2.3 Load packages:\n\npacman::p_load(sf,spdep,tmap,tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#load-data",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#load-data",
    "title": "Hands-On Exercise 7: Global Measures of Spatial Autocorrelation",
    "section": "2.4 Load Data",
    "text": "2.4 Load Data\n\nhunan <- st_read(dsn = \"data/geospatial\",\n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Hands-on_Ex/Hands-on_Ex07/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#performing-relational-join",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#performing-relational-join",
    "title": "Hands-On Exercise 7: Global Measures of Spatial Autocorrelation",
    "section": "2.5 Performing relational join",
    "text": "2.5 Performing relational join\n\nhunan <- left_join(hunan, hunan2012) %>%\n  select(1:4, 7, 15)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#visualising-regional-development",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#visualising-regional-development",
    "title": "Hands-On Exercise 7: Global Measures of Spatial Autocorrelation",
    "section": "2.6 Visualising Regional Development",
    "text": "2.6 Visualising Regional Development\n\nequal <- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile <- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#computing-contiguity-spatial-weights",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#computing-contiguity-spatial-weights",
    "title": "Hands-On Exercise 7: Global Measures of Spatial Autocorrelation",
    "section": "3.1 Computing Contiguity Spatial Weights",
    "text": "3.1 Computing Contiguity Spatial Weights\nBefore we compute the global spatial autocorrelation statistics, we need to construct the spatial weights of the study area. The spatial weights is used to define the neighbourhood relationships between the geographical units in the study area.\nBy using the poly2nb() of spdep package, we can compute the coniguity weight matrices for the study area. There are two main modes, queen and rook. By using the arguments below: queen = TRUE : QUEEN queen = FALSE : ROOK\n\nwm_q <- poly2nb(hunan, \n                queen= TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nThe summary reports above shows that there are 88 area units in Hunan and the most connected area unit has 11 neighbours."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#row-standardised-weights-matrix",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#row-standardised-weights-matrix",
    "title": "Hands-On Exercise 7: Global Measures of Spatial Autocorrelation",
    "section": "3.2 Row-standardised weights matrix",
    "text": "3.2 Row-standardised weights matrix\n\nrswm_q <- nb2listw(wm_q,\n                   style =\"W\",\n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#global-spatial-autocorrelation-morans-i",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#global-spatial-autocorrelation-morans-i",
    "title": "Hands-On Exercise 7: Global Measures of Spatial Autocorrelation",
    "section": "3.3 Global Spatial Autocorrelation: Moran’s I",
    "text": "3.3 Global Spatial Autocorrelation: Moran’s I\nWe will perform the Moran’s I statistics testing by using moran.test() of spdep.\n\n3.3.1 Moran’s I Test\n\nmoran.test(hunan$GDPPC,\n           listw = rswm_q,\n           zero.policy = TRUE,\n           na.action= na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\nBy running the moran test, we look at the p value. If p value is less than alpha set, the result is significant.\n\nKnowing how to read the Moran Test Statistic\n\n\n\n\n\n\nSignificance and z-value\nExplanation\n\n\n\n\nThe p-value is not statistically significant.\nYou cannot reject the null hypothesis. It is quite possible that the spatial distribution of feature values is the result of random spatial processes. The observed spatial pattern of feature values could very well be one of many, many possible versions of complete spatial randomness (CSR).\n\n\nThe p-value is statistically significant, and the z-score is positive.\nYou may reject the null hypothesis. The spatial distribution of high values and/or low values in the dataset is more spatially clustered than would be expected if underlying spatial processes were random.\n\n\nThe p-value is statistically significant, and the z-score is negative.\nYou may reject the null hypothesis. The spatial distribution of high values and low values in the dataset is more spatially dispersed than would be expected if underlying spatial processes were random. A dispersed spatial pattern often reflects some type of competitive process—a feature with a high value repels other features with high values; similarly, a feature with a low value repels other features with low values.\n\n\n\nCredits: https://pro.arcgis.com/en/pro-app/latest/tool-reference/spatial-statistics/h-how-spatial-autocorrelation-moran-s-i-spatial-st.htm#:~:text=the%20null%20hypothesis.-,Interpretation,context%20of%20its%20null%20hypothesis.\n\n\n3.3.2 Computing Monte Carlo Moran’s I\nThe code chunk below performs the permutation test for Moran’s I statistic by using moran.mc() of spdep. A total of 1000 simulation will be performed.\n\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n3.3.3 Visualising Monte Carlo Moran’s I\n\nmean(bperm$res[1:999])\n\n[1] -0.01504572\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.004371574\n\n\n\nsummary(bperm$res[1:999])\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\") \n\n\n\n\nWe can see here that the graph is skewed to the right but mainly falls around the negative range."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#global-spatial-autocorrelation-gearys",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#global-spatial-autocorrelation-gearys",
    "title": "Hands-On Exercise 7: Global Measures of Spatial Autocorrelation",
    "section": "3.4 Global Spatial Autocorrelation: Geary’s",
    "text": "3.4 Global Spatial Autocorrelation: Geary’s\n\n3.4.1 Computing Monte Carlo Geary’s C\nThe code chunk below performs permutation test for Geary’s C statistic by using geary.mc() of spdep.\n\nset.seed(1234)\nbperm = geary.mc(hunan$GDPPC,\n                 listw=rswm_q,\n                 nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n3.4.2 Visualising the Monte Carlo Geary’s C\n\nmean(bperm$res[1:999])\n\n[1] 1.004402\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.007436493\n\n\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#spatial-correlogram",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#spatial-correlogram",
    "title": "Hands-On Exercise 7: Global Measures of Spatial Autocorrelation",
    "section": "3.5 Spatial Correlogram",
    "text": "3.5 Spatial Correlogram\nSpatial correlograms are great to examine patterns of spatial autocorrelation in your data.\n\n3.5.1 Compute Moran’s I correlogram\nIn the code chunk below, sp.correlogram() of spdep pacakage.\n\nMI_corr <- sp.correlogram(wm_q,\n                          hunan$GDPPC,\n                          order = 6,\n                          method=\"I\",\n                          style = \"W\")\nplot(MI_corr)\n\n\n\n\nPlotting shows the output but does not provide the full interpretation as each autocorrelation value is not statistically significant. The code chunk below shows each point and their statistical significance.\n\nprint(MI_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n3.5.2 Compute Geary’s correlogram and plot\n\nGC_corr <- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#cluster-and-outlier-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#cluster-and-outlier-analysis",
    "title": "Hands-On Exercise 7: Global Measures of Spatial Autocorrelation",
    "section": "4.1 Cluster and Outlier Analysis",
    "text": "4.1 Cluster and Outlier Analysis\n\n4.1.1 Computing local Moran’s I\nTo compute local Moran’s I, the localmoran() function of spdep will be used.\nThe code chunks below are used to compute local Moran’s I\n\nfips <- order(hunan$County)\nlocalMI <-localmoran(hunan$GDPPC, rswm_q)\nhead(localMI)\n\n            Ii          E.Ii       Var.Ii        Z.Ii Pr(z != E(Ii))\n1 -0.001468468 -2.815006e-05 4.723841e-04 -0.06626904      0.9471636\n2  0.025878173 -6.061953e-04 1.016664e-02  0.26266425      0.7928094\n3 -0.011987646 -5.366648e-03 1.133362e-01 -0.01966705      0.9843090\n4  0.001022468 -2.404783e-07 5.105969e-06  0.45259801      0.6508382\n5  0.014814881 -6.829362e-05 1.449949e-03  0.39085814      0.6959021\n6 -0.038793829 -3.860263e-04 6.475559e-03 -0.47728835      0.6331568\n\n\nlocalmoran() function returns a matrix of values whose columns are:\n\nIi: the local Moran’s I statistics\nE.Ii: the expectation of local moran statistic under the randomisation hypothesis\nVar.Ii: the variance of local moran statistic under the randomisation hypothesis\nZ.Ii:the standard deviate of local moran statistic\nPr(): the p-value of local moran statistic\n\nThe code chunk below list the content of the local Moran matrix\n\nprintCoefmat(data.frame(localMI[fips,],\n                        row.names =hunan$County[fips]),\n             check.names=FALSE)\n\n                       Ii        E.Ii      Var.Ii        Z.Ii Pr.z....E.Ii..\nAnhua         -2.2493e-02 -5.0048e-03  5.8235e-02 -7.2467e-02         0.9422\nAnren         -3.9932e-01 -7.0111e-03  7.0348e-02 -1.4791e+00         0.1391\nAnxiang       -1.4685e-03 -2.8150e-05  4.7238e-04 -6.6269e-02         0.9472\nBaojing        3.4737e-01 -5.0089e-03  8.3636e-02  1.2185e+00         0.2230\nChaling        2.0559e-02 -9.6812e-04  2.7711e-02  1.2932e-01         0.8971\nChangning     -2.9868e-05 -9.0010e-09  1.5105e-07 -7.6828e-02         0.9388\nChangsha       4.9022e+00 -2.1348e-01  2.3194e+00  3.3590e+00         0.0008\nChengbu        7.3725e-01 -1.0534e-02  2.2132e-01  1.5895e+00         0.1119\nChenxi         1.4544e-01 -2.8156e-03  4.7116e-02  6.8299e-01         0.4946\nCili           7.3176e-02 -1.6747e-03  4.7902e-02  3.4200e-01         0.7324\nDao            2.1420e-01 -2.0824e-03  4.4123e-02  1.0297e+00         0.3032\nDongan         1.5210e-01 -6.3485e-04  1.3471e-02  1.3159e+00         0.1882\nDongkou        5.2918e-01 -6.4461e-03  1.0748e-01  1.6338e+00         0.1023\nFenghuang      1.8013e-01 -6.2832e-03  1.3257e-01  5.1198e-01         0.6087\nGuidong       -5.9160e-01 -1.3086e-02  3.7003e-01 -9.5104e-01         0.3416\nGuiyang        1.8240e-01 -3.6908e-03  3.2610e-02  1.0305e+00         0.3028\nGuzhang        2.8466e-01 -8.5054e-03  1.4152e-01  7.7931e-01         0.4358\nHanshou        2.5878e-02 -6.0620e-04  1.0167e-02  2.6266e-01         0.7928\nHengdong       9.9964e-03 -4.9063e-04  6.7742e-03  1.2742e-01         0.8986\nHengnan        2.8064e-02 -3.2160e-04  3.7597e-03  4.6294e-01         0.6434\nHengshan      -5.8201e-03 -3.0437e-05  5.1076e-04 -2.5618e-01         0.7978\nHengyang       6.2997e-02 -1.3046e-03  2.1865e-02  4.3486e-01         0.6637\nHongjiang      1.8790e-01 -2.3019e-03  3.1725e-02  1.0678e+00         0.2856\nHuarong       -1.5389e-02 -1.8667e-03  8.1030e-02 -4.7503e-02         0.9621\nHuayuan        8.3772e-02 -8.5569e-04  2.4495e-02  5.4072e-01         0.5887\nHuitong        2.5997e-01 -5.2447e-03  1.1077e-01  7.9685e-01         0.4255\nJiahe         -1.2431e-01 -3.0550e-03  5.1111e-02 -5.3633e-01         0.5917\nJianghua       2.8651e-01 -3.8280e-03  8.0968e-02  1.0204e+00         0.3076\nJiangyong      2.4337e-01 -2.7082e-03  1.1746e-01  7.1800e-01         0.4728\nJingzhou       1.8270e-01 -8.5106e-04  2.4363e-02  1.1759e+00         0.2396\nJinshi        -1.1988e-02 -5.3666e-03  1.1334e-01 -1.9667e-02         0.9843\nJishou        -2.8680e-01 -2.6305e-03  4.4028e-02 -1.3543e+00         0.1756\nLanshan        6.3334e-02 -9.6365e-04  2.0441e-02  4.4972e-01         0.6529\nLeiyang        1.1581e-02 -1.4948e-04  2.5082e-03  2.3422e-01         0.8148\nLengshuijiang -1.7903e+00 -8.2129e-02  2.1598e+00 -1.1623e+00         0.2451\nLi             1.0225e-03 -2.4048e-07  5.1060e-06  4.5260e-01         0.6508\nLianyuan      -1.4672e-01 -1.8983e-03  1.9145e-02 -1.0467e+00         0.2952\nLiling         1.3774e+00 -1.5097e-02  4.2601e-01  2.1335e+00         0.0329\nLinli          1.4815e-02 -6.8294e-05  1.4499e-03  3.9086e-01         0.6959\nLinwu         -2.4621e-03 -9.0703e-06  1.9258e-04 -1.7676e-01         0.8597\nLinxiang       6.5904e-02 -2.9028e-03  2.5470e-01  1.3634e-01         0.8916\nLiuyang        3.3688e+00 -7.7502e-02  1.5180e+00  2.7972e+00         0.0052\nLonghui        8.0801e-01 -1.1377e-02  1.5538e-01  2.0787e+00         0.0376\nLongshan       7.5663e-01 -1.1100e-02  3.1449e-01  1.3690e+00         0.1710\nLuxi           1.8177e-01 -2.4855e-03  3.4249e-02  9.9561e-01         0.3194\nMayang         2.1852e-01 -5.8773e-03  9.8049e-02  7.1663e-01         0.4736\nMiluo          1.8704e+00 -1.6927e-02  2.7925e-01  3.5715e+00         0.0004\nNan           -9.5789e-03 -4.9497e-04  6.8341e-03 -1.0988e-01         0.9125\nNingxiang      1.5607e+00 -7.3878e-02  8.0012e-01  1.8274e+00         0.0676\nNingyuan       2.0910e-01 -7.0884e-03  8.2306e-02  7.5356e-01         0.4511\nPingjiang     -9.8964e-01 -2.6457e-03  5.6027e-02 -4.1698e+00         0.0000\nQidong         1.1806e-01 -2.1207e-03  2.4747e-02  7.6396e-01         0.4449\nQiyang         6.1966e-02 -7.3374e-04  8.5743e-03  6.7712e-01         0.4983\nRucheng       -3.6992e-01 -8.8999e-03  2.5272e-01 -7.1814e-01         0.4727\nSangzhi        2.5053e-01 -4.9470e-03  6.8000e-02  9.7972e-01         0.3272\nShaodong      -3.2659e-02 -3.6592e-05  5.0546e-04 -1.4510e+00         0.1468\nShaoshan       2.1223e+00 -5.0227e-02  1.3668e+00  1.8583e+00         0.0631\nShaoyang       5.9499e-01 -1.1253e-02  1.3012e-01  1.6807e+00         0.0928\nShimen        -3.8794e-02 -3.8603e-04  6.4756e-03 -4.7729e-01         0.6332\nShuangfeng     9.2835e-03 -2.2867e-03  3.1516e-02  6.5174e-02         0.9480\nShuangpai      8.0591e-02 -3.1366e-04  8.9838e-03  8.5358e-01         0.3933\nSuining        3.7585e-01 -3.5933e-03  4.1870e-02  1.8544e+00         0.0637\nTaojiang      -2.5394e-01 -1.2395e-03  1.4477e-02 -2.1002e+00         0.0357\nTaoyuan        1.4729e-02 -1.2039e-04  8.5103e-04  5.0903e-01         0.6107\nTongdao        4.6482e-01 -6.9870e-03  1.9879e-01  1.0582e+00         0.2900\nWangcheng      4.4220e+00 -1.1067e-01  1.3596e+00  3.8873e+00         0.0001\nWugang         7.1003e-01 -7.8144e-03  1.0710e-01  2.1935e+00         0.0283\nXiangtan       2.4530e-01 -3.6457e-04  3.2319e-03  4.3213e+00         0.0000\nXiangxiang     2.6271e-01 -1.2703e-03  2.1290e-02  1.8092e+00         0.0704\nXiangyin       5.4525e-01 -4.7442e-03  7.9236e-02  1.9539e+00         0.0507\nXinhua         1.1810e-01 -6.2649e-03  8.6001e-02  4.2409e-01         0.6715\nXinhuang       1.5725e-01 -4.1820e-03  3.6648e-01  2.6667e-01         0.7897\nXinning        6.8928e-01 -9.6674e-03  2.0328e-01  1.5502e+00         0.1211\nXinshao        5.7578e-02 -8.5932e-03  1.1769e-01  1.9289e-01         0.8470\nXintian       -7.4050e-03 -5.1493e-03  1.0877e-01 -6.8395e-03         0.9945\nXupu           3.2406e-01 -5.7468e-03  5.7735e-02  1.3726e+00         0.1699\nYanling       -6.9021e-02 -5.9211e-04  9.9306e-03 -6.8667e-01         0.4923\nYizhang       -2.6844e-01 -2.2463e-03  4.7588e-02 -1.2202e+00         0.2224\nYongshun       6.3064e-01 -1.1350e-02  1.8830e-01  1.4795e+00         0.1390\nYongxing       4.3411e-01 -9.0735e-03  1.5088e-01  1.1409e+00         0.2539\nYou            7.8750e-02 -7.2728e-03  1.2116e-01  2.4714e-01         0.8048\nYuanjiang      2.0004e-04 -1.7760e-04  2.9798e-03  6.9181e-03         0.9945\nYuanling       8.7298e-03 -2.2981e-06  2.3221e-05  1.8121e+00         0.0700\nYueyang        4.1189e-02 -1.9768e-04  2.3113e-03  8.6085e-01         0.3893\nZhijiang       1.0476e-01 -7.8123e-04  1.3100e-02  9.2214e-01         0.3565\nZhongfang     -2.2685e-01 -2.1455e-03  3.5927e-02 -1.1855e+00         0.2358\nZhuzhou        3.2864e-01 -5.2432e-04  7.2391e-03  3.8688e+00         0.0001\nZixing        -7.6849e-01 -8.8210e-02  9.4057e-01 -7.0144e-01         0.4830\n\n\n\n\n4.1.2 Mapping Local Moran’s\n\nhunan.localMI <- cbind(hunan,localMI) %>%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\n\n\n4.1.3 Mapping Local Moran’s I values\nUsing choropleth mapping functions of tmap package, we can plot the local Moran’s I values by using the code chunk below.\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n4.1.4 Mapping local Moran’s I p-values.\nIt may be better to show p-values to see which regions are statistically significant\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n4.1.5 Mapping both local Moran’s I values and p-values\n\nlocalMI.map <- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\", \n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\npvalue.map <- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(localMI.map, pvalue.map, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#creating-a-lisa-cluster-map",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#creating-a-lisa-cluster-map",
    "title": "Hands-On Exercise 7: Global Measures of Spatial Autocorrelation",
    "section": "4.2 Creating a LISA Cluster Map",
    "text": "4.2 Creating a LISA Cluster Map\n\n4.2.1 Plotting Moran scatterplot\n\nnci <- moran.plot(hunan$GDPPC, rswm_q,\n                  labels=as.character(hunan$County), \n                  xlab=\"GDPPC 2012\", \n                  ylab=\"Spatially Lag GDPPC 2012\")\n\n\n\n\n\n\n4.2.2 Plotting Moran scatterplot with standardised variable\nFirst we will use scale() to centers and scales the variable. Here centering is done by subtracting the mean (omitting NAs) the corresponding columns, and scaling is done by dividing the (centered) variable by their standard deviations.\n\nhunan$Z.GDPPC <- scale(hunan$GDPPC) %>% \n  as.vector \n\nas.vector() is added to make sure the data type is a vector that can be map neatly into a dataframe.\nWe can then plot the scatter plot using the code chunk below.\n\nnci2 <- moran.plot(hunan$Z.GDPPC, rswm_q,\n                   labels=as.character(hunan$County),\n                   xlab=\"z-GDPPC 2012\", \n                   ylab=\"Spatially Lag z-GDPPC 2012\")\n\n\n\n\n\n\n4.2.3 Preparing LISA map classes\nThe code chunks below show the steps to prepare a LISA cluster map\n\nquadrant <- vector(mode=\"numeric\",\n                   length=nrow(localMI))\n\nNext, derive the spatially lagged variable of interest and centres the spatially lagged variable around its mean.\n\nhunan$lag_GDPPC <- lag.listw(rswm_q, hunan$GDPPC)\nDV <- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \n\nThis is followed by centering the local Moran’s around the mean\n\nLM_I <- localMI[,1] - mean(localMI[,1])\n\nNext, we can set the statistical significance level for the local Moran\n\nsignif <- 0.05\n\n\nquadrant[DV <0 & LM_I>0] <- 1\nquadrant[DV >0 & LM_I<0] <- 2\nquadrant[DV <0 & LM_I<0] <- 3  \nquadrant[DV >0 & LM_I>0] <- 4      \n\n\nquadrant[localMI[,5]>signif] <- 0\n\nCombined everything above into the codechunk below\n\nquadrant <- vector(mode=\"numeric\",length=nrow(localMI))\nhunan$lag_GDPPC <- lag.listw(rswm_q, hunan$GDPPC)\nDV <- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \nLM_I <- localMI[,1]   \nsignif <- 0.05       \nquadrant[DV <0 & LM_I>0] <- 1\nquadrant[DV >0 & LM_I<0] <- 2\nquadrant[DV <0 & LM_I<0] <- 3  \nquadrant[DV >0 & LM_I>0] <- 4    \nquadrant[localMI[,5]>signif] <- 0\n\n\n\n4.2.4 Plotting LISA map\n\nhunan.localMI$quadrant <- quadrant\ncolors <- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters <- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\n\n\n\nFor effective interpretation, it is better to plot both the local Moran’s I values map and its corresponding p-values map next to each other.\nThe code chunk below will be used to create such visualisation.\n\ngdppc <- qtm(hunan, \"GDPPC\")\n\nhunan.localMI$quadrant <- quadrant\ncolors <- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters <- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap <- tm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\ntmap_arrange(gdppc, LISAmap, \n             asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#hot-spot-and-cold-spot-area-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex07/Hands-on_Ex07.html#hot-spot-and-cold-spot-area-analysis",
    "title": "Hands-On Exercise 7: Global Measures of Spatial Autocorrelation",
    "section": "4.3 Hot Spot and Cold Spot Area Analysis",
    "text": "4.3 Hot Spot and Cold Spot Area Analysis\nBeside detecting clusters and outliers, localised spatial statistics can be used to detect hot/cold spot areas.\nThe term ‘hot spot’ is used to describe a region or value that is higher relative to its surroundings.\n\n4.3.1 Getis Ord’s G-Statistics\n\n4.3.1.1 Deriving distance-based weight matrix\n\nlongitude <- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\n\n\nlatitude <- map_dbl(hunan$geometry,~ st_centroid(.x)[[2]])\n\n\ncoords <- cbind(longitude, latitude)\n\n\n\n4.3.1.2 Determining cut-off distance\n\nReturn a matrix with the indices of points belonging to the set of the k nearest neighbours of each other by using knearneigh() of spdep.\nConvert the knn object returned by knearneigh() into a neighbours list of class nb with a list of integer vectors containing neighbour region number ids by using knn2nb().\nReturn the length of neighbour relationship edges by using nbdists() of spdep. The function returns in the units of the coordinates if the coordinates are projected, in km otherwise.\nRemove the list structure of the returned object by using unlist().\n\n\n#coords <- coordinates(hunan)\nk1 <- knn2nb(knearneigh(coords))\nk1dists <- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\n\n\n4.3.1.3 Computing fixed distance weight matrix\n\nwm_d62 <- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\nNext, nb2listw() is used to convert the nb object into spatial weights object.\n\nwm62_lw <- nb2listw(wm_d62, style = 'B')\nsummary(wm62_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \nLink number distribution:\n\n 1  2  3  4  5  6 \n 6 15 14 26 20  7 \n6 least connected regions:\n6 15 30 32 56 65 with 1 link\n7 most connected regions:\n21 28 35 45 50 52 82 with 6 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1   S2\nB 88 7744 324 648 5440\n\n\n\n\n4.3.1.4 Computing adaptive weight matrix\n\nknn <- knn2nb(knearneigh(coords, k=8))\nknn\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\n\nknn_lw <- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n 8 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 704 1300 23014\n\n\n\n\n\n4.3.2 Computing Gi Statistics\n\n4.3.2.1 Gi statistics using fixed distance\n\nfips <- order(hunan$County)\ngi.fixed <- localG(hunan$GDPPC, wm62_lw)\ngi.fixed\n\n [1]  0.436075843 -0.265505650 -0.073033665  0.413017033  0.273070579\n [6] -0.377510776  2.863898821  2.794350420  5.216125401  0.228236603\n[11]  0.951035346 -0.536334231  0.176761556  1.195564020 -0.033020610\n[16]  1.378081093 -0.585756761 -0.419680565  0.258805141  0.012056111\n[21] -0.145716531 -0.027158687 -0.318615290 -0.748946051 -0.961700582\n[26] -0.796851342 -1.033949773 -0.460979158 -0.885240161 -0.266671512\n[31] -0.886168613 -0.855476971 -0.922143185 -1.162328599  0.735582222\n[36] -0.003358489 -0.967459309 -1.259299080 -1.452256513 -1.540671121\n[41] -1.395011407 -1.681505286 -1.314110709 -0.767944457 -0.192889342\n[46]  2.720804542  1.809191360 -1.218469473 -0.511984469 -0.834546363\n[51] -0.908179070 -1.541081516 -1.192199867 -1.075080164 -1.631075961\n[56] -0.743472246  0.418842387  0.832943753 -0.710289083 -0.449718820\n[61] -0.493238743 -1.083386776  0.042979051  0.008596093  0.136337469\n[66]  2.203411744  2.690329952  4.453703219 -0.340842743 -0.129318589\n[71]  0.737806634 -1.246912658  0.666667559  1.088613505 -0.985792573\n[76]  1.233609606 -0.487196415  1.626174042 -1.060416797  0.425361422\n[81] -0.837897118 -0.314565243  0.371456331  4.424392623 -0.109566928\n[86]  1.364597995 -1.029658605 -0.718000620\nattr(,\"cluster\")\n [1] Low  Low  High High High High High High High Low  Low  High Low  Low  Low \n[16] High High High High Low  High High Low  Low  High Low  Low  Low  Low  Low \n[31] Low  Low  Low  High Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low \n[46] High High Low  Low  Low  Low  High Low  Low  Low  Low  Low  High Low  Low \n[61] Low  Low  Low  High High High Low  High Low  Low  High Low  High High Low \n[76] High Low  Low  Low  Low  Low  Low  High High Low  High Low  Low \nLevels: Low High\nattr(,\"gstari\")\n[1] FALSE\nattr(,\"call\")\nlocalG(x = hunan$GDPPC, listw = wm62_lw)\nattr(,\"class\")\n[1] \"localG\"\n\n\nThe output of localG() is a vector of G or Gstar values, with attributes \"gstari\" set to TRUE or FALSE, \"call\" set to the function call, and class \"localG\".\nThe Gi statistics is represented as a Z-score. Greater values represent a greater intensity of clustering and the direction (positive or negative) indicates high or low clusters.\nNext, we will join the Gi values to their corresponding hunan sf data frame by using the code chunk below.\n\nhunan.gi <- cbind(hunan, as.matrix(gi.fixed)) %>%\n  rename(gstat_fixed = as.matrix.gi.fixed.)\n\n\n\n4.3.2.2 Mapping Gi values with fixed distance weights\n\ngdppc <- qtm(hunan, \"GDPPC\")\n\nGimap <-tm_shape(hunan.gi) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, Gimap, asp=1, ncol=2)\n\n\n\n\n\n\n4.3.2.3 Gi statistics using adaptive distance\n\nfips <- order(hunan$County)\ngi.adaptive <- localG(hunan$GDPPC, knn_lw)\nhunan.gi <- cbind(hunan, as.matrix(gi.adaptive)) %>%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)\n\n\n\n4.3.2.4 Mapping Gi values with adaptive weights\n\ngdppc<- qtm(hunan, \"GDPPC\")\n\nGimap <- tm_shape(hunan.gi) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, \n             Gimap, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html",
    "title": "Hands-On Exercise 9: Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "",
    "text": "In geobusiness and spatial policy, it is a common practice to delineate the market or planning area into homogeneous regions by using multivariate data. In this hands-on exercise, we are interested to delineate Shan State, Myanmar into homogeneous regions by using multiple Information and Communication technology (ICT) measures, namely: Radio, Television, Land line phone, Mobile phone, Computer, and Internet at home.\n\n\n\n\nMyanmar Township Boundary Data (i.e. myanmar_township_boundaries) : This is a GIS data in ESRI shapefile format. It consists of township boundary information of Myanmar. The spatial data are captured in polygon features.\nShan-ICT.csv: This is an extract of The 2014 Myanmar Population and Housing Census Myanmar at the township level.\n\nBoth data sets are download from Myanmar Information Management Unit (MIMU)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html",
    "title": "Hands-On Exercise 8: Geographically Weighted Regression",
    "section": "",
    "text": "Geographically weighted regression (GWR) is a spatial statistical technique that takes non-stationary variables into consideration (e.g., climate; demographic factors; physical environment characteristics) and models the local relationships between these independent variables and an outcome of interest (also known as dependent variable). In this hands-on exercise, you will learn how to build hedonic pricing models by using GWR methods. The dependent variable is the resale prices of condominium in 2015. The independent variables are divided into either structural and locational.\n\n\n\nTwo data sets will be used in this model building exercise, they are:\n\nURA Master Plan subzone boundary in shapefile format (i.e. MP14_SUBZONE_WEB_PL)\ncondo_resale_2015 in csv format (i.e. condo_resale_2015.csv)\n\n\n\n\nBefore we get started, it is important for us to install the necessary R packages into R and launch these R packages into R environment.\nThe R packages needed for this exercise are as follows:\n\nR package for building OLS and performing diagnostics tests\n\nolsrr\n\nR package for calibrating geographical weighted family of models\n\nGWmodel\n\nR package for multivariate data visualisation and analysis\n\ncorrplot\n\nSpatial data handling\n\nsf\n\nAttribute data handling\n\ntidyverse, especially readr, ggplot2 and dplyr\n\nChoropleth mapping\n\ntmap\n\n\nThe code chunks below installs and launches these R packages into R environment.\n\npacman::p_load(olsrr, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary, sfdep)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#convert-aspatial-data-frame-into-sf-object",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#convert-aspatial-data-frame-into-sf-object",
    "title": "Hands-On Exercise 8: Geographically Weighted Regression",
    "section": "3.1 Convert aspatial data frame into sf object",
    "text": "3.1 Convert aspatial data frame into sf object\nAs condo_resale is aspatial, we need to convert it to a sf object.\nNotice that st_transform() of sf package is used to convert the coordinates from wgs84 (i.e. crs:4326) to svy21 (i.e. crs=3414).\n\ncondo_resale.sf <- st_as_sf(condo_resale,\n                            coords = c(\"LONGITUDE\", \"LATITUDE\"),\n                            crs = 4326) %>%\n  st_transform(crs = 3414)\n\n\nhead(condo_resale.sf)\n\nSimple feature collection with 6 features and 21 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 22085.12 ymin: 29951.54 xmax: 41042.56 ymax: 34546.2\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 6 × 22\n  POSTCODE SELLI…¹ AREA_…²   AGE PROX_…³ PROX_…⁴ PROX_…⁵ PROX_…⁶ PROX_…⁷ PROX_…⁸\n     <dbl>   <dbl>   <dbl> <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1   118635 3000000     309    30    7.94   0.166   2.52     6.62   1.77   0.0584\n2   288420 3880000     290    32    6.61   0.280   1.93     7.51   0.545  0.616 \n3   267833 3325000     248    33    6.90   0.429   0.502    6.46   0.378  0.141 \n4   258380 4250000     127     7    4.04   0.395   1.99     4.91   1.68   0.382 \n5   467169 1400000     145    28   11.8    0.119   1.12     6.41   0.565  0.461 \n6   466472 1320000     139    22   10.3    0.125   0.789    5.09   0.781  0.0994\n# … with 12 more variables: PROX_MRT <dbl>, PROX_PARK <dbl>,\n#   PROX_PRIMARY_SCH <dbl>, PROX_TOP_PRIMARY_SCH <dbl>,\n#   PROX_SHOPPING_MALL <dbl>, PROX_SUPERMARKET <dbl>, PROX_BUS_STOP <dbl>,\n#   NO_Of_UNITS <dbl>, FAMILY_FRIENDLY <dbl>, FREEHOLD <dbl>,\n#   LEASEHOLD_99YR <dbl>, geometry <POINT [m]>, and abbreviated variable names\n#   ¹​SELLING_PRICE, ²​AREA_SQM, ³​PROX_CBD, ⁴​PROX_CHILDCARE, ⁵​PROX_ELDERLYCARE,\n#   ⁶​PROX_URA_GROWTH_AREA, ⁷​PROX_HAWKER_MARKET, ⁸​PROX_KINDERGARTEN"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#eda-using-statistical-graph",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#eda-using-statistical-graph",
    "title": "Hands-On Exercise 8: Geographically Weighted Regression",
    "section": "4.1 EDA using statistical graph",
    "text": "4.1 EDA using statistical graph\nWe can plot the distribution of SELLING_PRICE by using appropriate Exploratory Data Analysis (EDA) as shown in the code chunk below.\n\nggplot(data=condo_resale.sf, aes(x=`SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\n\nThe figure above reveals a right skewed distribution. This means that more condominium units were transacted at relative lower prices.\nStatistically, the skewed distribution can be normalised by using log transformation. The code chunk below is used to derive a new variable called LOG_SELLING_PRICE by using a log transformation on the variable SELLING_PRICE. It is performed using mutate() of dplyr package.\n\ncondo_resale.sf <- condo_resale.sf %>%\n  mutate(`LOG_SELLING_PRICE` = log(SELLING_PRICE))\n\nNow we can plot out to see the change\n\nggplot(data=condo_resale.sf, aes(x=`LOG_SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#multiple-histogram-plots-distribution-of-variables",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#multiple-histogram-plots-distribution-of-variables",
    "title": "Hands-On Exercise 8: Geographically Weighted Regression",
    "section": "4.2 Multiple Histogram Plots distribution of variables",
    "text": "4.2 Multiple Histogram Plots distribution of variables\n\nAREA_SQM <- ggplot(data=condo_resale.sf, aes(x= `AREA_SQM`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nAGE <- ggplot(data=condo_resale.sf, aes(x= `AGE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CBD <- ggplot(data=condo_resale.sf, aes(x= `PROX_CBD`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CHILDCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_CHILDCARE`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_ELDERLYCARE <- ggplot(data=condo_resale.sf, aes(x= `PROX_ELDERLYCARE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_URA_GROWTH_AREA <- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_URA_GROWTH_AREA`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_HAWKER_MARKET <- ggplot(data=condo_resale.sf, aes(x= `PROX_HAWKER_MARKET`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_KINDERGARTEN <- ggplot(data=condo_resale.sf, aes(x= `PROX_KINDERGARTEN`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_MRT <- ggplot(data=condo_resale.sf, aes(x= `PROX_MRT`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PARK <- ggplot(data=condo_resale.sf, aes(x= `PROX_PARK`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PRIMARY_SCH <- ggplot(data=condo_resale.sf, aes(x= `PROX_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_TOP_PRIMARY_SCH <- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_TOP_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nggarrange(AREA_SQM, AGE, PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, \n          PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN, PROX_MRT,\n          PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH,\n          ncol = 3, nrow = 4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-statistical-point-map",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-statistical-point-map",
    "title": "Hands-On Exercise 8: Geographically Weighted Regression",
    "section": "4.3 Drawing Statistical Point Map",
    "text": "4.3 Drawing Statistical Point Map\n\ntmap_mode(\"view\")\ntm_shape(mpsz_svy21)+\n  tm_polygons() +\ntm_shape(condo_resale.sf) +  \n  tm_dots(col = \"SELLING_PRICE\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(10,14))\n\n\n\n\n\n\n\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#simple-linear-regression-method",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#simple-linear-regression-method",
    "title": "Hands-On Exercise 8: Geographically Weighted Regression",
    "section": "5.1 Simple Linear Regression Method",
    "text": "5.1 Simple Linear Regression Method\n\ncondo.slr <- lm(SELLING_PRICE ~ AREA_SQM,\n                data = condo_resale.sf)\nsummary(condo.slr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3695815  -391764   -87517   258900 13503875 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -258121.1    63517.2  -4.064 5.09e-05 ***\nAREA_SQM      14719.0      428.1  34.381  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 942700 on 1434 degrees of freedom\nMultiple R-squared:  0.4518,    Adjusted R-squared:  0.4515 \nF-statistic:  1182 on 1 and 1434 DF,  p-value: < 2.2e-16\n\n\nWe will notice that the formula is:\nSELLING_PRICE = -258121.1 + 14719*AREA_SQM\nSince p-value is much smaller than 0.0001, we will reject the null hypothesis that mean is a good estimator of SELLING_PRICE. This will allow us to infer that simple linear regression model above is a good estimator of SELLING_PRICE.\nWe will now visualize the plot\n\nggplot(data=condo_resale.sf,  \n       aes(x=`AREA_SQM`, y=`SELLING_PRICE`)) +\n  geom_point() +\n  geom_smooth(method = lm)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#multiple-linear-regression-method",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#multiple-linear-regression-method",
    "title": "Hands-On Exercise 8: Geographically Weighted Regression",
    "section": "5.2 Multiple Linear Regression Method",
    "text": "5.2 Multiple Linear Regression Method\n\n5.2.1 Visualising relationships of independent variables\nThis is an important step as multicollinearity will create bias and inaccuracy in the model.\n\ncorrplot::corrplot(cor(condo_resale[, 5:23]), diag = FALSE, order = \"AOE\",\n         tl.pos = \"td\", tl.cex = 0.5, method = \"number\", type = \"upper\")\n\n\n\n\nAs we can see, Freehold is highly correlated to LEASE_99YEAR and thus we can just exclude one out of the model building."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-a-hedonic-pricing-model-using-multiple-linear-regression-method",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-a-hedonic-pricing-model-using-multiple-linear-regression-method",
    "title": "Hands-On Exercise 8: Geographically Weighted Regression",
    "section": "5.3 Building a hedonic pricing model using multiple linear regression method",
    "text": "5.3 Building a hedonic pricing model using multiple linear regression method\nThe code chunk below uses lm() to calibrate the multiple linear regression model.\nWe will exclude out POSTCODE, LEASEHOLD_99YR and LOG_SELLING_PRICE and geometry from the model.\n\ncondo.mlr <- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                data=condo_resale.sf)\nsummary(condo.mlr)\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3475964  -293923   -23069   241043 12260381 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(>|t|)    \n(Intercept)           481728.40  121441.01   3.967 7.65e-05 ***\nAREA_SQM               12708.32     369.59  34.385  < 2e-16 ***\nAGE                   -24440.82    2763.16  -8.845  < 2e-16 ***\nPROX_CBD              -78669.78    6768.97 -11.622  < 2e-16 ***\nPROX_CHILDCARE       -351617.91  109467.25  -3.212  0.00135 ** \nPROX_ELDERLYCARE      171029.42   42110.51   4.061 5.14e-05 ***\nPROX_URA_GROWTH_AREA   38474.53   12523.57   3.072  0.00217 ** \nPROX_HAWKER_MARKET     23746.10   29299.76   0.810  0.41782    \nPROX_KINDERGARTEN     147468.99   82668.87   1.784  0.07466 .  \nPROX_MRT             -314599.68   57947.44  -5.429 6.66e-08 ***\nPROX_PARK             563280.50   66551.68   8.464  < 2e-16 ***\nPROX_PRIMARY_SCH      180186.08   65237.95   2.762  0.00582 ** \nPROX_TOP_PRIMARY_SCH    2280.04   20410.43   0.112  0.91107    \nPROX_SHOPPING_MALL   -206604.06   42840.60  -4.823 1.57e-06 ***\nPROX_SUPERMARKET      -44991.80   77082.64  -0.584  0.55953    \nPROX_BUS_STOP         683121.35  138353.28   4.938 8.85e-07 ***\nNO_Of_UNITS             -231.18      89.03  -2.597  0.00951 ** \nFAMILY_FRIENDLY       140340.77   47020.55   2.985  0.00289 ** \nFREEHOLD              359913.01   49220.22   7.312 4.38e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 755800 on 1417 degrees of freedom\nMultiple R-squared:  0.6518,    Adjusted R-squared:  0.6474 \nF-statistic: 147.4 on 18 and 1417 DF,  p-value: < 2.2e-16"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#preparing-publication-quality-table-olsrr-method",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#preparing-publication-quality-table-olsrr-method",
    "title": "Hands-On Exercise 8: Geographically Weighted Regression",
    "section": "5.4 Preparing Publication Quality Table: olsrr method",
    "text": "5.4 Preparing Publication Quality Table: olsrr method\nIt is important to revise the model after looking at which variables are significant and which are not.\nThe code chunk below showcases the adjusted linear regression model:\n\ncondo.mlr1 <- lm(formula = SELLING_PRICE ~ \n                   AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n                   PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n                   PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL +\n                   PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD,\n                 data=condo_resale.sf)\nols_regress(condo.mlr1)\n\n                             Model Summary                               \n------------------------------------------------------------------------\nR                       0.807       RMSE                     755957.289 \nR-Squared               0.651       Coef. Var                    43.168 \nAdj. R-Squared          0.647       MSE                571471422208.592 \nPred R-Squared          0.638       MAE                      414819.628 \n------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.592                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n-----------------------------------------------------------------------------------------------------------------"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#preparing-publication-quality-table-gtsummary",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#preparing-publication-quality-table-gtsummary",
    "title": "Hands-On Exercise 8: Geographically Weighted Regression",
    "section": "5.5 Preparing Publication Quality Table: gtsummary",
    "text": "5.5 Preparing Publication Quality Table: gtsummary\nThe gtsummary package provides an elegant and flexible way to create publication-ready summary tables in R\n\ntbl_regression(condo.mlr1, intercept = TRUE)\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n<0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n<0.001\n    AGE\n-24,688\n-30,092, -19,284\n<0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n<0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n<0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n<0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n<0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n<0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n<0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n<0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n<0.001\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nWith gtsummary package, model statistics can be included in the report by either appending them to the report table by using add_glance_table() or adding as a table source note by using add_glance_source_note() as shown in the code chunk below.\n\ntbl_regression(condo.mlr1, \n               intercept = TRUE) %>% \n  add_glance_source_note(\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n<0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n<0.001\n    AGE\n-24,688\n-30,092, -19,284\n<0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n<0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n<0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n<0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n<0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n<0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n<0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n<0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n<0.001\n  \n  \n    \n      R² = 0.651; Adjusted R² = 0.647; AIC = 42,967; Statistic = 189; p-value = <0.001; σ = 755,957\n    \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nFor more customisation options, refer to Tutorial: tbl_regression\n\n5.5.1 Checking for multicolinearity\nIn this section, we would like to introduce you a fantastic R package specially programmed for performing OLS regression. It is called olsrr. It provides a collection of very useful methods for building better multiple linear regression models:\n\ncomprehensive regression output\nresidual diagnostics\nmeasures of influence\nheteroskedasticity tests\ncollinearity diagnostics\nmodel fit assessment\nvariable contribution assessment\nvariable selection procedures\n\nIn the code chunk below, the ols_vif_tol() of olsrr package is used to test if there are sign of multicollinearity.\n\nols_vif_tol(condo.mlr1)\n\n              Variables Tolerance      VIF\n1              AREA_SQM 0.8728554 1.145665\n2                   AGE 0.7071275 1.414172\n3              PROX_CBD 0.6356147 1.573280\n4        PROX_CHILDCARE 0.3066019 3.261559\n5      PROX_ELDERLYCARE 0.6598479 1.515501\n6  PROX_URA_GROWTH_AREA 0.7510311 1.331503\n7              PROX_MRT 0.5236090 1.909822\n8             PROX_PARK 0.8279261 1.207837\n9      PROX_PRIMARY_SCH 0.4524628 2.210126\n10   PROX_SHOPPING_MALL 0.6738795 1.483945\n11        PROX_BUS_STOP 0.3514118 2.845664\n12          NO_Of_UNITS 0.6901036 1.449058\n13      FAMILY_FRIENDLY 0.7244157 1.380423\n14             FREEHOLD 0.6931163 1.442759\n\n\n\n\n5.5.2 Test for Non-Linearity\n\nols_plot_resid_fit(condo.mlr1)\n\n\n\n\nThe figure above reveals that most of the data points are scattered around the 0 line, hence we can safely conclude that the relationships between the dependent variable and independent variables are linear.\n\n\n5.5.3 Test for Normality Assumption\n\nols_plot_resid_hist(condo.mlr1)\n\n\n\n\nThe figure reveals that the residual of the multiple linear regression model (i.e. condo.mlr1) is resemble normal distribution.\nA more formal way is to test normality is by refering to the code chunk below\n\nols_test_normality(condo.mlr1)\n\n-----------------------------------------------\n       Test             Statistic       pvalue  \n-----------------------------------------------\nShapiro-Wilk              0.6856         0.0000 \nKolmogorov-Smirnov        0.1366         0.0000 \nCramer-von Mises         121.0768        0.0000 \nAnderson-Darling         67.9551         0.0000 \n-----------------------------------------------\n\n\nThe summary table above reveals that the p-values of the four tests are way smaller than the alpha value of 0.05. Hence we will reject the null hypothesis and infer that there is statistical evidence that the residual are not normally distributed.\n\n\n5.5.4 Testing for Spatial Autocorrelation\nStep 1: We will export the residual of the hedonic pricing model and save it as a dataframe.\n\nmlr.output <- as.data.frame(condo.mlr1$residuals)\n\nStep 2: Join the newly created dataframe with the condo_resale.sf object\n\ncondo_resale.res.sf <- cbind(condo_resale.sf, \n                             condo.mlr1$residuals) %>%\n  rename(`MLR_RES` = `condo.mlr1.residuals`)\n\nStep 3: Convert condo_resale.res.sf from simple feature object into a SpatialPointsDataFrame because spdep package can only process sp conformed spatial data objects.\n\ncondo_resale.sp <- as_Spatial(condo_resale.res.sf)\ncondo_resale.sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1436 \nextent      : 14940.85, 43352.45, 24765.67, 48382.81  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 23\nnames       : POSTCODE, SELLING_PRICE, AREA_SQM, AGE,    PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN,    PROX_MRT,   PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH, PROX_SHOPPING_MALL, ... \nmin values  :    18965,        540000,       34,   0, 0.386916393,    0.004927023,      0.054508623,          0.214539508,        0.051817113,       0.004927023, 0.052779424, 0.029064164,      0.077106132,          0.077106132,                  0, ... \nmax values  :   828833,       1.8e+07,      619,  37, 19.18042832,     3.46572633,      3.949157205,           9.15540001,        5.374348075,       2.229045366,  3.48037319,  2.16104919,      3.928989144,          6.748192062,        3.477433767, ... \n\n\n\ntmap_mode(\"view\")\ntm_shape(mpsz_svy21)+\n  tmap_options(check.and.fix = TRUE) +\n  tm_polygons(alpha = 0.4) +\ntm_shape(condo_resale.res.sf) +  \n  tm_dots(col = \"MLR_RES\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\nThe figure above reveal that there is some signs of spatial autocorrelation\nFirst, compute the distance-based weight matrix by using dnearneigh() function of spdep.\n\nnb <- dnearneigh(coordinates(condo_resale.sp), 0, 1500, longlat = FALSE)\nsummary(nb)\n\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\n\nNext, nb2listw() of spdep package will be used to convert output neighbours lists into spatial weights\n\nnb_lw <- nb2listw(nb, style = 'W')\nsummary(nb_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\nWeights style: W \nWeights constants summary:\n     n      nn   S0       S1       S2\nW 1436 2062096 1436 94.81916 5798.341\n\n\nNext, we can perform the Moran’s I test for residual spatial autocorrelation.\n\nlm.morantest(condo.mlr1,nb_lw)\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD +\nPROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_MRT +\nPROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP +\nNO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, data = condo_resale.sf)\nweights: nb_lw\n\nMoran I statistic standard deviate = 24.366, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n    1.438876e-01    -5.487594e-03     3.758259e-05 \n\n\nThe Global Moran’s I test for residual spatial autocorrelation shows that it’s p-value is less than 0.00000000000000022 which is less than the alpha value of 0.05. Hence, we will reject the null hypothesis that the residuals are randomly distributed.\nSince the Observed Global Moran I = 0.1424418 which is greater than 0, we can infer than the residuals resemble cluster distribution."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-fixed-bandwidth-gwr-model",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-fixed-bandwidth-gwr-model",
    "title": "Hands-On Exercise 8: Geographically Weighted Regression",
    "section": "6.1 Building Fixed Bandwidth GWR Model",
    "text": "6.1 Building Fixed Bandwidth GWR Model\n\n6.1.1 Computing fixed bandwidth\nIn the code chunk below bw.gwr() of GWModel package is used to determine the optimal fixed bandwidth to use in the model. Notice that the argument adaptive is set to FALSE indicates that we are interested to compute the fixed bandwidth.\nThere are two possible approaches can be uused to determine the stopping rule, they are: CV cross-validation approach and AIC corrected (AICc) approach. We define the stopping rule using approach argeement.\n\nbw.fixed <- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                     PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                     PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                     PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                     FAMILY_FRIENDLY + FREEHOLD, \n                   data=condo_resale.sp, \n                   approach=\"CV\", \n                   kernel=\"gaussian\", \n                   adaptive=FALSE, \n                   longlat=FALSE)\n\nFixed bandwidth: 17660.96 CV score: 8.259118e+14 \nFixed bandwidth: 10917.26 CV score: 7.970454e+14 \nFixed bandwidth: 6749.419 CV score: 7.273273e+14 \nFixed bandwidth: 4173.553 CV score: 6.300006e+14 \nFixed bandwidth: 2581.58 CV score: 5.404958e+14 \nFixed bandwidth: 1597.687 CV score: 4.857515e+14 \nFixed bandwidth: 989.6077 CV score: 4.722431e+14 \nFixed bandwidth: 613.7939 CV score: 1.379526e+16 \nFixed bandwidth: 1221.873 CV score: 4.778717e+14 \nFixed bandwidth: 846.0596 CV score: 4.791629e+14 \nFixed bandwidth: 1078.325 CV score: 4.751406e+14 \nFixed bandwidth: 934.7772 CV score: 4.72518e+14 \nFixed bandwidth: 1023.495 CV score: 4.730305e+14 \nFixed bandwidth: 968.6643 CV score: 4.721317e+14 \nFixed bandwidth: 955.7206 CV score: 4.722072e+14 \nFixed bandwidth: 976.6639 CV score: 4.721387e+14 \nFixed bandwidth: 963.7202 CV score: 4.721484e+14 \nFixed bandwidth: 971.7199 CV score: 4.721293e+14 \nFixed bandwidth: 973.6083 CV score: 4.721309e+14 \nFixed bandwidth: 970.5527 CV score: 4.721295e+14 \nFixed bandwidth: 972.4412 CV score: 4.721296e+14 \nFixed bandwidth: 971.2741 CV score: 4.721292e+14 \nFixed bandwidth: 970.9985 CV score: 4.721293e+14 \nFixed bandwidth: 971.4443 CV score: 4.721292e+14 \nFixed bandwidth: 971.5496 CV score: 4.721293e+14 \nFixed bandwidth: 971.3793 CV score: 4.721292e+14 \nFixed bandwidth: 971.3391 CV score: 4.721292e+14 \nFixed bandwidth: 971.3143 CV score: 4.721292e+14 \nFixed bandwidth: 971.3545 CV score: 4.721292e+14 \nFixed bandwidth: 971.3296 CV score: 4.721292e+14 \nFixed bandwidth: 971.345 CV score: 4.721292e+14 \nFixed bandwidth: 971.3355 CV score: 4.721292e+14 \nFixed bandwidth: 971.3413 CV score: 4.721292e+14 \nFixed bandwidth: 971.3377 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3396 CV score: 4.721292e+14 \nFixed bandwidth: 971.3402 CV score: 4.721292e+14 \nFixed bandwidth: 971.3398 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \nFixed bandwidth: 971.3399 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \n\n\nThe result shows that the recommended bandwidth is 971.3405 metres. It is in metres because it follows the coordinate system, where svy is in metres. We notice that the CV score is the smallest and thus it is recommended that we use the corresponding fixed bandwidth.\n\n\n6.1.2 GWModel method - fixed bandwidth\n\ngwr.fixed <- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                       data=condo_resale.sp, \n                       bw=bw.fixed, \n                       kernel = 'gaussian', \n                       longlat = FALSE)\n\n\ngwr.fixed\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2023-04-19 17:11:13 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.fixed, kernel = \"gaussian\", \n    longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(>|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  < 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  < 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  < 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  < 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: < 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Fixed bandwidth: 971.34 \n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -3.5988e+07 -5.1998e+05  7.6780e+05  1.7412e+06\n   AREA_SQM              1.0003e+03  5.2758e+03  7.4740e+03  1.2301e+04\n   AGE                  -1.3475e+05 -2.0813e+04 -8.6260e+03 -3.7784e+03\n   PROX_CBD             -7.7047e+07 -2.3608e+05 -8.3599e+04  3.4646e+04\n   PROX_CHILDCARE       -6.0097e+06 -3.3667e+05 -9.7426e+04  2.9007e+05\n   PROX_ELDERLYCARE     -3.5001e+06 -1.5970e+05  3.1970e+04  1.9577e+05\n   PROX_URA_GROWTH_AREA -3.0170e+06 -8.2013e+04  7.0749e+04  2.2612e+05\n   PROX_MRT             -3.5282e+06 -6.5836e+05 -1.8833e+05  3.6922e+04\n   PROX_PARK            -1.2062e+06 -2.1732e+05  3.5383e+04  4.1335e+05\n   PROX_PRIMARY_SCH     -2.2695e+07 -1.7066e+05  4.8472e+04  5.1555e+05\n   PROX_SHOPPING_MALL   -7.2585e+06 -1.6684e+05 -1.0517e+04  1.5923e+05\n   PROX_BUS_STOP        -1.4676e+06 -4.5207e+04  3.7601e+05  1.1664e+06\n   NO_Of_UNITS          -1.3170e+03 -2.4822e+02 -3.0846e+01  2.5496e+02\n   FAMILY_FRIENDLY      -2.2749e+06 -1.1140e+05  7.6214e+03  1.6107e+05\n   FREEHOLD             -9.2067e+06  3.8074e+04  1.5169e+05  3.7528e+05\n                             Max.\n   Intercept            112794435\n   AREA_SQM                 21575\n   AGE                     434203\n   PROX_CBD               2704604\n   PROX_CHILDCARE         1654086\n   PROX_ELDERLYCARE      38867861\n   PROX_URA_GROWTH_AREA  78515805\n   PROX_MRT               3124325\n   PROX_PARK             18122439\n   PROX_PRIMARY_SCH       4637517\n   PROX_SHOPPING_MALL     1529953\n   PROX_BUS_STOP         11342209\n   NO_Of_UNITS              12907\n   FAMILY_FRIENDLY        1720745\n   FREEHOLD               6073642\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 438.3807 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 997.6193 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 42263.61 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41632.36 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 42515.71 \n   Residual sum of squares: 2.534069e+14 \n   R-square value:  0.8909912 \n   Adjusted R-square value:  0.8430418 \n\n   ***********************************************************************\n   Program stops at: 2023-04-19 17:11:13 \n\n\nThe report shows that the AICc of the gwr is 42263.61 which is significantly smaller than the globel multiple linear regression model of 42967.1."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-adaptive-bandwidth-gwr-model",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#building-adaptive-bandwidth-gwr-model",
    "title": "Hands-On Exercise 8: Geographically Weighted Regression",
    "section": "6.2 Building Adaptive Bandwidth GWR Model",
    "text": "6.2 Building Adaptive Bandwidth GWR Model\nSimilar approach to the fixed bandwidth method, just that the adaptive argument has changed to TRUE.\n\nbw.adaptive <- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE  + \n                        PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE    + \n                        PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                        PROX_PRIMARY_SCH + PROX_SHOPPING_MALL   + PROX_BUS_STOP + \n                        NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                      data=condo_resale.sp, \n                      approach=\"CV\", \n                      kernel=\"gaussian\", \n                      adaptive=TRUE, \n                      longlat=FALSE)\n\nAdaptive bandwidth: 895 CV score: 7.952401e+14 \nAdaptive bandwidth: 561 CV score: 7.667364e+14 \nAdaptive bandwidth: 354 CV score: 6.953454e+14 \nAdaptive bandwidth: 226 CV score: 6.15223e+14 \nAdaptive bandwidth: 147 CV score: 5.674373e+14 \nAdaptive bandwidth: 98 CV score: 5.426745e+14 \nAdaptive bandwidth: 68 CV score: 5.168117e+14 \nAdaptive bandwidth: 49 CV score: 4.859631e+14 \nAdaptive bandwidth: 37 CV score: 4.646518e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \nAdaptive bandwidth: 25 CV score: 4.430816e+14 \nAdaptive bandwidth: 32 CV score: 4.505602e+14 \nAdaptive bandwidth: 27 CV score: 4.462172e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \n\n\nThe result shows that the 30 is the recommended data points to be used.\n\n6.2.1 Constructing adaptive bandwidth GWR Model\n\ngwr.adaptive <- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                            PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE + \n                            PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                            PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP + \n                            NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                          data=condo_resale.sp, bw=bw.adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE, \n                          longlat = FALSE)\n\n\ngwr.adaptive\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2023-04-19 17:11:18 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(>|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  < 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  < 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  < 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  < 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: < 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 30 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -1.3487e+08 -2.4669e+05  7.7928e+05  1.6194e+06\n   AREA_SQM              3.3188e+03  5.6285e+03  7.7825e+03  1.2738e+04\n   AGE                  -9.6746e+04 -2.9288e+04 -1.4043e+04 -5.6119e+03\n   PROX_CBD             -2.5330e+06 -1.6256e+05 -7.7242e+04  2.6624e+03\n   PROX_CHILDCARE       -1.2790e+06 -2.0175e+05  8.7158e+03  3.7778e+05\n   PROX_ELDERLYCARE     -1.6212e+06 -9.2050e+04  6.1029e+04  2.8184e+05\n   PROX_URA_GROWTH_AREA -7.2686e+06 -3.0350e+04  4.5869e+04  2.4613e+05\n   PROX_MRT             -4.3781e+07 -6.7282e+05 -2.2115e+05 -7.4593e+04\n   PROX_PARK            -2.9020e+06 -1.6782e+05  1.1601e+05  4.6572e+05\n   PROX_PRIMARY_SCH     -8.6418e+05 -1.6627e+05 -7.7853e+03  4.3222e+05\n   PROX_SHOPPING_MALL   -1.8272e+06 -1.3175e+05 -1.4049e+04  1.3799e+05\n   PROX_BUS_STOP        -2.0579e+06 -7.1461e+04  4.1104e+05  1.2071e+06\n   NO_Of_UNITS          -2.1993e+03 -2.3685e+02 -3.4699e+01  1.1657e+02\n   FAMILY_FRIENDLY      -5.9879e+05 -5.0927e+04  2.6173e+04  2.2481e+05\n   FREEHOLD             -1.6340e+05  4.0765e+04  1.9023e+05  3.7960e+05\n                            Max.\n   Intercept            18758355\n   AREA_SQM                23064\n   AGE                     13303\n   PROX_CBD             11346650\n   PROX_CHILDCARE        2892127\n   PROX_ELDERLYCARE      2465671\n   PROX_URA_GROWTH_AREA  7384059\n   PROX_MRT              1186242\n   PROX_PARK             2588497\n   PROX_PRIMARY_SCH      3381462\n   PROX_SHOPPING_MALL   38038564\n   PROX_BUS_STOP        12081592\n   NO_Of_UNITS              1010\n   FAMILY_FRIENDLY       2072414\n   FREEHOLD              1813995\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 350.3088 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 1085.691 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 41982.22 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41546.74 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 41914.08 \n   Residual sum of squares: 2.528227e+14 \n   R-square value:  0.8912425 \n   Adjusted R-square value:  0.8561185 \n\n   ***********************************************************************\n   Program stops at: 2023-04-19 17:11:18 \n\n\nThe report shows that the AICc the adaptive distance gwr is 41982.22 which is even smaller than the AICc of the fixed distance gwr of 42263.61."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-gwr-output",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-gwr-output",
    "title": "Hands-On Exercise 8: Geographically Weighted Regression",
    "section": "6.3 Visualising GWR Output",
    "text": "6.3 Visualising GWR Output\nIn addition to regression residuals, the output feature class table includes fields for observed and predicted y values, condition number (cond), Local R2, residuals, and explanatory variable coefficients and standard errors:\n\nCondition Number: this diagnostic evaluates local collinearity. In the presence of strong local collinearity, results become unstable. Results associated with condition numbers larger than 30, may be unreliable.\nLocal R2: these values range between 0.0 and 1.0 and indicate how well the local regression model fits observed y values. Very low values indicate the local model is performing poorly. Mapping the Local R2 values to see where GWR predicts well and where it predicts poorly may provide clues about important variables that may be missing from the regression model.\nPredicted: these are the estimated (or fitted) y values 3. computed by GWR.\nResiduals: to obtain the residual values, the fitted y values are subtracted from the observed y values. Standardized residuals have a mean of zero and a standard deviation of 1. A cold-to-hot rendered map of standardized residuals can be produce by using these values.\nCoefficient Standard Error: these values measure the reliability of each coefficient estimate. Confidence in those estimates are higher when standard errors are small in relation to the actual coefficient values. Large standard errors may indicate problems with local collinearity.\n\nThey are all stored in a SpatialPointsDataFrame or SpatialPolygonsDataFrame object integrated with fit.points, GWR coefficient estimates, y value, predicted values, coefficient standard errors and t-values in its “data” slot in an object called SDF of the output list."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#converting-sdf-into-sf-data.frame",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#converting-sdf-into-sf-data.frame",
    "title": "Hands-On Exercise 8: Geographically Weighted Regression",
    "section": "6.4 Converting SDF into sf data.frame",
    "text": "6.4 Converting SDF into sf data.frame\n\ncondo_resale.sf.adaptive <- st_as_sf(gwr.adaptive$SDF) %>%\n  st_transform(crs=3414)\n\n\ncondo_resale.sf.adaptive.svy21 <- st_transform(condo_resale.sf.adaptive, 3414)\ncondo_resale.sf.adaptive.svy21  \n\nSimple feature collection with 1436 features and 51 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14940.85 ymin: 24765.67 xmax: 43352.45 ymax: 48382.81\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n    Intercept  AREA_SQM        AGE  PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE\n1   2050011.7  9561.892  -9514.634 -120681.9      319266.92       -393417.79\n2   1633128.2 16576.853 -58185.479 -149434.2      441102.18        325188.74\n3   3433608.2 13091.861 -26707.386 -259397.8     -120116.82        535855.81\n4    234358.9 20730.601 -93308.988 2426853.7      480825.28        314783.72\n5   2285804.9  6722.836 -17608.018 -316835.5       90764.78       -137384.61\n6  -3568877.4  6039.581 -26535.592  327306.1     -152531.19       -700392.85\n7  -2874842.4 16843.575 -59166.727 -983577.2     -177810.50       -122384.02\n8   2038086.0  6905.135 -17681.897 -285076.6       70259.40        -96012.78\n9   1718478.4  9580.703 -14401.128  105803.4     -657698.02       -123276.00\n10  3457054.0 14072.011 -31579.884 -234895.4       79961.45        548581.04\n   PROX_URA_GROWTH_AREA    PROX_MRT  PROX_PARK PROX_PRIMARY_SCH\n1            -159980.20  -299742.96 -172104.47        242668.03\n2            -142290.39 -2510522.23  523379.72       1106830.66\n3            -253621.21  -936853.28  209099.85        571462.33\n4           -2679297.89 -2039479.50 -759153.26       3127477.21\n5             303714.81   -44567.05  -10284.62         30413.56\n6             -28051.25   733566.47 1511488.92        320878.23\n7            1397676.38 -2745430.34  710114.74       1786570.95\n8             269368.71   -14552.99   73533.34         53359.73\n9            -361974.72  -476785.32 -132067.59        -40128.92\n10           -150024.38 -1503835.53  574155.47        108996.67\n   PROX_SHOPPING_MALL PROX_BUS_STOP  NO_Of_UNITS FAMILY_FRIENDLY  FREEHOLD\n1          300881.390     1210615.4  104.8290640       -9075.370  303955.6\n2          -87693.378     1843587.2 -288.3441183      310074.664  396221.3\n3         -126732.712     1411924.9   -9.5532945        5949.746  168821.7\n4          -29593.342     7225577.5 -161.3551620     1556178.531 1212515.6\n5           -7490.586      677577.0   42.2659674       58986.951  328175.2\n6          258583.881     1086012.6 -214.3671271      201992.641  471873.1\n7         -384251.210     5094060.5   -0.9212521      359659.512  408871.9\n8          -39634.902      735767.1   30.1741069       55602.506  347075.0\n9          276718.757     2815772.4  675.1615559      -30453.297  503872.8\n10        -454726.822     2123557.0  -21.3044311     -100935.586  213324.6\n         y    yhat    residual CV_Score Stud_residual Intercept_SE AREA_SQM_SE\n1  3000000 2886532   113468.16        0    0.38207013     516105.5    823.2860\n2  3880000 3466801   413198.52        0    1.01433140     488083.5    825.2380\n3  3325000 3616527  -291527.20        0   -0.83780678     963711.4    988.2240\n4  4250000 5435482 -1185481.63        0   -2.84614670     444185.5    617.4007\n5  1400000 1388166    11834.26        0    0.03404453    2119620.6   1376.2778\n6  1320000 1516702  -196701.95        0   -0.72065801   28572883.7   2348.0091\n7  3410000 3266881   143118.77        0    0.41291992     679546.6    893.5893\n8  1420000 1431955   -11955.27        0   -0.03033109    2217773.1   1415.2604\n9  2025000 1832799   192200.83        0    0.52018109     814281.8    943.8434\n10 2550000 2223364   326635.53        0    1.10559735    2410252.0   1271.4073\n      AGE_SE PROX_CBD_SE PROX_CHILDCARE_SE PROX_ELDERLYCARE_SE\n1   5889.782    37411.22          319111.1           120633.34\n2   6226.916    23615.06          299705.3            84546.69\n3   6510.236    56103.77          349128.5           129687.07\n4   6010.511   469337.41          304965.2           127150.69\n5   8180.361   410644.47          698720.6           327371.55\n6  14601.909  5272846.47         1141599.8          1653002.19\n7   8970.629   346164.20          530101.1           148598.71\n8   8661.309   438035.69          742532.8           399221.05\n9  11791.208    89148.35          704630.7           329683.30\n10  9941.980   173532.77          500976.2           281876.74\n   PROX_URA_GROWTH_AREA_SE PROX_MRT_SE PROX_PARK_SE PROX_PRIMARY_SCH_SE\n1                 56207.39    185181.3     205499.6            152400.7\n2                 76956.50    281133.9     229358.7            165150.7\n3                 95774.60    275483.7     314124.3            196662.6\n4                470762.12    279877.1     227249.4            240878.9\n5                474339.56    363830.0     364580.9            249087.7\n6               5496627.21    730453.2    1741712.0            683265.5\n7                371692.97    375511.9     297400.9            344602.8\n8                517977.91    423155.4     440984.4            261251.2\n9                153436.22    285325.4     304998.4            278258.5\n10               239182.57    571355.7     599131.8            331284.8\n   PROX_SHOPPING_MALL_SE PROX_BUS_STOP_SE NO_Of_UNITS_SE FAMILY_FRIENDLY_SE\n1               109268.8         600668.6       218.1258           131474.7\n2                98906.8         410222.1       208.9410           114989.1\n3               119913.3         464156.7       210.9828           146607.2\n4               177104.1         562810.8       361.7767           108726.6\n5               301032.9         740922.4       299.5034           160663.7\n6              2931208.6        1418333.3       602.5571           331727.0\n7               249969.5         821236.4       532.1978           129241.2\n8               351634.0         775038.4       338.6777           171895.1\n9               289872.7         850095.5       439.9037           220223.4\n10              265529.7         631399.2       259.0169           189125.5\n   FREEHOLD_SE Intercept_TV AREA_SQM_TV     AGE_TV PROX_CBD_TV\n1     115954.0    3.9720784   11.614302  -1.615447 -3.22582173\n2     130110.0    3.3460017   20.087361  -9.344188 -6.32792021\n3     141031.5    3.5629010   13.247868  -4.102368 -4.62353528\n4     138239.1    0.5276150   33.577223 -15.524302  5.17080808\n5     210641.1    1.0784029    4.884795  -2.152474 -0.77155660\n6     374347.3   -0.1249043    2.572214  -1.817269  0.06207388\n7     182216.9   -4.2305303   18.849348  -6.595605 -2.84136028\n8     216649.4    0.9189786    4.879056  -2.041481 -0.65080678\n9     220473.7    2.1104224   10.150733  -1.221345  1.18682383\n10    206346.2    1.4343123   11.068059  -3.176418 -1.35360852\n   PROX_CHILDCARE_TV PROX_ELDERLYCARE_TV PROX_URA_GROWTH_AREA_TV PROX_MRT_TV\n1         1.00048819          -3.2612693            -2.846248368 -1.61864578\n2         1.47178634           3.8462625            -1.848971738 -8.92998600\n3        -0.34404755           4.1319138            -2.648105057 -3.40075727\n4         1.57665606           2.4756745            -5.691404992 -7.28705261\n5         0.12990138          -0.4196596             0.640289855 -0.12249416\n6        -0.13361179          -0.4237096            -0.005103357  1.00426206\n7        -0.33542751          -0.8235874             3.760298131 -7.31116712\n8         0.09462126          -0.2405003             0.520038994 -0.03439159\n9        -0.93339393          -0.3739225            -2.359121712 -1.67102293\n10        0.15961128           1.9461735            -0.627237944 -2.63204802\n   PROX_PARK_TV PROX_PRIMARY_SCH_TV PROX_SHOPPING_MALL_TV PROX_BUS_STOP_TV\n1   -0.83749312           1.5923022            2.75358842        2.0154464\n2    2.28192684           6.7019454           -0.88662640        4.4941192\n3    0.66565951           2.9058009           -1.05686949        3.0419145\n4   -3.34061770          12.9836105           -0.16709578       12.8383775\n5   -0.02820944           0.1220998           -0.02488294        0.9145046\n6    0.86781794           0.4696245            0.08821750        0.7656963\n7    2.38773567           5.1844351           -1.53719231        6.2029165\n8    0.16674816           0.2042469           -0.11271635        0.9493299\n9   -0.43301073          -0.1442145            0.95462153        3.3123012\n10   0.95831249           0.3290120           -1.71252687        3.3632555\n   NO_Of_UNITS_TV FAMILY_FRIENDLY_TV FREEHOLD_TV  Local_R2\n1     0.480589953        -0.06902748    2.621347 0.8846744\n2    -1.380026395         2.69655779    3.045280 0.8899773\n3    -0.045279967         0.04058290    1.197050 0.8947007\n4    -0.446007570        14.31276425    8.771149 0.9073605\n5     0.141120178         0.36714544    1.557983 0.9510057\n6    -0.355762335         0.60891234    1.260522 0.9247586\n7    -0.001731033         2.78285441    2.243875 0.8310458\n8     0.089093858         0.32346758    1.602012 0.9463936\n9     1.534793921        -0.13828365    2.285410 0.8380365\n10   -0.082251138        -0.53369623    1.033819 0.9080753\n                    geometry\n1  POINT (22085.12 29951.54)\n2   POINT (25656.84 34546.2)\n3   POINT (23963.99 32890.8)\n4  POINT (27044.28 32319.77)\n5  POINT (41042.56 33743.64)\n6   POINT (39717.04 32943.1)\n7   POINT (28419.1 33513.37)\n8  POINT (40763.57 33879.61)\n9  POINT (23595.63 28884.78)\n10 POINT (24586.56 33194.31)\n\n\n\ngwr.adaptive.output <- as.data.frame(gwr.adaptive$SDF)\ncondo_resale.sf.adaptive <- cbind(condo_resale.res.sf, as.matrix(gwr.adaptive.output))\n\n\nglimpse(condo_resale.sf.adaptive)\n\nRows: 1,436\nColumns: 77\n$ POSTCODE                <dbl> 118635, 288420, 267833, 258380, 467169, 466472…\n$ SELLING_PRICE           <dbl> 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ AREA_SQM                <dbl> 309, 290, 248, 127, 145, 139, 218, 141, 165, 1…\n$ AGE                     <dbl> 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22,…\n$ PROX_CBD                <dbl> 7.941259, 6.609797, 6.898000, 4.038861, 11.783…\n$ PROX_CHILDCARE          <dbl> 0.16597932, 0.28027246, 0.42922669, 0.39473543…\n$ PROX_ELDERLYCARE        <dbl> 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.…\n$ PROX_URA_GROWTH_AREA    <dbl> 6.618741, 7.505109, 6.463887, 4.906512, 6.4106…\n$ PROX_HAWKER_MARKET      <dbl> 1.76542207, 0.54507614, 0.37789301, 1.68259969…\n$ PROX_KINDERGARTEN       <dbl> 0.05835552, 0.61592412, 0.14120309, 0.38200076…\n$ PROX_MRT                <dbl> 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.…\n$ PROX_PARK               <dbl> 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.…\n$ PROX_PRIMARY_SCH        <dbl> 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.…\n$ PROX_TOP_PRIMARY_SCH    <dbl> 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.…\n$ PROX_SHOPPING_MALL      <dbl> 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.…\n$ PROX_SUPERMARKET        <dbl> 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.…\n$ PROX_BUS_STOP           <dbl> 0.10336166, 0.28673408, 0.28504777, 0.29872340…\n$ NO_Of_UNITS             <dbl> 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34…\n$ FAMILY_FRIENDLY         <dbl> 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD                <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ LOG_SELLING_PRICE       <dbl> 14.91412, 15.17135, 15.01698, 15.26243, 14.151…\n$ MLR_RES                 <dbl> -1489099.55, 415494.57, 194129.69, 1088992.71,…\n$ Intercept               <dbl> 2050011.67, 1633128.24, 3433608.17, 234358.91,…\n$ AREA_SQM.1              <dbl> 9561.892, 16576.853, 13091.861, 20730.601, 672…\n$ AGE.1                   <dbl> -9514.634, -58185.479, -26707.386, -93308.988,…\n$ PROX_CBD.1              <dbl> -120681.94, -149434.22, -259397.77, 2426853.66…\n$ PROX_CHILDCARE.1        <dbl> 319266.925, 441102.177, -120116.816, 480825.28…\n$ PROX_ELDERLYCARE.1      <dbl> -393417.795, 325188.741, 535855.806, 314783.72…\n$ PROX_URA_GROWTH_AREA.1  <dbl> -159980.203, -142290.389, -253621.206, -267929…\n$ PROX_MRT.1              <dbl> -299742.96, -2510522.23, -936853.28, -2039479.…\n$ PROX_PARK.1             <dbl> -172104.47, 523379.72, 209099.85, -759153.26, …\n$ PROX_PRIMARY_SCH.1      <dbl> 242668.03, 1106830.66, 571462.33, 3127477.21, …\n$ PROX_SHOPPING_MALL.1    <dbl> 300881.390, -87693.378, -126732.712, -29593.34…\n$ PROX_BUS_STOP.1         <dbl> 1210615.44, 1843587.22, 1411924.90, 7225577.51…\n$ NO_Of_UNITS.1           <dbl> 104.8290640, -288.3441183, -9.5532945, -161.35…\n$ FAMILY_FRIENDLY.1       <dbl> -9075.370, 310074.664, 5949.746, 1556178.531, …\n$ FREEHOLD.1              <dbl> 303955.61, 396221.27, 168821.75, 1212515.58, 3…\n$ y                       <dbl> 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ yhat                    <dbl> 2886531.8, 3466801.5, 3616527.2, 5435481.6, 13…\n$ residual                <dbl> 113468.16, 413198.52, -291527.20, -1185481.63,…\n$ CV_Score                <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Stud_residual           <dbl> 0.38207013, 1.01433140, -0.83780678, -2.846146…\n$ Intercept_SE            <dbl> 516105.5, 488083.5, 963711.4, 444185.5, 211962…\n$ AREA_SQM_SE             <dbl> 823.2860, 825.2380, 988.2240, 617.4007, 1376.2…\n$ AGE_SE                  <dbl> 5889.782, 6226.916, 6510.236, 6010.511, 8180.3…\n$ PROX_CBD_SE             <dbl> 37411.22, 23615.06, 56103.77, 469337.41, 41064…\n$ PROX_CHILDCARE_SE       <dbl> 319111.1, 299705.3, 349128.5, 304965.2, 698720…\n$ PROX_ELDERLYCARE_SE     <dbl> 120633.34, 84546.69, 129687.07, 127150.69, 327…\n$ PROX_URA_GROWTH_AREA_SE <dbl> 56207.39, 76956.50, 95774.60, 470762.12, 47433…\n$ PROX_MRT_SE             <dbl> 185181.3, 281133.9, 275483.7, 279877.1, 363830…\n$ PROX_PARK_SE            <dbl> 205499.6, 229358.7, 314124.3, 227249.4, 364580…\n$ PROX_PRIMARY_SCH_SE     <dbl> 152400.7, 165150.7, 196662.6, 240878.9, 249087…\n$ PROX_SHOPPING_MALL_SE   <dbl> 109268.8, 98906.8, 119913.3, 177104.1, 301032.…\n$ PROX_BUS_STOP_SE        <dbl> 600668.6, 410222.1, 464156.7, 562810.8, 740922…\n$ NO_Of_UNITS_SE          <dbl> 218.1258, 208.9410, 210.9828, 361.7767, 299.50…\n$ FAMILY_FRIENDLY_SE      <dbl> 131474.73, 114989.07, 146607.22, 108726.62, 16…\n$ FREEHOLD_SE             <dbl> 115954.0, 130110.0, 141031.5, 138239.1, 210641…\n$ Intercept_TV            <dbl> 3.9720784, 3.3460017, 3.5629010, 0.5276150, 1.…\n$ AREA_SQM_TV             <dbl> 11.614302, 20.087361, 13.247868, 33.577223, 4.…\n$ AGE_TV                  <dbl> -1.6154474, -9.3441881, -4.1023685, -15.524301…\n$ PROX_CBD_TV             <dbl> -3.22582173, -6.32792021, -4.62353528, 5.17080…\n$ PROX_CHILDCARE_TV       <dbl> 1.000488185, 1.471786337, -0.344047555, 1.5766…\n$ PROX_ELDERLYCARE_TV     <dbl> -3.26126929, 3.84626245, 4.13191383, 2.4756745…\n$ PROX_URA_GROWTH_AREA_TV <dbl> -2.846248368, -1.848971738, -2.648105057, -5.6…\n$ PROX_MRT_TV             <dbl> -1.61864578, -8.92998600, -3.40075727, -7.2870…\n$ PROX_PARK_TV            <dbl> -0.83749312, 2.28192684, 0.66565951, -3.340617…\n$ PROX_PRIMARY_SCH_TV     <dbl> 1.59230221, 6.70194543, 2.90580089, 12.9836104…\n$ PROX_SHOPPING_MALL_TV   <dbl> 2.753588422, -0.886626400, -1.056869486, -0.16…\n$ PROX_BUS_STOP_TV        <dbl> 2.0154464, 4.4941192, 3.0419145, 12.8383775, 0…\n$ NO_Of_UNITS_TV          <dbl> 0.480589953, -1.380026395, -0.045279967, -0.44…\n$ FAMILY_FRIENDLY_TV      <dbl> -0.06902748, 2.69655779, 0.04058290, 14.312764…\n$ FREEHOLD_TV             <dbl> 2.6213469, 3.0452799, 1.1970499, 8.7711485, 1.…\n$ Local_R2                <dbl> 0.8846744, 0.8899773, 0.8947007, 0.9073605, 0.…\n$ coords.x1               <dbl> 22085.12, 25656.84, 23963.99, 27044.28, 41042.…\n$ coords.x2               <dbl> 29951.54, 34546.20, 32890.80, 32319.77, 33743.…\n$ geometry                <POINT [m]> POINT (22085.12 29951.54), POINT (25656.…\n\n\n\nsummary(gwr.adaptive$SDF$yhat)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n  171347  1102001  1385528  1751842  1982307 13887901"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-local-r2",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-local-r2",
    "title": "Hands-On Exercise 8: Geographically Weighted Regression",
    "section": "6.5 Visualising local R2",
    "text": "6.5 Visualising local R2\n\ntmap_mode(\"view\")\ntm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"Local_R2\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-coefficient-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#visualising-coefficient-estimates",
    "title": "Hands-On Exercise 8: Geographically Weighted Regression",
    "section": "6.6 Visualising coefficient estimates",
    "text": "6.6 Visualising coefficient estimates\n\ntmap_mode(\"view\")\nAREA_SQM_SE <- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_SE\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\nAREA_SQM_TV <- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_TV\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\ntmap_arrange(AREA_SQM_SE, AREA_SQM_TV, \n             asp=1, ncol=2,\n             sync = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\n\n6.6.1 Plotting by URA Planning Region\n\ntm_shape(mpsz_svy21[mpsz_svy21$REGION_N==\"CENTRAL REGION\", ])+\n  tm_polygons()+\ntm_shape(condo_resale.sf.adaptive) + \n  tm_bubbles(col = \"Local_R2\",\n           size = 0.15,\n           border.col = \"gray60\",\n           border.lwd = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "title": "Hands-on Exercise 6: Spatial Weights and Application",
    "section": "",
    "text": "Load packages into R\n\npacman::p_load(sf, spdep, tidyverse, knitr, tmap)\n\n\n\n\n\n\n\nhunan <- st_read(dsn = \"data/geospatial/\", \n                 layer= \"Hunan\")\n\nReading layer `Hunan' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Hands-on_Ex/Hands-on_Ex06/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n\nThe code chunk below joins hunan and hunan2012 via the left_join() of dplyr package. They are automatically joined by “County”.\n\nhunan <- left_join(hunan, hunan2012) %>%\n  select(1:4, 7, 15)\n\n\n\n\n\n\nbasemap <- tm_shape(hunan) +\n  tm_polygons() + \n  tm_text(\"NAME_3\", size = 0.5)\ngdppc <- qtm(hunan, \"GDPPC\")\ntmap_arrange(basemap, gdppc, asp = 1, ncol = 2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#computing-queen-contiguity-based-neighbours",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#computing-queen-contiguity-based-neighbours",
    "title": "Hands-on Exercise 6: Spatial Weights and Application",
    "section": "2.1 Computing (QUEEN) contiguity based neighbours",
    "text": "2.1 Computing (QUEEN) contiguity based neighbours\nThe code chunk below is used to compute Queen contiguity weight matrix.\n\nwm_q <- poly2nb(hunan, queen = TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nThe summary report above shows that there are 88 area units, with area unit no. 85 is connected to 11 other area unit.\nFor each polygon in our polygon object, wm_q lists all neighboring polygons and its corresponding links.\n\nwm_q[[1]]\n\n[1]  2  3  4 57 85\n\n\nPolygon 1 has 5 neighbors and the numbers represent the polygon IDs.\n\nhunan$County[1]\n\n[1] \"Anxiang\"\n\n\nOutput reveals that Polygon ID=1 is Anxiang\nTo reveal the county names of the five neighboring polyons, the code chunk below does that.\n\nhunan$NAME_3[c(2,3,4,57,85)]\n\n[1] \"Hanshou\" \"Jinshi\"  \"Li\"      \"Nan\"     \"Taoyuan\"\n\n\n\nnb1 <- wm_q[[1]]\nnb1 <- hunan$GDPPC[nb1]\nnb1\n\n[1] 20981 34592 24473 21311 22879"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling",
    "section": "",
    "text": "1.3 Getting Started\nInstalling and loading R packages\n\npacman::p_load(sf, tidyverse)\n\n1.4.1 Importing Geospatial Data\n\nmpsz <- st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Hands-on_Ex/Hands-on_Ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n1.4.2 Importing polyline feature data in shapefile\n\ncyclingpath = st_read(dsn = \"data/geospatial\", layer = \"CyclingPathGazette\")\n\nReading layer `CyclingPathGazette' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Hands-on_Ex/Hands-on_Ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2248 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42626.09 ymax: 48948.15\nProjected CRS: SVY21\n\n\n1.4.3 Importing GIS data in kml format\n\npreschool = st_read(\"data/geospatial/preschools-location.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Hands-on_Ex/Hands-on_Ex01/data/geospatial/preschools-location.kml' \n  using driver `KML'\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n1.5 Checking the content of a simple feature dataframe\n1.5.1 Working with st_geometry() The function will give you basic information of the feature class.\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\n1.5.2 Working with glimpse() glimpse showcases the rows and column and their respective data types and values\n\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO <int> 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  <chr> \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  <chr> \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     <chr> \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N <chr> \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C <chr> \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   <chr> \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   <chr> \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    <chr> \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D <date> 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     <dbl> 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     <dbl> 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng <dbl> 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area <dbl> 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   <MULTIPOLYGON [m]> MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n\n\n1.5.3 Working with head() Function shows the first n values\n\nhead(mpsz, n = 5)\n\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n\n\n1.6 Plotting Geospatial Data\n\nplot(mpsz)\n\n\n\n\nChoose to plot only the geometry\n\nplot(st_geometry(mpsz))\n\n\n\n\nChoose to plot a specific attribute\n\nplot(mpsz[\"PLN_AREA_N\"])\n\n\n\n\n1.7 Working with Projection\n1.7.1 Assigning EPSG code to a simple feature data frame\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\nEPSG is 9001 which is wrong as it should be 3414. Therefore we need to set EPSG to 3414\n\nmpsz3414 <- st_set_crs(mpsz, 3414)\n\nCheck CSR again\n\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n1.7.2 Transforming the projection of preschool from wgs84 to svy21\n\nst_geometry(preschool)\n\nGeometry set for 1925 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n\n\nChangge Geodetic CRS: WGS 84 to svy21_EPSG 3414\n\npreschool3414 <- st_transform(preschool, crs = 3414)\npreschool3414\n\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 11203.01 ymin: 25596.33 xmax: 45404.24 ymax: 49300.88\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n     Name\n1   kml_1\n2   kml_2\n3   kml_3\n4   kml_4\n5   kml_5\n6   kml_6\n7   kml_7\n8   kml_8\n9   kml_9\n10 kml_10\nescription\n1             <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>CENTRE_NAME</th> <td>BRILLIANT TOTS PTE. LTD.</td> </tr><tr bgcolor=\"\"> <th>CENTRE_CODE</th> <td>PT9334</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESS</th> <td>610, JURONG WEST STREET 65, #01 - 534, S 640610</td> </tr><tr bgcolor=\"\"> <th>POSTAL_CODE</th> <td>640610</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>0523C7904478A63D</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200812235534</td> </tr></table></center>\n2             <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>CENTRE_NAME</th> <td>BUBBLESLAND PLAYHOUSE PTE LTD</td> </tr><tr bgcolor=\"\"> <th>CENTRE_CODE</th> <td>PT7680</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESS</th> <td>238, COMPASSVALE WALK, #01 - 542, S 540238</td> </tr><tr bgcolor=\"\"> <th>POSTAL_CODE</th> <td>540238</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>18BED05A501AA168</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200812235534</td> </tr></table></center>\n3       <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>CENTRE_NAME</th> <td>BUCKET HOUSE PRESCHOOL</td> </tr><tr bgcolor=\"\"> <th>CENTRE_CODE</th> <td>PT9527</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESS</th> <td>39, WOODLANDS CLOSE, #01 - 62, MEGA@WOODLANDS, S 737856</td> </tr><tr bgcolor=\"\"> <th>POSTAL_CODE</th> <td>737856</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>C88B9AC31EE71BF6</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200812235534</td> </tr></table></center>\n4            <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>CENTRE_NAME</th> <td>BUMBLE BEE CHILD CARE CENTRE</td> </tr><tr bgcolor=\"\"> <th>CENTRE_CODE</th> <td>PT3150</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESS</th> <td>369, WOODLANDS AVENUE 1, #01 - 853, S 730369</td> </tr><tr bgcolor=\"\"> <th>POSTAL_CODE</th> <td>730369</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>64AB8FACA8F60129</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200812235534</td> </tr></table></center>\n5               <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>CENTRE_NAME</th> <td>BUSY BEES SINGAPORE PTE LTD</td> </tr><tr bgcolor=\"\"> <th>CENTRE_CODE</th> <td>PT9117</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESS</th> <td>327B, ANCHORVALE ROAD, #01 - 322, S 542327</td> </tr><tr bgcolor=\"\"> <th>POSTAL_CODE</th> <td>542327</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>E1B55AC65B9059E8</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200812235534</td> </tr></table></center>\n6                  <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>CENTRE_NAME</th> <td>BUSY BEES SINGAPORE PTE LTD</td> </tr><tr bgcolor=\"\"> <th>CENTRE_CODE</th> <td>PT9066</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESS</th> <td>211A, PUNGGOL WALK, #01 - 623, S 821211</td> </tr><tr bgcolor=\"\"> <th>POSTAL_CODE</th> <td>821211</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>3B5A4AF2696592AA</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200812235534</td> </tr></table></center>\n7       <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>CENTRE_NAME</th> <td>BUSY BEES SINGAPORE PTE LTD</td> </tr><tr bgcolor=\"\"> <th>CENTRE_CODE</th> <td>PT9479</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESS</th> <td>2, GAMBAS CRESCENT,  - 01-03, NORDCOM II, S 757044</td> </tr><tr bgcolor=\"\"> <th>POSTAL_CODE</th> <td>757044</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>5F5452B568838620</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200812235534</td> </tr></table></center>\n8          <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>CENTRE_NAME</th> <td>BUSY BEES SINGAPORE PTE.LTD</td> </tr><tr bgcolor=\"\"> <th>CENTRE_CODE</th> <td>PT9127</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESS</th> <td>6, SERANGOON NORTH AVENUE 5, #02 - 01, S 554910</td> </tr><tr bgcolor=\"\"> <th>POSTAL_CODE</th> <td>554910</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>3AD4173BBB057D89</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200812235534</td> </tr></table></center>\n9             <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>CENTRE_NAME</th> <td>BUSY BEES SINGAPORE PTE.LTD.</td> </tr><tr bgcolor=\"\"> <th>CENTRE_CODE</th> <td>PT9067</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESS</th> <td>348A, YISHUN AVENUE 11, #01 - 557, S 761348</td> </tr><tr bgcolor=\"\"> <th>POSTAL_CODE</th> <td>761348</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>F4D7A4BDA3CBB15F</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200812235534</td> </tr></table></center>\n10 <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>CENTRE_NAME</th> <td>CAELUM JUNIOR @ BENDEMEER PTE. LTD.</td> </tr><tr bgcolor=\"\"> <th>CENTRE_CODE</th> <td>PT9053</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>ADDRESS</th> <td>70, BENDEMEER ROAD, #02 - 01, LUZERNE, S 339940</td> </tr><tr bgcolor=\"\"> <th>POSTAL_CODE</th> <td>339940</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>D55FC7583E8CCBA7</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20200812235534</td> </tr></table></center>\n                        geometry\n1  POINT Z (13258.34 35611.04 0)\n2  POINT Z (35272.09 41373.42 0)\n3  POINT Z (25050.54 46634.14 0)\n4  POINT Z (22892.48 46127.66 0)\n5  POINT Z (34155.79 41949.13 0)\n6   POINT Z (35414.54 42625.1 0)\n7  POINT Z (26046.98 47205.62 0)\n8  POINT Z (31980.09 39607.05 0)\n9  POINT Z (28879.22 45454.97 0)\n10 POINT Z (31250.89 33171.55 0)\n\n\n1.8 Importing and Converting an Aspatial data\n\nlistings <- read_csv(\"data/aspatial/listings.csv\")\n\n#Imports into a tibble data frame\nlist(listings)\n\n[[1]]\n# A tibble: 3,037 × 75\n       id listing_url    scrap…¹ last_scr…² source name  descr…³ neigh…⁴ pictu…⁵\n    <dbl> <chr>            <dbl> <date>     <chr>  <chr> <chr>   <chr>   <chr>  \n 1  71609 https://www.a… 2.02e13 2022-12-29 city … Ensu… For 3 … <NA>    https:…\n 2  71896 https://www.a… 2.02e13 2022-12-29 city … B&B … <b>The… <NA>    https:…\n 3  71903 https://www.a… 2.02e13 2022-12-29 city … Room… Like y… Quiet … https:…\n 4 275343 https://www.a… 2.02e13 2022-12-29 city … Amaz… Awesom… <NA>    https:…\n 5 275344 https://www.a… 2.02e13 2022-12-29 city … 15 m… Lovely… Bus st… https:…\n 6 289234 https://www.a… 2.02e13 2022-12-29 city … Book… This w… A quie… https:…\n 7 294281 https://www.a… 2.02e13 2022-12-29 city … 5 mi… I have… <NA>    https:…\n 8 324945 https://www.a… 2.02e13 2022-12-29 city … Cozy… Cozy, … <NA>    https:…\n 9 330089 https://www.a… 2.02e13 2022-12-29 city … Cozy… A unit… <NA>    https:…\n10 330095 https://www.a… 2.02e13 2022-12-29 city … 10 m… Cosy, … Near I… https:…\n# … with 3,027 more rows, 66 more variables: host_id <dbl>, host_url <chr>,\n#   host_name <chr>, host_since <date>, host_location <chr>, host_about <chr>,\n#   host_response_time <chr>, host_response_rate <chr>,\n#   host_acceptance_rate <chr>, host_is_superhost <lgl>,\n#   host_thumbnail_url <chr>, host_picture_url <chr>, host_neighbourhood <chr>,\n#   host_listings_count <dbl>, host_total_listings_count <dbl>,\n#   host_verifications <chr>, host_has_profile_pic <lgl>, …\n\n\n1.8.2 Creating a simple feature data frame from an aspatial data frame\n\nlistings_sf <- st_as_sf(listings, coords = c(\"longitude\", \"latitude\"), crs = 4326) |>\n  st_transform(crs = 3414)\n\nglimpse(listings_sf)\n\nRows: 3,037\nColumns: 74\n$ id                                           <dbl> 71609, 71896, 71903, 2753…\n$ listing_url                                  <chr> \"https://www.airbnb.com/r…\n$ scrape_id                                    <dbl> 2.022123e+13, 2.022123e+1…\n$ last_scraped                                 <date> 2022-12-29, 2022-12-29, …\n$ source                                       <chr> \"city scrape\", \"city scra…\n$ name                                         <chr> \"Ensuite Room (Room 1 & 2…\n$ description                                  <chr> \"For 3 rooms.Book room 1&…\n$ neighborhood_overview                        <chr> NA, NA, \"Quiet and view o…\n$ picture_url                                  <chr> \"https://a0.muscache.com/…\n$ host_id                                      <dbl> 367042, 367042, 367042, 1…\n$ host_url                                     <chr> \"https://www.airbnb.com/u…\n$ host_name                                    <chr> \"Belinda\", \"Belinda\", \"Be…\n$ host_since                                   <date> 2011-01-29, 2011-01-29, …\n$ host_location                                <chr> \"Singapore\", \"Singapore\",…\n$ host_about                                   <chr> \"Hi My name is Belinda -H…\n$ host_response_time                           <chr> \"within a few hours\", \"wi…\n$ host_response_rate                           <chr> \"90%\", \"90%\", \"90%\", \"100…\n$ host_acceptance_rate                         <chr> \"100%\", \"100%\", \"100%\", \"…\n$ host_is_superhost                            <lgl> FALSE, FALSE, FALSE, FALS…\n$ host_thumbnail_url                           <chr> \"https://a0.muscache.com/…\n$ host_picture_url                             <chr> \"https://a0.muscache.com/…\n$ host_neighbourhood                           <chr> \"Tampines\", \"Tampines\", \"…\n$ host_listings_count                          <dbl> 6, 6, 6, 46, 46, 6, 7, 46…\n$ host_total_listings_count                    <dbl> 15, 15, 15, 59, 59, 15, 8…\n$ host_verifications                           <chr> \"['email', 'phone']\", \"['…\n$ host_has_profile_pic                         <lgl> TRUE, TRUE, TRUE, TRUE, T…\n$ host_identity_verified                       <lgl> TRUE, TRUE, TRUE, TRUE, T…\n$ neighbourhood                                <chr> NA, NA, \"Singapore, Singa…\n$ neighbourhood_cleansed                       <chr> \"Tampines\", \"Tampines\", \"…\n$ neighbourhood_group_cleansed                 <chr> \"East Region\", \"East Regi…\n$ property_type                                <chr> \"Private room in villa\", …\n$ room_type                                    <chr> \"Private room\", \"Private …\n$ accommodates                                 <dbl> 6, 1, 2, 1, 1, 4, 2, 1, 1…\n$ bathrooms                                    <lgl> NA, NA, NA, NA, NA, NA, N…\n$ bathrooms_text                               <chr> \"1 private bath\", \"Shared…\n$ bedrooms                                     <dbl> 2, 1, 1, 1, 1, 3, 1, 1, N…\n$ beds                                         <dbl> 3, 1, 2, 1, 1, 5, 1, 1, 1…\n$ amenities                                    <chr> \"[\\\"Cooking basics\\\", \\\"R…\n$ price                                        <chr> \"$46,437.00\", \"$81.00\", \"…\n$ minimum_nights                               <dbl> 92, 92, 92, 60, 60, 92, 9…\n$ maximum_nights                               <dbl> 1125, 1125, 1125, 999, 99…\n$ minimum_minimum_nights                       <dbl> 92, 92, 92, 60, 60, 92, 9…\n$ maximum_minimum_nights                       <dbl> 92, 92, 92, 60, 60, 92, 9…\n$ minimum_maximum_nights                       <dbl> 1125, 1125, 1125, 999, 99…\n$ maximum_maximum_nights                       <dbl> 1125, 1125, 1125, 999, 99…\n$ minimum_nights_avg_ntm                       <dbl> 92, 92, 92, 60, 60, 92, 9…\n$ maximum_nights_avg_ntm                       <dbl> 1125, 1125, 1125, 999, 99…\n$ calendar_updated                             <lgl> NA, NA, NA, NA, NA, NA, N…\n$ has_availability                             <lgl> TRUE, TRUE, TRUE, TRUE, T…\n$ availability_30                              <dbl> 0, 0, 30, 0, 0, 0, 30, 0,…\n$ availability_60                              <dbl> 0, 0, 33, 0, 0, 0, 60, 0,…\n$ availability_90                              <dbl> 0, 0, 33, 0, 6, 0, 90, 0,…\n$ availability_365                             <dbl> 242, 242, 305, 273, 281, …\n$ calendar_last_scraped                        <date> 2022-12-29, 2022-12-29, …\n$ number_of_reviews                            <dbl> 20, 24, 47, 22, 14, 12, 1…\n$ number_of_reviews_ltm                        <dbl> 0, 0, 0, 2, 1, 0, 0, 3, 2…\n$ number_of_reviews_l30d                       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ first_review                                 <date> 2011-12-19, 2011-07-30, …\n$ last_review                                  <date> 2020-01-17, 2019-10-13, …\n$ review_scores_rating                         <dbl> 4.44, 4.16, 4.41, 4.40, 4…\n$ review_scores_accuracy                       <dbl> 4.37, 4.22, 4.39, 4.16, 4…\n$ review_scores_cleanliness                    <dbl> 4.00, 4.09, 4.52, 4.26, 4…\n$ review_scores_checkin                        <dbl> 4.63, 4.43, 4.63, 4.47, 4…\n$ review_scores_communication                  <dbl> 4.78, 4.43, 4.64, 4.42, 4…\n$ review_scores_location                       <dbl> 4.26, 4.17, 4.50, 4.53, 4…\n$ review_scores_value                          <dbl> 4.32, 4.04, 4.36, 4.63, 4…\n$ license                                      <chr> NA, NA, NA, \"S0399\", \"S03…\n$ instant_bookable                             <lgl> FALSE, TRUE, FALSE, FALSE…\n$ calculated_host_listings_count               <dbl> 6, 6, 6, 46, 46, 6, 7, 46…\n$ calculated_host_listings_count_entire_homes  <dbl> 0, 0, 0, 2, 2, 0, 1, 2, 2…\n$ calculated_host_listings_count_private_rooms <dbl> 6, 6, 6, 44, 44, 6, 6, 44…\n$ calculated_host_listings_count_shared_rooms  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ reviews_per_month                            <dbl> 0.15, 0.17, 0.33, 0.19, 0…\n$ geometry                                     <POINT [m]> POINT (41972.5 3639…\n\n\n1.9 Geoprocessing with sf package\n1.9.1 Buffering Scenario: The authority is planning to upgrade the exiting cycling path. To do so, they need to acquire 5 metres of reserved land on the both sides of the current cycling path. You are tasked to determine the extend of the land need to be acquired and their total area.\nSolution:\nFirstly, st_buffer() is used to compute the 5 meter buffers around cycling paths\n\nbuffer_cycling <- st_buffer(cyclingpath, dist = 5, nQuadSegs = 30) \n\nThen calculate the area of buffers\n\nbuffer_cycling$AREA <- st_area(buffer_cycling)\n\nLastly sum() is used to rerive total land involved\n\nsum(buffer_cycling$AREA)\n\n1556978 [m^2]\n\n\n1.9.2 Point-in-polygon count Scenario: A pre-school service group want to find out the numbers of pre-schools in each Planning Subzone.\nSolution: Firstly, identify pre-schools located inside each Planning Subzone by using st_intersects(). Next, length() of Base R is used to calculate numbers of pre-schools that fall inside each planning subzone.\n\nmpsz3414$`PreSch Count` <- lengths(st_intersects(mpsz3414, preschool3414)) \n\nShow the summary statistics\n\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    3.00    5.96    9.00   58.00 \n\n\nShow the planning subzone with the most number of school\n\ntop_n(mpsz3414, 1, `PreSch Count`)\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 39655.33 ymin: 35966 xmax: 42940.57 ymax: 38622.37\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      189          2 TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n     REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng\n1 EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39   10180.62\n  SHAPE_Area                       geometry PreSch Count\n1    4339824 MULTIPOLYGON (((42196.76 38...           58\n\n\nFind the density\n\nmpsz3414$Area <- mpsz3414 |>\n  st_area()\n\nmpsz3414 <- mpsz3414 |>\n  mutate(`PreSch Density` = `PreSch Count`/Area *1000000)\n\nmpsz3414\n\nSimple feature collection with 323 features and 18 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry PreSch Count\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...            0\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...            5\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...            0\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...            4\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...            2\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...           10\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...            4\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...            2\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...            6\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...            1\n              Area   PreSch Density\n1  1630379.3 [m^2] 0.000000 [1/m^2]\n2   559816.2 [m^2] 8.931502 [1/m^2]\n3   160807.5 [m^2] 0.000000 [1/m^2]\n4   595428.9 [m^2] 6.717847 [1/m^2]\n5   387429.4 [m^2] 5.162230 [1/m^2]\n6  1030378.8 [m^2] 9.705169 [1/m^2]\n7   551732.0 [m^2] 7.249896 [1/m^2]\n8   290184.7 [m^2] 6.892163 [1/m^2]\n9  1084792.3 [m^2] 5.531013 [1/m^2]\n10  631644.3 [m^2] 1.583170 [1/m^2]\n\n\n1.10 Exploratory Data Analysis\nCreate a histogram\n\nhist(mpsz3414$`PreSch Density`)\n\n\n\n\nUsing ggplot2\n\nmpsz3414 |>\n  ggplot(aes(x = as.numeric(`PreSch Density`))) + \n  geom_histogram(bins=20,color=\"black\",fill = \"light blue\") +\n  labs(title = \"Are pre-school even distributed in Singapore\",\n       subtitle = \"There are many planning sub-zones with a single pre-school, on the other hand, \\nthere are two planning sub-zones with at least 20 pre-schools\", \n       x = \"Pre-school density (per km sq)\",\n       y = \"Frequency\")\n\n\n\n\nUsing ggplot for scatterplot\n\nmpsz3414 |>\n  ggplot(aes(x = as.numeric(`PreSch Density`), y = `PreSch Count`)) + \n  geom_point(color=\"black\",fill = \"light blue\") +\n  xlim(0,40) +\n  ylim(0,40) +\n  labs(title = \"\",\n       x = \"Pre-school density (per km sq)\",\n       y = \"Frequency\")"
  },
  {
    "objectID": "Group_project.html",
    "href": "Group_project.html",
    "title": "Group Project: Spatial Point Pattern Analysis Application",
    "section": "",
    "text": "For IS415 GAA, one of our coursework is working in a group of 3 to create an application using Rshiny that can contribute to the geospatial analytics community.\nOur group decided on the theme “Spatial Point Pattern Analysis Application” and used Seoul as our study area and motivation for building the application.\nWe have also documented our progress through a separate website. Click the link here.\nTo access our Rshiny application directly, click here.\nOur files related to the building and documentation of the application can be found on our group’s github here."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Jun Hao’s IS415-GAA Coursework",
    "section": "",
    "text": "Welcome to IS415 Geospatial Analytics and Applications (GAA)\nThis is the course website of IS415 I study this term.\nYou will find my course work on this website.\nHands-on Exercises and In-class exercises are sections that are taught in this module. For the Take-Home Exercises, it is where I apply what I have learnt into analyzing the given dataset."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "Self-Introduction\n\n\n\n\n\nHi guys! I am Jun Hao, a second year SMU student, majoring in\nQuantitative Economics and Data Science Analytics.\nA hobby of mine is rock climbing and I have a SNCS Level 2 Certification.\nFun Fact: I’m still afraid of heights\n\n\nPurpose of Webpage\nThis webpage showcases the work I have done for IS415: Geospatial Analytics and Applications!\n\nHands On Exercises\nIn class Exercises\nTake Home Assignments\n\n\n\nContact\nI can be contacted via email: junhao.teo.2021@economics.smu.edu.sg, linkedin or my tele, @JHTeo23!"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "title": "Take Home Exercise 1",
    "section": "",
    "text": "Water is an important resource to mankind. Clean and accessible water is critical to human health. It provides a healthy environment, a sustainable economy, reduces poverty and ensures peace and security. Yet over 40% of the global population does not have access to sufficient clean water. By 2025, 1.8 billion people will be living in countries or regions with absolute water scarcity, according to UN-Water. The lack of water poses a major threat to several sectors, including food security. Agriculture uses about 70% of the world’s accessible freshwater.\nDeveloping countries are most affected by water shortages and poor water quality. Up to 80% of illnesses in the developing world are linked to inadequate water and sanitation. Despite technological advancement, providing clean water to the rural community is still a major development issues in many countries globally, especially countries in the Africa continent.\nTo address the issue of providing clean and sustainable water supply to the rural community, a global Water Point Data Exchange (WPdx) project has been initiated. The main aim of this initiative is to collect water point related data from rural areas at the water point or small water scheme level and share the data via WPdx Data Repository, a cloud-based data library. What is so special of this project is that data are collected based on WPDx Data Standard.\nThe data we will be using here are:\n\nAspatial Data\n\nWPdx Global Data Repositories: WPdx+ data set\n\nGeospatial Data\n\nState Boundary GIS: geoBoundaries data set\n\nPopulation Data\n\nhttp://www.geo-ref.net/ph/nga.htm"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#load-geospatial-data-in",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#load-geospatial-data-in",
    "title": "Take Home Exercise 1",
    "section": "3.1 Load Geospatial data in",
    "text": "3.1 Load Geospatial data in\nst_read() from sf package is used to read the geospatial data\n\ngeoNGA2 <- st_read(dsn = \"data/geospatial\", layer = \"nga_admbnda_adm2_osgof_20190417\")\n\nReading layer `nga_admbnda_adm2_osgof_20190417' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Take-Home_Ex/Take-Home_Ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#load-aspatial-data-in",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#load-aspatial-data-in",
    "title": "Take Home Exercise 1",
    "section": "3.2 Load Aspatial Data in",
    "text": "3.2 Load Aspatial Data in\nread_csv() from the tidyverse package is used to read csv type files. The data is then filtered to the studyArea, “Osun”. This is done by using filter() from the dplyr package.\n\nwp_nga <- read_csv(\"data/aspatial/WPDX.csv\") %>%\n  filter(`#clean_adm1` ==\"Osun\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#geospatial-data-wrangling",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#geospatial-data-wrangling",
    "title": "Take Home Exercise 1",
    "section": "4.1 Geospatial Data wrangling",
    "text": "4.1 Geospatial Data wrangling\n\n4.1.1 Check and Amend duplicates\nWe have to check the data for any duplicated names. After checking, there are several duplicates and thus we get their indices out and replace them with the corresponding names.\n\ngeoNGA2$ADM2_EN[duplicated(geoNGA2$ADM2_EN) == TRUE]\n\n[1] \"Bassa\"    \"Ifelodun\" \"Irepodun\" \"Nasarawa\" \"Obi\"      \"Surulere\"\n\n\n\nduplicated_LGA <- geoNGA2$shapeName[duplicated(geoNGA2$shapeName) == TRUE]\n\n# Get all the indices with names that are included in the duplicated LGA names\nduplicated_indices <- which(geoNGA2$shapeName %in% duplicated_LGA)\n\ngeoNGA2$ADM2_EN[94] <- \"Bassa, Kogi\"\ngeoNGA2$ADM2_EN[95] <- \"Bassa, Plateau\"\ngeoNGA2$ADM2_EN[304] <- \"Ifelodun, Kwara\"\ngeoNGA2$ADM2_EN[305] <- \"Ifelodun, Osun\"\ngeoNGA2$ADM2_EN[355] <- \"Irepodun, Kwara\"\ngeoNGA2$ADM2_EN[356] <- \"Irepodun, Osun\"\ngeoNGA2$ADM2_EN[519] <- \"Nasarawa, Kano\"\ngeoNGA2$ADM2_EN[520] <- \"Nasarawa, Nasarawa\"\ngeoNGA2$ADM2_EN[546] <- \"Obi, Benue\"\ngeoNGA2$ADM2_EN[547] <- \"Obi, Nasarawa\"\ngeoNGA2$ADM2_EN[693] <- \"Surulere, Lagos\"\ngeoNGA2$ADM2_EN[694] <- \"Surulere, Oyo\"\n\nThe code chunk below filters out geoNGA2 into Osun state Local Government Area\n\nosun_LGA <- c(\"Aiyedade\",\"Aiyedire\",\"Atakumosa East\",   \"Atakumosa West\",   \n              \"Ede North\",  \"Ede South\",    \"Egbedore\", \"Ejigbo\",   \"Ife Central\",  \n              \"Ife East\",   \"Ife North\",    \"Ife South\",    \"Ifedayo\",  \"Ila\",\n              \"Ifelodun, Osun\",\"Irepodun, Osun\",\"Ilesha East\",  \"Ilesha West\",\n              \"Irewole\",    \"Isokan\",   \"Iwo\",  \"Obokun\",   \"Odo-Otin\", \"Ola-oluwa\",    \n              \"Olorunda\",   \"Oriade\",   \"Orolu\",    \"Osogbo\", \"Boripe\", \"Boluwaduro\")\nosun <- geoNGA2 %>%\n  filter(ADM2_EN %in% osun_LGA)\n\n\n\n4.1.2 Changing Projection System\nWe will use st_crs() from the sf package to check the crs of osun\n\nst_crs(osun)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\nWe can see that currently geoNGA2 is in the projected coordinate systems, EPSG:4326. We have to convert it to Nigeria’s Projected Coordinate System, 26392 by using st_transform() from the sf package. The code chunk below transforms the data to crs = 26392.\n\nosun <- osun %>%\n  st_transform(crs = 26392)\n\n\n\n4.1.3 Plot Geospatial Data\n\nplot(osun)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#aspatial-data-wrangling",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#aspatial-data-wrangling",
    "title": "Take Home Exercise 1",
    "section": "4.2 Aspatial Data wrangling",
    "text": "4.2 Aspatial Data wrangling\n\n4.2.1 Create simple feature on wp_nga\nUsing what we learn on Hands-on Exercise 1, we can create a simple feature using st_as_sf() from the sf package. We have to ensure that the file follows the same crs and therefore we use st_transform again to convert it into crs = 26392.\n\nwp_nga_sf <- st_as_sf(wp_nga, coords = c(\"#lon_deg\", \"#lat_deg\"), crs = 4326) %>%\n  st_transform(crs = 26392)\n\n\n\n4.2.2 Cleaning up NA entries in aspatial data\nBy using the functions in the dplyr package, we can use rename() to rename #status_clean to status_clean, select() to pick the required column variable and replace_na() for replacing NA to unknown.\n\nwp_nga_sf <- wp_nga_sf %>%\n  rename(status_clean = `#status_clean`) %>% \n  dplyr::select(status_clean) %>%\n  mutate(status_clean = replace_na(\n    status_clean, \"unknown\"))\n\n\n\n4.2.3 Filter out functional and non-functional data\nBy using filter() from the dplyr package, we can filter out entries with functional and non-functional water points.\n\nwp_functional <- wp_nga_sf %>%\n    filter(status_clean %in%\n           c(\"Functional\",\n             \"Functional but not in use\",\n             \"Functional but needs repair\"))\n\nwp_nonfunctional <- wp_nga_sf %>%\n  filter(status_clean %in% \n           c(\"Abandoned/Decommissioned\",\n             \"Abandoned\",\n             \"Non-Functional due to dry season\",\n             \"Non-Functional\",\n             \"Non functional due to dry season\"))"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#population-data",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#population-data",
    "title": "Take Home Exercise 1",
    "section": "4.3 Population Data",
    "text": "4.3 Population Data\nWe will load in the population density data of Nigeria. This data will be illustrated in the later sections to show a comparison between population density and the location of the water points.\n\nData\n\nhttp://www.geo-ref.net/ph/nga.htm\n\n\n\n4.3.1 Load Data in and filter relevant rows to Study Area\n\nnga_pop <- read_csv(\"data/pop_data_nga.csv\")\n  \nosun_pop <- nga_pop %>% \n  filter(nga_pop$`State    ` == \"Osun\") %>%\n  rename(ADM2_EN = `Local gov. area▲`, \n         HASC = `HASC    `,\n         Capital = `Capital     `, \n         Population = `Population    `)\n\n\n\n4.3.2 Ensure names match with osun object\n\nosun_pop[1,1] <- \"Aiyedade\"\nosun_pop[3,1] <- \"Atakumosa East\"\nosun_pop[4,1] <- \"Atakumosa West\"\nosun_pop[20,1] <- \"Irepodun, Osun\"\nosun_pop[16,1] <- \"Ifelodun, Osun\"\n\nOnce names have matched, we can merge the tibble as one dataframe\n\nosun_pop_density <- osun %>%\n  left_join(osun_pop, by = \"ADM2_EN\")\n\nWe can then have the population density of Osun by its local government areas (LGA). The code chunk below will generate the plot. Further down, we will discuss why having a population density mapping is important in formulating our hypothesis claim.\nThe code chunk below will display the cartographic map using the tmap package.\n\ntmap_mode(\"plot\")\n\ntm_shape(osun_pop_density) +\n  tm_fill(\"Density\",\n          n = 8,\n          style = \"quantile\",\n          palette = \"-Blues\",\n          title = \"Population Density\") +\n  tm_layout(main.title = \"Population Density of Osun LGA\",\n            main.title.position = \"center\",\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_grid(alpha =0.2) +\ntm_shape(wp_functional) +\n  tm_dots(col=\"green\",\n          size=0.01,\n          border.col=\"black\",\n           border.lwd=0.5,\n          alpha=0.5)+\n  tm_credits(\"Source: http://www.geo-ref.net/ph/nga.htm\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\ntm_shape(osun_pop_density) +\n  tm_fill(\"Density\",\n          n = 8,\n          style = \"quantile\",\n          palette = \"-Blues\",\n          title = \"Population Density\") +\n  tm_layout(main.title = \"Population Density of Osun LGA\",\n            main.title.position = \"center\",\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_grid(alpha =0.2) +\n  tm_shape(wp_nonfunctional) +\n  tm_dots(col=\"red\",\n          size=0.01,\n          border.col=\"black\",\n           border.lwd=0.5,\n          alpha=0.5)+\n  tm_credits(\"Source: http://www.geo-ref.net/ph/nga.htm\", \n             position = c(\"left\", \"bottom\"))"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#converting-object-to-relevant-datatype",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#converting-object-to-relevant-datatype",
    "title": "Take Home Exercise 1",
    "section": "5.1 Converting object to relevant datatype",
    "text": "5.1 Converting object to relevant datatype\nWe have to convert sf to sp then to ppp so that it is readable by the spatstat package\nThe code chunks in this section are using as() from the sf package to convert objects to their respective Spatial class.\n\n5.1.1 Convert sf to sp Spatial class\n\nosun_spatial <- as(osun, \"Spatial\")\n\nwp_functional_spatial <- as(wp_functional, \"Spatial\")\nwp_nonfunctional_spatial <- as(wp_nonfunctional, \"Spatial\")\n\n\n\n5.1.2 Converting the Spatial point data frame into generic SP format\n\nosun_sp <- as(osun_spatial, \"SpatialPolygons\")\n\nwp_func_sp <- as(wp_functional_spatial, \"SpatialPoints\")\n\nwp_nonfunc_sp <- as(wp_nonfunctional_spatial, \"SpatialPoints\")\n\n\n\n5.1.3 Convert sp to spatstat ppp format\n\nwp_func_ppp <- as(wp_func_sp, \"ppp\")\nwp_nonfunc_ppp <- as(wp_nonfunc_sp, \"ppp\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#create-owin-object",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#create-owin-object",
    "title": "Take Home Exercise 1",
    "section": "5.2 Create owin object",
    "text": "5.2 Create owin object\n\nosun_owin <- as(osun_sp, \"owin\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#combine-waterpoints-and-study-area-together",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#combine-waterpoints-and-study-area-together",
    "title": "Take Home Exercise 1",
    "section": "5.3 Combine waterpoints and study area together",
    "text": "5.3 Combine waterpoints and study area together\n\nosun_wpfunc <- wp_func_ppp[osun_owin]\n\nosun_wpnonfunc <- wp_nonfunc_ppp[osun_owin]"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#rescaling-to-km",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#rescaling-to-km",
    "title": "Take Home Exercise 1",
    "section": "5.4 Rescaling to “km",
    "text": "5.4 Rescaling to “km\nBefore we go on to calculate the kernal density, we should rescale the data as taught in Hands-on Ex 4 Chapter 5.\n\nosun_wpfunc_km <- rescale(osun_wpfunc, 1000, \"km\")\n\nosun_wpnonfunc_km <- rescale(osun_wpnonfunc, 1000, \"km\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#creating-kernal-density-estimate",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#creating-kernal-density-estimate",
    "title": "Take Home Exercise 1",
    "section": "5.5 Creating Kernal Density Estimate",
    "text": "5.5 Creating Kernal Density Estimate\n\nkde_func<-density(osun_wpfunc_km,\n                  sigma=bw.diggle,\n                  edge=TRUE,\n                  kernel=\"gaussian\")\n\nkde_nonfunc <- density(osun_wpnonfunc_km,\n                       sigma=bw.diggle,\n                       edge= TRUE,\n                       kernel = \"gaussian\")\n\npar(mfrow = c(1,2))\nplot(kde_func, main = \"Functional Water Points\")\nplot(kde_nonfunc, main = \"Non-Functional Water Points\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#convert-kde-output-into-gridded-objects",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#convert-kde-output-into-gridded-objects",
    "title": "Take Home Exercise 1",
    "section": "5.6 Convert KDE output into gridded objects",
    "text": "5.6 Convert KDE output into gridded objects\nFor mapping purposes, we can convert the KDE output into a grid object. To do so, we can use as.SpatialGridDataFrame.im() from maptools package.\n\ngridded_osun_wp <- as.SpatialGridDataFrame.im(kde_func)\ngridded_osun_nwp <-as.SpatialGridDataFrame.im(kde_nonfunc)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#convert-gridded-object-into-raster",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#convert-gridded-object-into-raster",
    "title": "Take Home Exercise 1",
    "section": "5.7 Convert gridded object into raster",
    "text": "5.7 Convert gridded object into raster\nAfter converting the KDE output into a gridded object, we can use raster() from the raster package to then convert it into raster.\n\nosun_wp_raster <- raster(gridded_osun_wp)\nosun_nwp_raster <- raster(gridded_osun_nwp)\n\nosun_wp_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.8948485, 0.9616045  (x, y)\nextent     : 176.5032, 291.0438, 331.4347, 454.5201  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -4.734822e-15, 25.49435  (min, max)\n\nosun_nwp_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.8948485, 0.9616045  (x, y)\nextent     : 176.5032, 291.0438, 331.4347, 454.5201  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -4.082312e-15, 20.49412  (min, max)\n\n\nThe output of the above code chunk shows that crs in both raster object is NA. We have to input the the Projected Coordinate System of Nigeria (crs = 26392) and ensure the measurements are in “km”.\nThis is done via the code chunk below.\n\nprojection(osun_wp_raster) <- CRS(\"+init=EPSG:26392 +units=km\")\nprojection(osun_nwp_raster) <- CRS(\"+init=EPSG:26392 +units=km\")\n\nosun_wp_raster ; osun_nwp_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.8948485, 0.9616045  (x, y)\nextent     : 176.5032, 291.0438, 331.4347, 454.5201  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +a=6378249.145 +rf=293.465 +units=km +no_defs \nsource     : memory\nnames      : v \nvalues     : -4.734822e-15, 25.49435  (min, max)\n\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.8948485, 0.9616045  (x, y)\nextent     : 176.5032, 291.0438, 331.4347, 454.5201  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +a=6378249.145 +rf=293.465 +units=km +no_defs \nsource     : memory\nnames      : v \nvalues     : -4.082312e-15, 20.49412  (min, max)\n\n\nNow, we can see that the crs has been inputted in."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#visualising-the-data",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#visualising-the-data",
    "title": "Take Home Exercise 1",
    "section": "5.8 Visualising the data",
    "text": "5.8 Visualising the data\nThe code chunk below visualizes the raster onto the OpenStreetMap layout and by setting the zoom.limits to 9 and 14, it fixes the zoom limits of the map.\n\ntmap_mode(\"view\") \ntm_basemap(server =\"OpenStreetMap\") + \n  tm_shape(osun_wp_raster) + \n  tm_raster(\"v\") +\n  tm_layout(title = \"Functional Waterpoints Density\", \n            legend.position = c(\"right\", \"Top\"), \n            frame = FALSE) +\n  tm_view(set.zoom.limits =c(9,14))\n\n\n\n\n\n\ntmap_mode(\"view\") \ntm_basemap(server =\"OpenStreetMap\") + \n  tm_shape(osun_nwp_raster) + \n  tm_raster(\"v\") + \n  tm_layout(title = \"Non-Functional Waterpoints Density\", \n            legend.position = c(\"right\", \"Bottom\"), \n            frame = FALSE) +\n  tm_view(set.zoom.limits =c(9,14))"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#advantages-of-kernal-density-map-over-point-map",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#advantages-of-kernal-density-map-over-point-map",
    "title": "Take Home Exercise 1",
    "section": "5.9 Advantages of Kernal Density Map over Point Map",
    "text": "5.9 Advantages of Kernal Density Map over Point Map\nThe advantage of Kernal Density Map is that it clearly shows the intensity of clustering at various points of the map. As compared to a point map, we may be able to identify clustering but to be comparing clusters might prove difficult to the human eye."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#g-function",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#g-function",
    "title": "Take Home Exercise 1",
    "section": "6.1 G-function",
    "text": "6.1 G-function\nThe nearest-neighbour distance is the measure of the distance between a point and its closest neighboring point.\nGest() of spatstat package is used to compute the G function\n\nG_FWP <- Gest(osun_wpfunc, correction = \"border\")\nG_NFWP <- Gest(osun_wpnonfunc, correction = \"border\")\npar(mfrow = c(1,2))\nplot(G_FWP, xlim = c(0,500)) ; plot(G_NFWP, xlim = c(0,500))"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#f-function",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#f-function",
    "title": "Take Home Exercise 1",
    "section": "6.2 F function",
    "text": "6.2 F function\nUnlike the G function, the F function in Fest() is used to measure the distribution of nearest neighbour distances. The code chunk below showcases this:\n\n# Functional Water Point\nF_FWP<- Fest(osun_wpfunc)\nplot(F_FWP) \n\n\n\n\n\n# Non-Functional WaterPoints\nF_NFWP <- Fest(osun_wpnonfunc)\nplot(F_NFWP)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#l-function",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#l-function",
    "title": "Take Home Exercise 1",
    "section": "6.3 L Function",
    "text": "6.3 L Function\nThe L can be obtained via the K function. Sometimes, due to the closeness of K and K(expected), it may be hard to see differences. When such an issue occur, L makes it easier to interpret the result.\nBelow is the transformation of K to L function:\n\n\nL_FWP <- Lest(osun_wpfunc, correction = \"Ripley\")\nplot(L_FWP, .-r ~r, ylab=\"L(d)-r\", xlab =\"d(m)\")\n\n\n\nL_NFWP <- Lest(osun_wpnonfunc, correction = \"Ripley\")\nplot(L_NFWP, .-r ~r, ylab=\"L(d)-r\", xlab =\"d(m)\")\n\n\nFrom the two plots above, we can see that L line is above the L(pois) and thus this indicates clustering. As L line is well above 0 for all distance value, we can say that both functional and non-functional are clustered. As L function is the transformation of K, it is likely to see a very distinct difference between the K and K(expected), whereby K>K(expected) indicates clustering. You can check it out yourself using the code chunk below.\n\nKest_FWP <- Kest(osun_wpfunc, correction = \"Ripley\")\nplot(Kest_FWP)\n\nAdditional Notes (Not relating to the plot):\nIf the L line < 0, it would mean that there is dispersion."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#performing-complete-spatial-randomness-test",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#performing-complete-spatial-randomness-test",
    "title": "Take Home Exercise 1",
    "section": "6.4 Performing Complete Spatial Randomness Test",
    "text": "6.4 Performing Complete Spatial Randomness Test\nFor the purpose of performing the Complete Spatial Randomness Test, we will be using the L_function. we will be using envelope() from spatstat to run our simulation.\nThe null and alternative hypothesis are:\nHo : The distribution of functional waterpoints in Osun State are randomly distributed\nH1 : The distribution of functional waterpoints in Osun State are not randomly distributed\nWe will use the 95% confidence level in our test.\nThe null hypothesis will be rejected if p-value is smaller than the alpha value, 0.05.\n\nL_FWP_test <- envelope(osun_wpfunc, Lest, nsim = 39, rank = 1, glocal= TRUE)\n\nplot(L_FWP_test, xlim = c(0,500))\n\n\n\nL_NFWP_test <- envelope(osun_wpnonfunc, Lest, nsim = 39, rank = 1, glocal= TRUE)\n\nplot(L_NFWP_test, xlim = c(0,500))\n\n\n\n6.4.1 Spatial Point Pattern Analysis Conclusion\nSimulation shows that the black line is outside the 95% Confidence interval for all values of r. We can thus reject the null hypothesis for all values of r.\nThis makes sense as we’ve put together population density with the dot plots of where the functional water points are at. From the population density map, we can see clustering of functional waterpoints on the more densely populated local government areas. A more densely populated region would have a greater need and usage of water and the L function helps to ascertain this claim. This is also evident in the non-functional point as well. As to why there are large clusters of non-functional in densely populated regions, one possible reason could be the inability to match number of usage to its maintenance work. However, more data would be required to ascertain this fact."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#creating-multipoint-ppp",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#creating-multipoint-ppp",
    "title": "Take Home Exercise 1",
    "section": "7.1 Creating multipoint ppp",
    "text": "7.1 Creating multipoint ppp\nWe can set the categorical value as functional and non-functional. We standardize this as within the dataset, there are too many different types of categories.\nThe code chunk below replaces all values in status_clean as “Functional” and “Non-Functional” in their respective sf.\n\nwp_functional$status_clean[1:length(wp_functional$status_clean)] <- \"Functional\"\nwp_nonfunctional$status_clean[1:length(wp_nonfunctional$status_clean)] <- \"Non-Functional\"\n\nAfterwhich, we can combine them together by using bind_rows from dplyr package.\n\nwp_combined <- bind_rows(wp_functional, wp_nonfunctional)\nwp_combined\n\nSimple feature collection with 4809 features and 1 field\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 177285.9 ymin: 340054.1 xmax: 290751 ymax: 450859.7\nProjected CRS: Minna / Nigeria Mid Belt\n# A tibble: 4,809 × 2\n   status_clean            geometry\n * <chr>                <POINT [m]>\n 1 Functional     (212810 386707.6)\n 2 Functional   (228798.9 403822.5)\n 3 Functional   (270497.9 377476.9)\n 4 Functional     (212202 349210.1)\n 5 Functional   (259331.9 399591.4)\n 6 Functional     (195484 404733.2)\n 7 Functional   (221302.3 389473.6)\n 8 Functional   (263254.1 382692.9)\n 9 Functional     (192484.1 405113)\n10 Functional       (252736 373593)\n# … with 4,799 more rows\n\n\nObserve that status_clean is a chr type. We have to convert that into a factor type. The reason for this is because a factor is a variable used to categorize and store data. This is necessary when doing multi-point correlation analysis.\nUse base R as.factor() to convert the variable type.\n\nwp_combined$status_clean <- as.factor(wp_combined$status_clean)\nwp_combined\n\nSimple feature collection with 4809 features and 1 field\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 177285.9 ymin: 340054.1 xmax: 290751 ymax: 450859.7\nProjected CRS: Minna / Nigeria Mid Belt\n# A tibble: 4,809 × 2\n   status_clean            geometry\n * <fct>                <POINT [m]>\n 1 Functional     (212810 386707.6)\n 2 Functional   (228798.9 403822.5)\n 3 Functional   (270497.9 377476.9)\n 4 Functional     (212202 349210.1)\n 5 Functional   (259331.9 399591.4)\n 6 Functional     (195484 404733.2)\n 7 Functional   (221302.3 389473.6)\n 8 Functional   (263254.1 382692.9)\n 9 Functional     (192484.1 405113)\n10 Functional       (252736 373593)\n# … with 4,799 more rows\n\n\nNow we have status_clean as a factor, with categorical values, “Functional” and “Non-Functional”."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#conversion-of-object-type",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#conversion-of-object-type",
    "title": "Take Home Exercise 1",
    "section": "7.2 Conversion of object type",
    "text": "7.2 Conversion of object type\nSame steps that were applied in Kernel Density Analysis are applied here.\n\n7.2.1 Convert sf to sp\n\nwp_combined_sp <- as(wp_combined, \"Spatial\")\n\n\n\n7.2.2 Convert sp to Spatial Points DF\n\nwp_combined_spdf <- as(wp_combined_sp, \"SpatialPointsDataFrame\")\n\n\n\n7.2.3 Convert Spatial Points DF to ppp\n\nwp_combined_ppp <- as(wp_combined_spdf, \"ppp\")\n\n\n\n7.2.4 Combine waterpoints and owin object\n\nwp_combined_owinppp <- wp_combined_ppp[osun_owin]\n\n\n\n7.2.5 Visualizing the data\n\nplot(wp_combined_owinppp, main = \"WaterPoints by Category\", which.marks = \"status_clean\")\n\n\n\n\nFrom the Second-Order Spatial Point Pattern analysis above, we can say that both functional and non-functional water points are not randomly distributed. From here, we would like to find out whether functional and non-functional water points are dependent on each other. Hence, by performing a hypothesis testing, we can find out whether there is spatial dependence between these two categories.\nThe null and alternative hypothesis are:\nHo : The distribution of functional and non-functional water points in Osun State are independent from each other.\nH1 : The distribution of functional and non-functional water points in Osun State are not independent from each other.\nWe will use the 95% confidence level in our test.\nThe null hypothesis will be rejected if p-value is smaller than the alpha value, 0.05.\n\n\n7.2.6 Cross L-Function Analysis\n\nLcross_wp <- envelope(wp_combined_owinppp,\n                      Lcross,\n                      i = \"Functional\",\n                      j = \"Non-Functional\",\n                      correction = \"border\",\n                      nsim = 39)\nplot(Lcross_wp, xlim = c(0,10000))\n\n\n\n\n7.2.7 Cross L Statistical Conclusion\nReferring to the plot above, we can clearly see that 0 < r < 5500 and r > 6800, there is spatial dependence between the two types of waterpoints. At these values, the result is statistically significant as it is outside the 95% confidence interval, which is the grey envelope.\nAs for 5500 < r < 6800, the L(obs) is within the 95% confidence interval and thus there is spatial independence."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#local-colocation-quotients-lclq",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#local-colocation-quotients-lclq",
    "title": "Take Home Exercise 1",
    "section": "7.3 Local Colocation Quotients (LCLQ)",
    "text": "7.3 Local Colocation Quotients (LCLQ)\n\n7.3.1 Preparing nearest neighbours list\nst_knn() is used to determine the 6 nearest neighbours for a given point geometry. include_self() is used to include the region itself in its own list of neighbours. Both functions are from sfdep package.\n\nnb <- include_self(\n  st_knn(st_geometry(wp_nga_sf),6))\n\nAfterwhich, we will use st_kernel_weights() of sfdep package to derive a weights list by using a kernal function. We will be using the gaussian method and the mathematical equations is:\nKernel function:\n\nWeighted average:\n\n\n\n7.3.2 Computing the Kernel weights\n\nwt <- st_kernel_weights(nb,\n                        wp_nga_sf,\n                        \"gaussian\",\n                        adaptive = TRUE)\n\nThe codechunk below categorises all values in wp_functional and wp_nonfunctional to be under one categorical value “Functional” and “Non-Functional” respectively.\n\nwp_functional$status_clean[1:length(wp_functional$status_clean)] <- \"Functional\"\nwp_nonfunctional$status_clean[1:length(wp_nonfunctional$status_clean)] <- \"Non-Functional\"\n\n\n\n7.3.3 Calculating Local Colocation Quotient\nWe can then separate out the area of interest, A as Functional and neighbours, B as Non-functional. By using local_colocation() from the sfdep package, we can obtain two new fields under LCLQ, the local colocation quotient and the corresponding p-value.\nLCLQ:\n\n\nA <- wp_functional$status_clean\n\nB <- wp_nonfunctional$status_clean\n\nLCLQ <- local_colocation(A,B, nb, wt, 39)\n\nWe would then need to join LCLQ with the water point simple feature dataframe.\n\nLCLQ_wp <- cbind(wp_nga_sf, LCLQ) %>%\n  na.exclude()\n\n\n\n7.3.4 Visualizing the Local Colocation Points\n\ntmap_mode(\"view\")\ntm_shape(osun) +\n  tm_polygons() +\ntm_shape(LCLQ_wp) +\n  tm_dots(col = \"Non.Functional\",\n          size = 0.01,\n          border.col = \"black\",\n          border.lwd = 0.5) +\ntm_shape(LCLQ_wp) +\n  tm_dots(col = \"p_sim_Non.Functional\",\n          size = 0.01,\n          border.col = \"black\",\n          border.lwd = 0.5)\n\n\n\n\n\n\n\nhead(LCLQ_wp, 5)\n\nSimple feature collection with 5 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 221313 ymin: 385885.5 xmax: 234473.1 ymax: 415812.3\nProjected CRS: Minna / Nigeria Mid Belt\n    status_clean Non.Functional p_sim_Non.Functional                  geometry\n63    Functional      0.9995411                0.025 POINT (231125.9 393750.4)\n118   Functional      0.9995411                0.025 POINT (222265.4 415305.4)\n119   Functional      0.9995411                0.025 POINT (231020.5 415812.3)\n149   Functional      0.9995411                0.025 POINT (234473.1 385885.5)\n263   Functional      0.9995411                0.025   POINT (221313 415050.5)\n\n\n\n\n7.3.5 LCLQ Statistical Conclusion\nFrom what we learn in in-class exercise 5,\n\nIf LCLQ > 1, the proportion of B points within the neighborhood of A is more than the global proportion of B.\nIf LCLQ < 1, the proportion of B points within the neighborhood of A is less than the global proportion of B\nIf LCLQ = 1, the proportion of B points within the neighborhood of A is equal to the global proportion of B\n\nDue to rounding, the graph shows Non.Functional local colocation quotient is 1 when it is slightly lower. The above code chunk outputs the first 5rows of LCLQ_wp. Since local colocation quotient is relatively equal to 1, it means the proportion of categories within their neighborhood is a good representation of the proportion of categories throughout the entire study area. Since p-value is less than 0.05, we can say that the result is statistically significant."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "",
    "text": "Housing is an essential component of household wealth worldwide. Buying a housing has always been a major investment for most people. The price of housing is affected by many factors. Some of them are global in nature such as the general economy of a country or inflation rate. Others can be more specific to the properties themselves. These factors can be further divided to structural and locational factors. Structural factors are variables related to the property themselves such as the size, fitting, and tenure of the property. Locational factors are variables related to the neighbourhood of the properties such as proximity to childcare centre, public transport service and shopping centre.\nConventional, housing resale prices predictive models were built by using Ordinary Least Square (OLS) method. However, this method failed to take into consideration that spatial autocorrelation and spatial heterogeneity exist in geographic data sets such as housing transactions. With the existence of spatial autocorrelation, the OLS estimation of predictive housing resale pricing models could lead to biased, inconsistent, or inefficient results (Anselin 1998). In view of this limitation, Geographical Weighted Models were introduced for calibrating predictive model for housing resale prices.\n\n\nIn this take-home exercise, I am tasked to predict HDB resale prices at the sub-market level (HDB 5-room) for the month of January and February 2023 in Singapore. The predictive models must be built by using by using conventional OLS method and GWR methods. The data set used to train the model is from January 2021 to December 2022.\n\n\n\nThe R packages we’ll use for this analysis are:\n\nsf: used for importing, managing, and processing geospatial data\ntidyverse: a collection of packages for data science tasks\ntmap: used for creating thematic maps, such as choropleth and bubble maps\nspdep: used to create spatial weights matrix objects, global and local spatial autocorrelation statistics and related calculations (e.g. spatially lag attributes)\nonemapsgapi: used to query Singapore-specific spatial data, alongside additional functionalities. Recommended readings: Vignette and Documentation\nhttr : used to make API calls, such as a GET request\nunits: used to for manipulating numeric vectors that have physical measurement units associated with them\nmatrixStats: a set of high-performing functions for operating on rows and columns of matrices\njsonlite: a JSON parser that can convert from JSON to the appropriate R data types\ncorrplot + ggpubr: both are used for multivariate data visualisation & analysis\nGWmodel: provides a collection of localised spatial statistical methods, such as summary statistics, principal components analysis, discriminant analysis and various forms of GW regression\nkableExtra: an extension of kable, used for table customisation\n\nThe following tidyverse packages will be used:\n\nreadr for importing delimited files (.csv)\ntidyr for manipulating and tidying data\ndplyr for wrangling and transforming data\nggplot2 for visualising data\n\n\npacman::p_load(tidyverse, sf, sfdep, tmap, httr, jsonlite, matrixStats, readr, GWmodel, SpatialML, rsample, Metrics)\n\n\n\n\n\n\nShow code\n# initialise a dataframe of our aspatial and geospatial dataset details\ndatasets <- data.frame(\n  Type=c(\"Aspatial\",\n         \"Geospatial\",\n         \"Geospatial\",\n         \"Geospatial\",\n         \n         \"Geospatial - Onemap\",\n         \"Geospatial - Onemap\",\n         \"Geospatial - Onemap\",\n         \"Geospatial - Onemap\",\n         \"Geospatial - Onemap\",\n         \"Geospatial - Onemap\",\n         \"Geospatial - Onemap\",\n         \"Geospatial - Onemap\",\n         \"Geospatial - Onemap\",\n         \n         \"Aspatial - Self-Sourced\",\n         \"Aspatial - Self-Sourced\"),\n  \n  Name=c(\"Resale Flat Prices\",\n         \"Master Plan 2019 Subzone Boundary (Web)\",\n         \"MRT & LRT Exit Locations\",\n         \"Bus Stop Locations\",\n         \n         \"Childcare Services\",\n         \"Eldercare Services\",\n         \"Hawker Centres\",\n         \"Kindergartens\",\n         \"Parks\",\n         \"Supermarkets\",\n         \"Community Clubs\",\n         \"Family Services\",\n         \"Registered Pharmacies\",\n         \n         \"Schools\",\n         \"Shopping Mall SVY21 Coordinates`\"),\n  \n  Format=c(\".csv\", \n           \".shp\", \n           \".shp\", \n           \".shp\", \n           \n           \".shp\", \n           \".shp\", \n           \".shp\", \n           \".shp\",\n           \".shp\", \n           \".shp\",\n           \".shp\",\n           \".shp\",\n           \".shp\",\n           \n           \".csv\",\n           \".csv\"),\n  \n  Source=c(\"[data.gov.sg](https://data.gov.sg/dataset/resale-flat-prices)\",\n           \"data.gov.sg\",\n           \"[LTA Data Mall](https://datamall.lta.gov.sg/content/datamall/en/search_datasets.html?searchText=Train)\",\n           \"[LTA Data Mall](https://datamall.lta.gov.sg/content/datamall/en/search_datasets.html?searchText=bus%20stop)\",\n           \n           \"[OneMap API]\",\n           \"[OneMap API](https://www.onemap.gov.sg/docs/)\",\n           \"[OneMap API](https://www.onemap.gov.sg/docs/)\",\n           \"[OneMap API](https://www.onemap.gov.sg/docs/)\",\n           \"[OneMap API](https://www.onemap.gov.sg/docs/)\",\n           \"[OneMap API](https://www.onemap.gov.sg/docs/)\",\n           \"[OneMap API](https://www.onemap.gov.sg/docs/)\",\n           \"[OneMap API](https://www.onemap.gov.sg/docs/)\",\n           \"[OneMap API](https://www.onemap.gov.sg/docs/)\",\n           \n           \"[data.gov.sg](https://data.gov.sg/dataset/school-directory-and-information)\",\n           \"[Mall SVY21 Coordinates Web Scaper](https://github.com/ValaryLim/Mall-Coordinates-Web-Scraper)\")\n  )\n\n# with reference to this guide on kableExtra:\n# https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_html.html\n# kable_material is the name of the kable theme\n# 'hover' for to highlight row when hovering, 'scale_down' to adjust table to fit page width\nlibrary(knitr)\nlibrary(kableExtra)\nkable(datasets, caption=\"Datasets Used\") %>%\n  kable_material(\"hover\", latex_options=\"scale_down\")\n\n\n\n\nDatasets Used\n \n  \n    Type \n    Name \n    Format \n    Source \n  \n \n\n  \n    Aspatial \n    Resale Flat Prices \n    .csv \n    [data.gov.sg](https://data.gov.sg/dataset/resale-flat-prices) \n  \n  \n    Geospatial \n    Master Plan 2019 Subzone Boundary (Web) \n    .shp \n    data.gov.sg \n  \n  \n    Geospatial \n    MRT & LRT Exit Locations \n    .shp \n    [LTA Data Mall](https://datamall.lta.gov.sg/content/datamall/en/search_datasets.html?searchText=Train) \n  \n  \n    Geospatial \n    Bus Stop Locations \n    .shp \n    [LTA Data Mall](https://datamall.lta.gov.sg/content/datamall/en/search_datasets.html?searchText=bus%20stop) \n  \n  \n    Geospatial - Onemap \n    Childcare Services \n    .shp \n    [OneMap API] \n  \n  \n    Geospatial - Onemap \n    Eldercare Services \n    .shp \n    [OneMap API](https://www.onemap.gov.sg/docs/) \n  \n  \n    Geospatial - Onemap \n    Hawker Centres \n    .shp \n    [OneMap API](https://www.onemap.gov.sg/docs/) \n  \n  \n    Geospatial - Onemap \n    Kindergartens \n    .shp \n    [OneMap API](https://www.onemap.gov.sg/docs/) \n  \n  \n    Geospatial - Onemap \n    Parks \n    .shp \n    [OneMap API](https://www.onemap.gov.sg/docs/) \n  \n  \n    Geospatial - Onemap \n    Supermarkets \n    .shp \n    [OneMap API](https://www.onemap.gov.sg/docs/) \n  \n  \n    Geospatial - Onemap \n    Community Clubs \n    .shp \n    [OneMap API](https://www.onemap.gov.sg/docs/) \n  \n  \n    Geospatial - Onemap \n    Family Services \n    .shp \n    [OneMap API](https://www.onemap.gov.sg/docs/) \n  \n  \n    Geospatial - Onemap \n    Registered Pharmacies \n    .shp \n    [OneMap API](https://www.onemap.gov.sg/docs/) \n  \n  \n    Aspatial - Self-Sourced \n    Schools \n    .csv \n    [data.gov.sg](https://data.gov.sg/dataset/school-directory-and-information) \n  \n  \n    Aspatial - Self-Sourced \n    Shopping Mall SVY21 Coordinates` \n    .csv \n    [Mall SVY21 Coordinates Web Scaper](https://github.com/ValaryLim/Mall-Coordinates-Web-Scraper) \n  \n\n\n\n\n\n\n\nThese are the steps:\nThe code chunks below uses onemapsgapi package.\n\nRegister an account with onemap\nA code is then be sent to your email. Then fill in this form\nIn the console, run the code chunk below:\n\n\ntoken <- get_token(\"email\", \"password\")\n\nInput the email and password that you’ve registered with onemap. This will provide you a token ID under objectname: token. Note that you will need to do this again as the token is only valid for 3 days.\n\nObtain queryname by running the code chunk below:\n\n\nthemes <- search_themes(token)\n\nInput your token ID and you can source for the queryname for Step 5.\n\nUse get_theme() to get the data from onemap\n\nFor this example, we will use queryname, “eldercare”.\n\neldercare<-get_theme(token,\"eldercare\")\n\n\nConvert the object into an sf object then download it into your data folder. st_as_sf() is for converting the file and st_write() is for writing the file into your folder. st_transform() sets the coordinate reference system to Singapore, EPSG::3414. These functions are from the sf package.\n\n\neldercaresf <- st_as_sf(eldercare, coords=c(\"Lng\", \"Lat\"), \n                        crs=4326) %>% \n  st_transform(crs = 3414)\nst_write(obj = eldercaresf,\n         dsn = \"data/geospatial\",\n         layer = \"eldercare\",\n         driver = \"ESRI Shapefile\")\n\nTo make it more automatic, define which variables you want from the onemap database into a vector. The code chunk runs a for loop that does steps 5 and 6 together and stores them into your folder.\n\nonemap_variables <- c(\"childcare\", \"communityclubs\", \"eldercare\", \"family\", \"hawkercentre\", \"kindergartens\", \"nationalparks\",\"registered_pharmacy\",\"supermarkets\")\n\ndf <- list()\ndf_sf <- list()\nfor (i in 1:length(onemap_variables)){\n  df[[i]] <- get_theme(token, onemap_variables[i])\n  df_sf[[i]] <- st_as_sf(df[[i]], coords=c(\"Lng\", \"Lat\"), \n                        crs=4326) %>%\n    st_transform(crs = 3414)\nst_write(obj = df_sf[[i]],\n         dsn = \"data/geospatial/Onemap\",\n         layer = onemap_variables[i],\n         driver = \"ESRI Shapefile\")\n}"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#geospatial-data",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#geospatial-data",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "2.1 Geospatial Data",
    "text": "2.1 Geospatial Data\n\nOne-MapGeospatial MapDATA.GOVAspatial Data\n\n\nWe will make use of st_read() from the sf package to load the data in\n\npharmacy <- st_read(dsn = \"data/geospatial/Onemap\",\n                layer = \"registered_pharmacy\")\n\nReading layer `registered_pharmacy' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Take-Home_Ex/Take-Home_Ex03/data/geospatial/Onemap' \n  using driver `ESRI Shapefile'\nSimple feature collection with 269 features and 8 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 13049.46 ymin: 26540.77 xmax: 46829.34 ymax: 47763.05\nProjected CRS: SVY21 / Singapore TM\n\nparks <- st_read(dsn = \"data/geospatial/Onemap\",\n                 layer = \"nationalparks\")\n\nReading layer `nationalparks' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Take-Home_Ex/Take-Home_Ex03/data/geospatial/Onemap' \n  using driver `ESRI Shapefile'\nSimple feature collection with 421 features and 2 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 12374.75 ymin: 21917.81 xmax: 52533.09 ymax: 49296.46\nProjected CRS: SVY21 / Singapore TM\n\nkindergartens <- st_read(dsn = \"data/geospatial/Onemap\",\n                    layer = \"kindergartens\")\n\nReading layer `kindergartens' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Take-Home_Ex/Take-Home_Ex03/data/geospatial/Onemap' \n  using driver `ESRI Shapefile'\nSimple feature collection with 448 features and 5 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 11909.7 ymin: 25596.33 xmax: 43395.47 ymax: 48562.06\nProjected CRS: SVY21 / Singapore TM\n\nhawker <- st_read(dsn = \"data/geospatial/Onemap\",\n                    layer = \"hawkercentre\")\n\nReading layer `hawkercentre' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Take-Home_Ex/Take-Home_Ex03/data/geospatial/Onemap' \n  using driver `ESRI Shapefile'\nSimple feature collection with 125 features and 18 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 12874.19 ymin: 28355.97 xmax: 45241.4 ymax: 47850.43\nProjected CRS: SVY21 / Singapore TM\n\neldercare <- st_read(dsn = \"data/geospatial/Onemap\",\n                    layer = \"eldercare\")\n\nReading layer `eldercare' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Take-Home_Ex/Take-Home_Ex03/data/geospatial/Onemap' \n  using driver `ESRI Shapefile'\nSimple feature collection with 133 features and 4 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14481.92 ymin: 28218.43 xmax: 41665.14 ymax: 46804.9\nProjected CRS: SVY21 / Singapore TM\n\ncommunityclubs <-st_read(dsn = \"data/geospatial/Onemap\",\n                    layer = \"communityclubs\")\n\nReading layer `communityclubs' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Take-Home_Ex/Take-Home_Ex03/data/geospatial/Onemap' \n  using driver `ESRI Shapefile'\nSimple feature collection with 125 features and 11 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 12308.4 ymin: 28593.37 xmax: 42008.87 ymax: 48958.52\nProjected CRS: SVY21 / Singapore TM\n\nsupermarkets <- st_read(dsn = \"data/geospatial/Onemap\",\n                    layer = \"SUPERMARKETS\")\n\nReading layer `SUPERMARKETS' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Take-Home_Ex/Take-Home_Ex03/data/geospatial/Onemap' \n  using driver `ESRI Shapefile'\nSimple feature collection with 526 features and 8 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4901.188 ymin: 25529.08 xmax: 46948.22 ymax: 49233.6\nProjected CRS: SVY21\n\nfamilyservices <- st_read(dsn = \"data/geospatial/Onemap\",\n                    layer = \"family\")\n\nReading layer `family' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Take-Home_Ex/Take-Home_Ex03/data/geospatial/Onemap' \n  using driver `ESRI Shapefile'\nSimple feature collection with 48 features and 7 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 12836.2 ymin: 28549.79 xmax: 42512.91 ymax: 47397.09\nProjected CRS: SVY21 / Singapore TM\n\nchildcare <- st_read(dsn = \"data/geospatial/Onemap\",\n                     layer = \"childcare\")\n\nReading layer `childcare' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Take-Home_Ex/Take-Home_Ex03/data/geospatial/Onemap' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1925 features and 5 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 11810.03 ymin: 25596.33 xmax: 45404.24 ymax: 49300.88\nProjected CRS: SVY21 / Singapore TM\n\n\n\n\nWe will make use of st_read() from the sf package to load the data in\n\nmpsz <- st_read(dsn = \"data/geospatial\",\n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Take-Home_Ex/Take-Home_Ex03/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n\nWe will make use of st_read() from the sf package to load the data in\n\nBus_stop <- st_read(dsn = \"data/geospatial\",\n                layer = \"BusStop\")\n\nReading layer `BusStop' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Take-Home_Ex/Take-Home_Ex03/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5159 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\nMRT <- st_read(dsn = \"data/geospatial/lta-mrt-station-exit-kml.kml\")\n\nReading layer `MRT_EXITS' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Take-Home_Ex/Take-Home_Ex03/data/geospatial/lta-mrt-station-exit-kml.kml' \n  using driver `KML'\nSimple feature collection with 474 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6368 ymin: 1.264972 xmax: 103.9893 ymax: 1.449157\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\n\nWe will make use of read_csv() from the readr package to read the csv file into Rstudio\n\nResale <- read_csv(\"data/aspatial/resale-flat-prices-based-on-registration-date-from-jan-2017-onwards.csv\")\n\n\nSchools <- read_csv(\"data/aspatial/schools.csv\")\n\n\nMalls <- read_csv(\"data/aspatial/mall_coordinates_updated.csv\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#hdb-resale-price",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#hdb-resale-price",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "3.1 HDB Resale Price",
    "text": "3.1 HDB Resale Price\nFor the purpose of this take-home exercise, we will only be using five-room flat and training transaction period should be from January 2021 and December 2022.\nFrom the output above, the variables we want are:\n\nResale Price\nMonth\nFlat Type\nArea of the unit\nFloor level\nRemaining Lease\nFlat Model\n\n\n3.1.1 Story and Date adjustents\nWe will see the unique values of story by running the code chunk below.\n\nunique(Resale$storey_range)\n\n [1] \"10 TO 12\" \"01 TO 03\" \"04 TO 06\" \"07 TO 09\" \"13 TO 15\" \"19 TO 21\"\n [7] \"22 TO 24\" \"16 TO 18\" \"34 TO 36\" \"28 TO 30\" \"37 TO 39\" \"49 TO 51\"\n[13] \"25 TO 27\" \"40 TO 42\" \"31 TO 33\" \"46 TO 48\" \"43 TO 45\"\n\n\nAs we can see, there are 17 factor levels.\nWhen dealing with categorical variables, there are several ways to manipulate the data.\nThese are some ways to deal with categorical variables:\n\nSet it as a factor, to which R will recognize them as binary variables automatically.\nSet categorical variable as multiple binary variable columns, assigning values 1 and 0.\nSet categorical variables as ordinal numbers.\n\nIn the case of story levels, as they are ascending in nature, we can use No. 3, which is to set them as ordinal variables.\nThe code chunk below will sequence the story levels, assigning value 1 to “01 TO 03”, 2 to “04 TO 06”, …, 17 to “49 TO 51”.\n\n# Define the story levels and ordinal values\nstory_levels <- c(\"01 TO 03\", \"04 TO 06\", \"07 TO 09\", \"10 TO 12\", \"13 TO 15\", \"16 TO 18\", \"19 TO 21\", \"22 TO 24\", \"25 TO 27\", \"28 TO 30\", \"31 TO 33\", \"34 TO 36\", \"37 TO 39\", \"40 TO 42\", \"43 TO 45\", \"46 TO 48\", \"49 TO 51\")\nstory_ordinal <- seq_along(story_levels)\n\n# Create the ordinal variable based on the story column\nResale$Story_Ordinal <- story_ordinal[match(Resale$storey_range, story_levels)]\n\n# Set the labels for the ordinal variable\nlevels(Resale$Story_Ordinal) <- story_levels\n\n\n\n3.1.2 Date\nNext we will set the Date column as date type and also ensure Story_Ordinal is of numeric type.\nTo check the data set, you can run glimpse() from the dplyr package to see the data types of each variable.\n\nResale <- Resale %>%\n  mutate(month = as.Date(paste0(month, \"-01\"), format =\"%Y-%m-%d\"),\n         Story_Ordinal = as.numeric(Story_Ordinal))\n\n\n\n3.1.3 Flat Model\nNext, we will set Flat Model as a binary variable by running the code chunk below.\n\nResale <- Resale %>%\n  tidyr::pivot_wider(names_from = flat_model,\n              values_from = flat_model, \n              values_fn = list(flat_model = ~1), \n              values_fill = 0)\n\n\n\n3.1.4 Remaining Lease\nWe will settle the remaining lease by running the code chunk below: This turns remaining_lease from chr type to numeric in terms of units, years.\n\n# Splits the string by year and month, using str_split from the stringr package\nstr_list <- str_split(Resale$remaining_lease, \" \")\n\nfor (i in 1:length(str_list)) {\n  if (length(unlist(str_list[i])) > 2) {\n      year <- as.numeric(unlist(str_list[i])[1])\n      month <- as.numeric(unlist(str_list[i])[3])\n      Resale$remaining_lease[i] <- year + round(month/12, 2)\n  }\n  else {\n    year <- as.numeric(unlist(str_list[i])[1])\n    Resale$remaining_lease[i] <- year\n  }\n}\n\nResale <- Resale %>%\n  mutate(remaining_lease =as.numeric(remaining_lease))\n\nWe can take a look at the dataframe now by using glimpse() from the dplyr package\n\nglimpse(Resale)\n\nRows: 148,000\nColumns: 11\n$ month               <chr> \"2017-01\", \"2017-01\", \"2017-01\", \"2017-01\", \"2017-…\n$ town                <chr> \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO …\n$ flat_type           <chr> \"2 ROOM\", \"3 ROOM\", \"3 ROOM\", \"3 ROOM\", \"3 ROOM\", …\n$ block               <chr> \"406\", \"108\", \"602\", \"465\", \"601\", \"150\", \"447\", \"…\n$ street_name         <chr> \"ANG MO KIO AVE 10\", \"ANG MO KIO AVE 4\", \"ANG MO K…\n$ storey_range        <chr> \"10 TO 12\", \"01 TO 03\", \"01 TO 03\", \"04 TO 06\", \"0…\n$ floor_area_sqm      <dbl> 44, 67, 67, 68, 67, 68, 68, 67, 68, 67, 68, 67, 67…\n$ flat_model          <chr> \"Improved\", \"New Generation\", \"New Generation\", \"N…\n$ lease_commence_date <dbl> 1979, 1978, 1980, 1980, 1980, 1981, 1979, 1976, 19…\n$ remaining_lease     <chr> \"61 years 04 months\", \"60 years 07 months\", \"62 ye…\n$ resale_price        <dbl> 232000, 250000, 262000, 265000, 265000, 275000, 28…\n\n\nWe will first filter out the relevant columns we want by running the code chunk below:\nselect() helps to select the columns we want and filter() helps us to filter to the specific two months. These two functions come from the dplyr package.\n\nTraining DataTest Data\n\n\n\nResale_train <- Resale %>%\n  filter(month >= \"2021-01-01\" & month <= \"2022-12-01\",\n         flat_type == \"5 ROOM\") %>%\n  dplyr::select(-2,-3,-6,-8)\n\nWe will save Resale_train as a rds file for easy retrieval\n\nwrite_rds(Resale_train, \"data/aspatial/Resale_train.rds\")\n\n\nResale_train <- read_rds(\"data/aspatial/Resale_train.rds\")\n\n\nglimpse(Resale_train)\n\nRows: 14,508\nColumns: 28\n$ month                    <date> 2021-01-01, 2021-01-01, 2021-01-01, 2021-01-…\n$ block                    <chr> \"551\", \"305\", \"520\", \"253\", \"423\", \"617\", \"31…\n$ street_name              <chr> \"ANG MO KIO AVE 10\", \"ANG MO KIO AVE 1\", \"ANG…\n$ floor_area_sqm           <dbl> 118, 123, 118, 128, 133, 133, 110, 110, 110, …\n$ remaining_lease          <dbl> 59.08, 55.58, 58.67, 74.25, 71.25, 74.50, 84.…\n$ resale_price             <dbl> 483000, 590000, 629000, 670000, 680000, 76000…\n$ Story_Ordinal            <dbl> 1, 5, 6, 3, 1, 5, 8, 5, 6, 6, 5, 5, 8, 1, 2, …\n$ Improved                 <dbl> 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, …\n$ `New Generation`         <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ DBSS                     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, …\n$ Standard                 <dbl> 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, …\n$ Apartment                <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Simplified               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Model A`                <dbl> 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Premium Apartment`      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Adjoined flat`          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Model A-Maisonette`     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Maisonette               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Type S1`                <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Type S2`                <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Model A2`               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Terrace                  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Improved-Maisonette`    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Premium Maisonette`     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Multi Generation`       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Premium Apartment Loft` <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `2-room`                 <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `3Gen`                   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n\n\n\n\n\nResale_test <- Resale %>%\n  filter(month >=\"2023-01-01\" & month <=\"2023-02-01\",\n         flat_type == \"5 ROOM\") %>%\n  dplyr::select(-2,-3,-6,-8)\n\nWe will save Resale_train as a rds file for easy retrieval\n\n\nShow code\nwrite_rds(Resale_test, \"data/aspatial/Resale_test.rds\")\n\n\n\nResale_test <- read_rds(\"data/aspatial/Resale_test.rds\")\n\n\nglimpse(Resale_test)\n\nRows: 998\nColumns: 28\n$ month                    <date> 2023-01-01, 2023-01-01, 2023-01-01, 2023-02-…\n$ block                    <chr> \"306\", \"306\", \"402\", \"431\", \"259\", \"259\", \"17…\n$ street_name              <chr> \"ANG MO KIO AVE 1\", \"ANG MO KIO AVE 1\", \"ANG …\n$ floor_area_sqm           <dbl> 123, 123, 119, 119, 135, 135, 119, 133, 135, …\n$ remaining_lease          <dbl> 53.58, 53.58, 55.42, 54.92, 58.42, 58.17, 69.…\n$ resale_price             <dbl> 682888.0, 695000.0, 658888.0, 748000.0, 79000…\n$ Story_Ordinal            <dbl> 6, 2, 4, 8, 5, 1, 2, 5, 4, 7, 7, 4, 2, 3, 3, …\n$ Improved                 <dbl> 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, …\n$ `New Generation`         <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ DBSS                     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Standard                 <dbl> 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Apartment                <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Simplified               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Model A`                <dbl> 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, …\n$ `Premium Apartment`      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Adjoined flat`          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Model A-Maisonette`     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Maisonette               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Type S1`                <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Type S2`                <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Model A2`               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Terrace                  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Improved-Maisonette`    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Premium Maisonette`     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Multi Generation`       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Premium Apartment Loft` <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `2-room`                 <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `3Gen`                   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n\n\n\n\n\nYou may be wondering why I had removed LeaseBegin as that denotes the age of the apartment. This is due to the issue of high multicollinearity in statistics. Intuitively, HDB only has 99year lease and as such, remaining_lease has a perfect inverse relationship to LeaseBegin. For example a 9 year old apartment would have a remaining lease of (99-9) = 90 years.\n\n\n3.1.5 Inserting geometries\nNext, once our data set has been cleaned to its relevant variables, we will insert the geometries of the resale apartment location.\nTo do this, we will have to obtain the geometries from this url.\nThis code is referenced from Megan’s work.\n\nlibrary(\"httr\")\ngeocode <- function(block, streetname) {\n  base_url <- \"https://developers.onemap.sg/commonapi/search\"\n  address <- paste(block, streetname, sep = \" \")\n  query <- list(\"searchVal\" = address, \n                \"returnGeom\" = \"Y\",\n                \"getAddrDetails\" = \"N\",\n                \"pageNum\" = \"1\")\n  \n  res <- GET(base_url, query = query)\n  restext<-content(res, as=\"text\")\n  \n  output <- jsonlite::fromJSON(restext)  %>% \n    as.data.frame() %>%\n    dplyr::select(\"results.LATITUDE\", \"results.LONGITUDE\")\n  return(output)\n}\n\nIn both Training and Test Data, we will use this function and a for loop that iterates between each row of the dataframe.\nThis is done to input the block and street number into the function, geocode() and inputs the results into the LATITUDE and LONGITUDE columns.\n\nTraining DataTesting Data\n\n\n\nResale_train$LATITUDE <- 0\nResale_train$LONGITUDE <- 0\n\nfor (i in 1:nrow(Resale_train)){\n  temp_output <- geocode(Resale_train[i, 2], Resale_train[i, 3])\n  \n  Resale_train$LATITUDE[i] <- temp_output$results.LATITUDE\n  Resale_train$LONGITUDE[i] <- temp_output$results.LONGITUDE\n}\n\n\n\n\nResale_test$LATITUDE <- 0\nResale_test$LONGITUDE <- 0\n\nfor (i in 1:nrow(Resale_test)){\n  temp_output <- geocode(Resale_test[i, 2], Resale_test[i, 3])\n  \n  Resale_test$LATITUDE[i] <- temp_output$results.LATITUDE\n  Resale_test$LONGITUDE[i] <- temp_output$results.LONGITUDE\n}\n\n\n\n\n\n\n3.1.6 Convert into Resale_2023 dataframe into sf\nBy using st_as_sf() from the sf package, we can convert Resale_2023 into an sf and then transform the crs to EPSG:: 3414 which is the coordinate reference system for Singapore.\n\nTraining DataTest Data\n\n\n\nResale_training_sf <- st_as_sf(Resale_train, \n                      coords = c(\"LONGITUDE\", \"LATITUDE\"),\n                      crs = 4326) %>%\n  st_transform(crs = 3414)\n\nWe can store it as a shapefile for future retrieval.\n\nst_write(Resale_training_sf, \n         dsn = \"data/aspatial\", \n         layer = \"resale_train_sf\",\n         driver = \"ESRI Shapefile\")\n\n\nResale_training_sf <- st_read(dsn = \"data/aspatial\",\n                     layer = \"resale_train_sf\")\n\nReading layer `resale_train_sf' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Take-Home_Ex/Take-Home_Ex03/data/aspatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 14508 features and 28 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 6958.193 ymin: 28157.26 xmax: 42645.18 ymax: 48741.06\nProjected CRS: SVY21 / Singapore TM\n\n\n\n\n\nResale_test_sf <- st_as_sf(Resale_test, \n                      coords = c(\"LONGITUDE\", \"LATITUDE\"),\n                      crs = 4326) %>%\n  st_transform(crs = 3414)\n\nWe can store it as a shapefile for future retrieval\n\nst_write(Resale_test_sf, \n         dsn = \"data/aspatial\", \n         layer = \"Resale_test_sf\",\n         driver = \"ESRI Shapefile\")\n\n\nResale_test_sf <- st_read(dsn = \"data/aspatial\",\n                     layer = \"Resale_test_sf\")\n\nReading layer `Resale_test_sf' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Take-Home_Ex/Take-Home_Ex03/data/aspatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 998 features and 28 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 6958.193 ymin: 28248.87 xmax: 42623.63 ymax: 48625.64\nProjected CRS: SVY21 / Singapore TM"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#aspatial-data-wrangling",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#aspatial-data-wrangling",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "3.2 Aspatial Data Wrangling",
    "text": "3.2 Aspatial Data Wrangling\nFor schools, the dataframe holds several levels of schools. For the purpose the regression, we will focus only on primary and secondary schools.\n\nunique(Schools$mainlevel_code)\n\n[1] \"PRIMARY\"               \"SECONDARY\"             \"JUNIOR COLLEGE\"       \n[4] \"MIXED LEVELS\"          \"CENTRALISED INSTITUTE\"\n\n\nWe will create the respective primary school and secondary school dataframe.\nWe will also make some tweaks to the geocode function created above, that takes in postal code instead of block and street.\n\ngeocode <- function(postal) {\n  base_url <- \"https://developers.onemap.sg/commonapi/search\"\n  query <- list(\"searchVal\" = postal, \n                \"returnGeom\" = \"Y\",\n                \"getAddrDetails\" = \"N\",\n                \"pageNum\" = \"1\")\n  \n  res <- GET(base_url, query = query)\n  restext<-content(res, as=\"text\")\n  \n  output <- jsonlite::fromJSON(restext)  %>% \n    as.data.frame() %>%\n    dplyr::select(\"results.LATITUDE\", \"results.LONGITUDE\")\n  return(output)\n}\n\n\nPrimary SchoolSecondary School\n\n\n\nPrimary <- Schools %>%\n  filter(mainlevel_code == \"PRIMARY\") %>%\n  select(school_name,postal_code)\n\n\nPrimary$LATITUDE <- 0\nPrimary$LONGITUDE <- 0\n\nfor (i in 1:nrow(Primary)){\n  temp_output <- geocode(Primary[i, 2])\n  \n  Primary$LATITUDE[i] <- temp_output$results.LATITUDE\n  Primary$LONGITUDE[i] <- temp_output$results.LONGITUDE\n}\n\n\n\nShow code\nwrite_rds(Primary, \"data/aspatial/Primary.rds\")\n\n\n\nPrimary <- read_rds(\"data/aspatial/Primary.rds\")\n\n\n\n\nSecondary <- Schools %>%\n  filter(mainlevel_code == \"SECONDARY\") %>%\n  select(school_name,postal_code)\n\nNext, we will change the postal code of ZHENGHUA SECONDARY SCHOOL as it has the wrong postal code. We found out about this after checking that there was an error after running the geocode. Hence, it is a good habit to check on your dataframe for any missing geometries before moving forward.\n\nSecondary[137,2]<- \"679962\"\n\nWe can rerun the code.\n\nSecondary$LATITUDE <- 0\nSecondary$LONGITUDE <- 0\n\nfor (i in 1:nrow(Secondary)){\n  temp_output <- geocode(Secondary[i, 2])\n  \n  Secondary$LATITUDE[i] <- temp_output$results.LATITUDE\n  Secondary$LONGITUDE[i] <- temp_output$results.LONGITUDE\n}\n\n\n\nShow code\nwrite_rds(Secondary, file = \"data/aspatial/Secondary.rds\")\n\n\n\nSecondary <- read_rds(\"data/aspatial/Secondary.rds\")\n\n\n\n\nFor Primary_sch, Secondary_sch and Mall, we need to convert them into sf and transform it to the correct CRS.\nPrimary School:\n\nPrimary_sf <- Primary %>%\n  st_as_sf(coords = c(\"LONGITUDE\", \"LATITUDE\"),\n           crs = 4326) %>% \n  st_transform(crs = 3414)\n\nGood Primary Schools:\nWe will refer to schlah list of good primary schools. Note that CANOSSA HIGH SCHOOL in schlah webpage is known as CANOSSA CATHOLIC PRIMARY SCHOOL.\n\nGood_Prisch <- Primary_sf %>%\n  filter(school_name %in% c(\"NANYANG PRIMARY SCHOOL\",\n                            \"TAO NAN SCHOOL\",\n                            \"CANOSSA CATHOLIC PRIMARY SCHOOL\",\n                            \"NAN HUA PRIMARY SCHOOL\",\n                            \"ST. HILDA'S PRIMARY SCHOOL\",\n                            \"HENRY PARK PRIMARY SCHOOL\",\n                            \"ANGLO-CHINESE SCHOOL (PRIMARY)\",\n                            \"RAFFLES GIRLS' PRIMARY SCHOOL\",\n                            \"PEI HWA PRESBYTERIAN PRIMARY SCHOOL\"\n                            ))\n\nSecondary School:\n\nSecondary_sf <- Secondary %>%\n  st_as_sf(coords = c(\"LONGITUDE\",\"LATITUDE\"),\n           crs = 4326) %>% \n  st_transform(crs = 3414)\n\nMalls:\n\nmalls <- Malls %>%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"),\n           crs = 4326) %>%\n  st_transform(crs= 3414)\n\nCBD Area:\nAs for the CBD area, we will use a centre point coordinate to illustrate proximity to CBD Area.\n\nlat <- 1.287953\nlng <- 103.851784\n\ncbd_sf <- data.frame(lat, lng) %>%\n  st_as_sf(coords = c(\"lng\", \"lat\"), crs=4326) %>%\n  st_transform(crs=3414)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#ensure-all-datasets-are-in-epsg3414",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#ensure-all-datasets-are-in-epsg3414",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "3.3 Ensure all datasets are in EPSG:3414",
    "text": "3.3 Ensure all datasets are in EPSG:3414\nAside from the onemap variables, we need to check the geospatial data and the other data sets, primary school, secondary school and shopping malls.\n\nst_crs(mpsz) ; st_crs(Bus_stop) ; st_crs(MRT) ; st_crs(supermarkets)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"WGS 84\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"WGS 84\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\nWe notice that the CRS for these 3 geospatial data are not correct.\nWe will use st_transformed as taught previously to convert it to EPSG:3414.\n\nmpsz <- mpsz %>%\n  st_transform(crs = 3414)\n\n\nBus_stop <- Bus_stop %>%\n  st_transform(crs = 3414)\n\n\nMRT <- MRT %>%\n  st_transform(crs = 3414)\n\n\nsupermarkets <- supermarkets %>%\n  st_transform(crs = 3414)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#checking-invalid-geometries",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#checking-invalid-geometries",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "3.4 Checking invalid geometries",
    "text": "3.4 Checking invalid geometries\nWe should also check for any invalid geometries in our data.\n\nOnemap variable checksDATA.GOVAspatial Data\n\n\n\nlength(which(st_is_valid(communityclubs)== FALSE))\n\n[1] 0\n\n\n\nlength(which(st_is_valid(eldercare)== FALSE))\n\n[1] 0\n\n\n\nlength(which(st_is_valid(familyservices)== FALSE))\n\n[1] 0\n\n\n\nlength(which(st_is_valid(hawker)== FALSE))\n\n[1] 0\n\n\n\nlength(which(st_is_valid(kindergartens)== FALSE))\n\n[1] 0\n\n\n\nlength(which(st_is_valid(parks)== FALSE))\n\n[1] 0\n\n\n\nlength(which(st_is_valid(pharmacy)== FALSE))\n\n[1] 0\n\n\n\nlength(which(st_is_valid(supermarkets)== FALSE))\n\n[1] 0\n\n\n\nlength(which(st_is_valid(childcare)== FALSE))\n\n[1] 0\n\n\nWe can see that for the oneMap variables, there are no invalid geometries.\n\n\n\nlength(which(st_is_valid(mpsz)== FALSE))\n\n[1] 9\n\n\n\nlength(which(st_is_valid(Bus_stop)== FALSE))\n\n[1] 0\n\n\n\nlength(which(st_is_valid(MRT)== FALSE))\n\n[1] 0\n\n\nFor the data obtained from DATA.GOV, there are some invalid geometries\nWe will proceed to remove them\n\nmpsz <- st_make_valid(mpsz)\n\n\n\n\nlength(which(st_is_valid(Primary_sf)== FALSE))\n\n[1] 0\n\n\n\nlength(which(st_is_valid(Secondary_sf)== FALSE))\n\n[1] 0\n\n\n\nlength(which(st_is_valid(malls)==FALSE))\n\n[1] 0\n\n\nThere is no invalid geometries in the aspatial data set."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#removing-unnecessary-columns",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#removing-unnecessary-columns",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "3.5 Removing Unnecessary columns",
    "text": "3.5 Removing Unnecessary columns\nWe will only need the name and the geometries so we can exclude the rest of the columns\n\nOnemapDATA.GOVAspatial Data\n\n\n\ncommunityclubs <- communityclubs %>%\n  select(1)\n\n\neldercare <- eldercare %>%\n  select(1)\n\n\nfamilyservices <- familyservices %>%\n  select(1)\n\n\nhawker <- hawker %>%\n  select(1)\n\n\nkindergartens <- kindergartens %>%\n  select(1)\n\n\nparks <- parks %>%\n  select(1)\n\n\npharmacy <- pharmacy %>%\n  select(1)\n\n\nsupermarkets <- supermarkets %>%\n  select(1)\n\n\nchildcare <- childcare %>%\n  select(1)\n\n\n\n\nBus_stop <- select(Bus_stop, 1)\n\nFor MRT, we will need to drop the Z-dimension. This can be seen when you View(MRT).\n\nMRT_Station <- st_zm(MRT) %>%\n  select(1)\n\n\n\n\nPrimary_sf <- select(Primary_sf, 1)\n\n\nSecondary_sf <- select(Secondary_sf, 1)\n\n\nmalls <- select(malls, name)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#check-na-values",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#check-na-values",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "3.6 Check NA values",
    "text": "3.6 Check NA values\n\nOnemapDATA.GOVAspatial Data\n\n\n\ncommunityclubs[rowSums(is.na(communityclubs))!=0,]\n\nSimple feature collection with 0 features and 1 field\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nProjected CRS: SVY21 / Singapore TM\n[1] NAME     geometry\n<0 rows> (or 0-length row.names)\n\n\n\neldercare[rowSums(is.na(eldercare))!=0,]\n\nSimple feature collection with 0 features and 1 field\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nProjected CRS: SVY21 / Singapore TM\n[1] NAME     geometry\n<0 rows> (or 0-length row.names)\n\n\n\nfamilyservices[rowSums(is.na(familyservices))!=0,]\n\nSimple feature collection with 0 features and 1 field\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nProjected CRS: SVY21 / Singapore TM\n[1] NAME     geometry\n<0 rows> (or 0-length row.names)\n\n\n\nhawker[rowSums(is.na(hawker))!=0,]\n\nSimple feature collection with 0 features and 1 field\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nProjected CRS: SVY21 / Singapore TM\n[1] NAME     geometry\n<0 rows> (or 0-length row.names)\n\n\n\nkindergartens[rowSums(is.na(kindergartens))!=0,]\n\nSimple feature collection with 0 features and 1 field\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nProjected CRS: SVY21 / Singapore TM\n[1] NAME     geometry\n<0 rows> (or 0-length row.names)\n\n\n\nparks[rowSums(is.na(parks))!=0,]\n\nSimple feature collection with 0 features and 1 field\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nProjected CRS: SVY21 / Singapore TM\n[1] NAME     geometry\n<0 rows> (or 0-length row.names)\n\n\n\npharmacy[rowSums(is.na(pharmacy))!=0,]\n\nSimple feature collection with 0 features and 1 field\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nProjected CRS: SVY21 / Singapore TM\n[1] NAME     geometry\n<0 rows> (or 0-length row.names)\n\n\n\nsupermarkets[rowSums(is.na(supermarkets))!=0,]\n\nSimple feature collection with 0 features and 1 field\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nProjected CRS: SVY21 / Singapore TM\n[1] LIC_NAME geometry\n<0 rows> (or 0-length row.names)\n\n\n\nchildcare[rowSums(is.na(childcare))!=0,]\n\nSimple feature collection with 0 features and 1 field\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nProjected CRS: SVY21 / Singapore TM\n[1] NAME     geometry\n<0 rows> (or 0-length row.names)\n\n\nWe notice that family services has NA values, we will proceed to remove them using na.omit()\n\nfamilyservices<- na.omit(familyservices, c(\"ADDRESSBUI\"))\n\n\n\n\nBus_stop[rowSums(is.na(Bus_stop))!=0,]\n\nSimple feature collection with 0 features and 1 field\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nProjected CRS: SVY21 / Singapore TM\n[1] BUS_STOP_N geometry  \n<0 rows> (or 0-length row.names)\n\n\n\nMRT_Station[rowSums(is.na(MRT_Station))!=0,]\n\nSimple feature collection with 0 features and 1 field\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nProjected CRS: SVY21 / Singapore TM\n[1] Name     geometry\n<0 rows> (or 0-length row.names)\n\n\n\nmpsz[rowSums(is.na(mpsz))!=0,]\n\nSimple feature collection with 0 features and 15 fields\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nProjected CRS: SVY21 / Singapore TM\n [1] OBJECTID   SUBZONE_NO SUBZONE_N  SUBZONE_C  CA_IND     PLN_AREA_N\n [7] PLN_AREA_C REGION_N   REGION_C   INC_CRC    FMEL_UPD_D X_ADDR    \n[13] Y_ADDR     SHAPE_Leng SHAPE_Area geometry  \n<0 rows> (or 0-length row.names)\n\n\n\n\n\nlength(which(is.na(Primary_sf) == TRUE))\n\n[1] 0\n\n\n\nlength(which(is.na(Secondary_sf) == TRUE))\n\n[1] 0\n\n\n\nlength(which(is.na(malls) == TRUE))\n\n[1] 0\n\n\nThere is no NA values in the aspatial data"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#facility-count-within-radius-calculation",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#facility-count-within-radius-calculation",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "5.1 Facility Count within Radius Calculation",
    "text": "5.1 Facility Count within Radius Calculation\nHere, we want to find the number of facilities within a particular radius. Like above, we’ll use st_distance() to compute the distance between the flats and the desired facilities, and then sum up the observations with rowSums(). The values will be appended to the data frame as a new column.\n\nnum_radius <- function(df1, df2, varname, radius) {\n  dist_matrix <- st_distance(df1, df2) %>%\n    drop_units() %>%\n    as.data.frame()\n  df1[,varname] <- rowSums(dist_matrix <= radius)\n  return(df1)\n}\n\n\nTraining DataTest Data\n\n\n\ntraining_resale <- \n  num_radius(training_resale, kindergartens, \"NUM_KNDRGTN\", 350) %>%\n  num_radius(., childcare, \"NUM_CHILDCARE\", 350) %>%\n  num_radius(., Bus_stop, \"NUM_BUS_STOP\", 350) %>%\n  num_radius(., Primary_sf, \"NUM_PRISCH\", 1000) %>%\n  num_radius(., Secondary_sf, \"NUM_SECSCH\", 1000)\n\nAlways make sure to save the object as an rds file for future referencing.\n\n\nShow code\nwrite_rds(training_resale, \"data/aspatial/training_resale.rds\")\n\n\n\n\n\ntest_resale <- \n  num_radius(test_resale, kindergartens, \"NUM_KNDRGTN\", 350) %>%\n  num_radius(., childcare, \"NUM_CHILDCARE\", 350) %>%\n  num_radius(., Bus_stop, \"NUM_BUS_STOP\", 350) %>%\n  num_radius(., Primary_sf, \"NUM_PRISCH\", 1000) %>%\n  num_radius(., Secondary_sf, \"NUM_SECSCH\", 1000)\n\nAlways make sure to save the object as an rds file for future referencing.\n\nwrite_rds(test_resale, \"data/aspatial/test_resale.rds\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#understanding-the-non-spatial-multiple-linear-regression-model",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#understanding-the-non-spatial-multiple-linear-regression-model",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "8.1 Understanding the non-spatial multiple linear regression model",
    "text": "8.1 Understanding the non-spatial multiple linear regression model\n\nsummary(price_mlr1)\n\n\nCall:\nlm(formula = PRICE ~ AREA_SQM + REMAINING_LEASE + Stry_Or + Improvd + \n    DBSS + Standrd + Model.A + PrmmApr + Adjndfl + MdlA.Ms + \n    Type.S2 + Imprv.M + PrmmApL + PROX_CBD + PROX_CLUBS + PROX_ELDERCARE + \n    PROX_FAM + PROX_MRT + PROX_HAWKER + PROX_PHARMACY + PROX_PARK + \n    PROX_MALL + PROX_SPRMKT + PROX_GOODP + NUM_KNDRGTN + NUM_CHILDCARE + \n    NUM_BUS_STOP + NUM_PRISCH + NUM_SECSCH, data = training_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-259902  -50073   -2595   45960  697099 \n\nCoefficients:\n                  Estimate Std. Error t value Pr(>|t|)    \n(Intercept)     -3.188e+05  4.201e+04  -7.589 3.41e-14 ***\nAREA_SQM         6.767e+03  1.547e+02  43.734  < 2e-16 ***\nREMAINING_LEASE  5.948e+03  9.011e+01  66.007  < 2e-16 ***\nStry_Or          1.818e+04  3.270e+02  55.610  < 2e-16 ***\nImprovd         -1.097e+04  3.426e+04  -0.320 0.748883    \nDBSS             1.460e+05  3.447e+04   4.236 2.29e-05 ***\nStandrd          4.393e+04  3.451e+04   1.273 0.203118    \nModel.A         -4.312e+04  3.438e+04  -1.254 0.209755    \nPrmmApr         -5.752e+03  3.428e+04  -0.168 0.866730    \nAdjndfl         -1.602e+04  3.622e+04  -0.442 0.658292    \nMdlA.Ms          1.366e+04  3.502e+04   0.390 0.696473    \nType.S2          1.642e+05  3.571e+04   4.598 4.30e-06 ***\nImprv.M          9.382e+03  4.841e+04   0.194 0.846324    \nPrmmApL          1.838e+05  4.367e+04   4.208 2.59e-05 ***\nPROX_CBD        -1.948e+01  2.567e-01 -75.884  < 2e-16 ***\nPROX_CLUBS       2.202e+01  2.801e+00   7.860 4.10e-15 ***\nPROX_ELDERCARE   5.401e+00  1.143e+00   4.726 2.31e-06 ***\nPROX_FAM        -3.407e+01  1.396e+00 -24.397  < 2e-16 ***\nPROX_MRT        -9.855e+00  1.898e+00  -5.193 2.09e-07 ***\nPROX_HAWKER     -2.967e+01  1.417e+00 -20.946  < 2e-16 ***\nPROX_PHARMACY   -8.325e+00  2.463e+00  -3.380 0.000728 ***\nPROX_PARK        1.550e+01  1.666e+00   9.301  < 2e-16 ***\nPROX_MALL       -2.494e+01  2.236e+00 -11.152  < 2e-16 ***\nPROX_SPRMKT     -2.795e+01  4.367e+00  -6.400 1.61e-10 ***\nPROX_GOODP      -4.158e-01  2.891e-01  -1.438 0.150363    \nNUM_KNDRGTN      1.060e+04  7.090e+02  14.949  < 2e-16 ***\nNUM_CHILDCARE   -5.565e+03  3.491e+02 -15.940  < 2e-16 ***\nNUM_BUS_STOP    -1.417e+02  2.304e+02  -0.615 0.538627    \nNUM_PRISCH      -1.068e+04  5.255e+02 -20.319  < 2e-16 ***\nNUM_SECSCH      -2.021e+03  6.474e+02  -3.122 0.001798 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 76410 on 14478 degrees of freedom\nMultiple R-squared:  0.7271,    Adjusted R-squared:  0.7266 \nF-statistic:  1330 on 29 and 14478 DF,  p-value: < 2.2e-16\n\n\nWe can visualise the regression as a table by using gtsummary package.\n\ngtsummary::tbl_regression(price_mlr1)\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    AREA_SQM\n6,767\n6,464, 7,071\n<0.001\n    REMAINING_LEASE\n5,948\n5,771, 6,125\n<0.001\n    Stry_Or\n18,183\n17,542, 18,824\n<0.001\n    Improvd\n-10,966\n-78,114, 56,182\n0.7\n    DBSS\n146,011\n78,446, 213,575\n<0.001\n    Standrd\n43,929\n-23,724, 111,582\n0.2\n    Model.A\n-43,118\n-110,500, 24,264\n0.2\n    PrmmApr\n-5,752\n-72,940, 61,435\n0.9\n    Adjndfl\n-16,019\n-87,011, 54,974\n0.7\n    MdlA.Ms\n13,661\n-54,984, 82,307\n0.7\n    Type.S2\n164,201\n94,207, 234,196\n<0.001\n    Imprv.M\n9,382\n-85,505, 104,270\n0.8\n    PrmmApL\n183,756\n98,165, 269,348\n<0.001\n    PROX_CBD\n-19\n-20, -19\n<0.001\n    PROX_CLUBS\n22\n17, 28\n<0.001\n    PROX_ELDERCARE\n5.4\n3.2, 7.6\n<0.001\n    PROX_FAM\n-34\n-37, -31\n<0.001\n    PROX_MRT\n-9.9\n-14, -6.1\n<0.001\n    PROX_HAWKER\n-30\n-32, -27\n<0.001\n    PROX_PHARMACY\n-8.3\n-13, -3.5\n<0.001\n    PROX_PARK\n15\n12, 19\n<0.001\n    PROX_MALL\n-25\n-29, -21\n<0.001\n    PROX_SPRMKT\n-28\n-37, -19\n<0.001\n    PROX_GOODP\n-0.42\n-0.98, 0.15\n0.2\n    NUM_KNDRGTN\n10,599\n9,209, 11,989\n<0.001\n    NUM_CHILDCARE\n-5,565\n-6,249, -4,881\n<0.001\n    NUM_BUS_STOP\n-142\n-593, 310\n0.5\n    NUM_PRISCH\n-10,677\n-11,707, -9,647\n<0.001\n    NUM_SECSCH\n-2,021\n-3,290, -752\n0.002\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nFrom the multiple linear regression model above, we notice that adjusted R square is at 0.7266. This suggest that the model can explain 0.7266 of the variation in Resale Price. We also notice that majority of the proximity variables are significant at the 1% level. This can also be said for AREASQM, REMAINING LEASE AND STORY OR. The model of the apartment did not have significant impact on the Resale Price. However, two model type, DBSS and Type.S2 are significant."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calculating-predictive-error",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calculating-predictive-error",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "8.2 Calculating predictive error",
    "text": "8.2 Calculating predictive error\n\nlm_predicted_value <- predict.lm(price_mlr1, newdata = test_data)\n\n# Calculate MSE\nMSE <- mean((test_data$PRICE - lm_predicted_value)^2)\n\nrmse_lm <- sqrt(MSE)\nrmse_lm\n\n[1] 87822.93\n\n\nFrom the square-root of the mean square error is 87822.93. We will take note of this value in the later parts of the regression modelling.\nWe can compare models using Akaike information criterion (AIC). The smaller the AIC, the better the model. We will find the AIC by running the code chunk below.\n\nAIC(price_mlr1)\n\n[1] 367455.5\n\n\nWe will just take note of this number and move along with the other models."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#converting-sf-dataframe-to-spatialpointdataframe",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#converting-sf-dataframe-to-spatialpointdataframe",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "9.1 Converting sf dataframe to SpatialPointDataframe",
    "text": "9.1 Converting sf dataframe to SpatialPointDataframe\nFirst, we will need to change the training dataframe into a Spatial point data frame. This is used to calculate the other sections in this portion of the Exercise.\n\ntrain_data_sp <- as_Spatial(training_data)\ntrain_data_sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 14508 \nextent      : 6958.193, 42645.18, 28157.26, 48741.06  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 47\nnames       :   PRICE, month, AREA_SQM, REMAINING_LEASE, Stry_Or, Improvd, NwGnrtn, DBSS, Standrd, Aprtmnt, Simplfd, Model.A, PrmmApr, Adjndfl, MdlA.Ms, ... \nmin values  :  350000, 18628,       99,           49.08,       1,       0,       0,    0,       0,       0,       0,       0,       0,       0,       0, ... \nmax values  : 1418000, 19327,      167,           96.75,      17,       1,       0,    1,       1,       0,       0,       1,       1,       1,       1, ..."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#finding-optimal-adaptive-bandwidth",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#finding-optimal-adaptive-bandwidth",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "9.2 Finding optimal adaptive bandwidth",
    "text": "9.2 Finding optimal adaptive bandwidth\nWe will find the optimal adaptive bandwidth of the geospatial weighted regression. The code chunk below uses bw.gwr() from the GWModel package:\n\nbw_adaptive <- bw.gwr(PRICE ~ AREA_SQM + REMAINING_LEASE + Stry_Or + Improvd + DBSS + Standrd + Model.A + PrmmApr + Adjndfl + MdlA.Ms + Type.S2 + Imprv.M + PrmmApL + PROX_CBD + PROX_CLUBS + PROX_ELDERCARE + PROX_FAM + PROX_MRT +PROX_HAWKER + PROX_PHARMACY +PROX_PARK+PROX_MALL + PROX_SPRMKT + PROX_GOODP + NUM_KNDRGTN + NUM_CHILDCARE + NUM_BUS_STOP + NUM_PRISCH + NUM_SECSCH,\n                data = train_data_sp,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n\n\nThe smallest CV score is adaptive bandwidth: 1005.\nWe will save the adaptive bandwidth as an RDS file for easy retrieval.\n\nwrite_rds(bw_adaptive, file = \"data/model/bw_adaptive.rds\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#constructing-the-adaptive-bandwidth-gwr",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#constructing-the-adaptive-bandwidth-gwr",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "9.3 Constructing the adaptive bandwidth GWR",
    "text": "9.3 Constructing the adaptive bandwidth GWR\nWe will retrieve the adaptive bandwidth by using read_rds from the readr package.\n\nbw_adaptive <- read_rds(\"data/model/bw_adaptive.rds\")\nbw_adaptive\n\n[1] 1005\n\n\n\ngwr_adaptive <- gwr.basic(formula = PRICE ~ AREA_SQM + REMAINING_LEASE + Stry_Or + Improvd + DBSS + Standrd + Model.A + PrmmApr + Adjndfl + MdlA.Ms + Type.S2 + Imprv.M + PrmmApL + PROX_CBD + PROX_CLUBS + PROX_ELDERCARE + PROX_FAM + PROX_MRT +PROX_HAWKER + PROX_PHARMACY +PROX_PARK+PROX_MALL + PROX_SPRMKT + PROX_GOODP + NUM_KNDRGTN + NUM_CHILDCARE + NUM_BUS_STOP + NUM_PRISCH + NUM_SECSCH,\n                data = train_data_sp,\n                          bw=bw_adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE,\n                          longlat = FALSE)\n\nAgain we will save the the regression model as an rds file.\n\nwrite_rds(gwr_adaptive, \"data/model/gwr_adaptive.rds\")\n\n\ngwr_adaptive <- read_rds(\"data/model/gwr_adaptive.rds\")\ngwr_adaptive\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2023-03-17 12:49:34 \n   Call:\n   gwr.basic(formula = PRICE ~ AREA_SQM + REMAINING_LEASE + Stry_Or + \n    Improvd + DBSS + Standrd + Model.A + PrmmApr + Adjndfl + \n    MdlA.Ms + Type.S2 + Imprv.M + PrmmApL + PROX_CBD + PROX_CLUBS + \n    PROX_ELDERCARE + PROX_FAM + PROX_MRT + PROX_HAWKER + PROX_PHARMACY + \n    PROX_PARK + PROX_MALL + PROX_SPRMKT + PROX_GOODP + NUM_KNDRGTN + \n    NUM_CHILDCARE + NUM_BUS_STOP + NUM_PRISCH + NUM_SECSCH, data = train_data_sp, \n    bw = bw_adaptive, kernel = \"gaussian\", adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  PRICE\n   Independent variables:  AREA_SQM REMAINING_LEASE Stry_Or Improvd DBSS Standrd Model.A PrmmApr Adjndfl MdlA.Ms Type.S2 Imprv.M PrmmApL PROX_CBD PROX_CLUBS PROX_ELDERCARE PROX_FAM PROX_MRT PROX_HAWKER PROX_PHARMACY PROX_PARK PROX_MALL PROX_SPRMKT PROX_GOODP NUM_KNDRGTN NUM_CHILDCARE NUM_BUS_STOP NUM_PRISCH NUM_SECSCH\n   Number of data points: 14508\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n    Min      1Q  Median      3Q     Max \n-259902  -50073   -2595   45960  697099 \n\n   Coefficients:\n                     Estimate Std. Error t value Pr(>|t|)    \n   (Intercept)     -3.188e+05  4.201e+04  -7.589 3.41e-14 ***\n   AREA_SQM         6.767e+03  1.547e+02  43.734  < 2e-16 ***\n   REMAINING_LEASE  5.948e+03  9.011e+01  66.007  < 2e-16 ***\n   Stry_Or          1.818e+04  3.270e+02  55.610  < 2e-16 ***\n   Improvd         -1.097e+04  3.426e+04  -0.320 0.748883    \n   DBSS             1.460e+05  3.447e+04   4.236 2.29e-05 ***\n   Standrd          4.393e+04  3.451e+04   1.273 0.203118    \n   Model.A         -4.312e+04  3.438e+04  -1.254 0.209755    \n   PrmmApr         -5.752e+03  3.428e+04  -0.168 0.866730    \n   Adjndfl         -1.602e+04  3.622e+04  -0.442 0.658292    \n   MdlA.Ms          1.366e+04  3.502e+04   0.390 0.696473    \n   Type.S2          1.642e+05  3.571e+04   4.598 4.30e-06 ***\n   Imprv.M          9.382e+03  4.841e+04   0.194 0.846324    \n   PrmmApL          1.838e+05  4.367e+04   4.208 2.59e-05 ***\n   PROX_CBD        -1.948e+01  2.567e-01 -75.884  < 2e-16 ***\n   PROX_CLUBS       2.202e+01  2.801e+00   7.860 4.10e-15 ***\n   PROX_ELDERCARE   5.401e+00  1.143e+00   4.726 2.31e-06 ***\n   PROX_FAM        -3.407e+01  1.396e+00 -24.397  < 2e-16 ***\n   PROX_MRT        -9.855e+00  1.898e+00  -5.193 2.09e-07 ***\n   PROX_HAWKER     -2.967e+01  1.417e+00 -20.946  < 2e-16 ***\n   PROX_PHARMACY   -8.325e+00  2.463e+00  -3.380 0.000728 ***\n   PROX_PARK        1.550e+01  1.666e+00   9.301  < 2e-16 ***\n   PROX_MALL       -2.494e+01  2.236e+00 -11.152  < 2e-16 ***\n   PROX_SPRMKT     -2.795e+01  4.367e+00  -6.400 1.61e-10 ***\n   PROX_GOODP      -4.158e-01  2.891e-01  -1.438 0.150363    \n   NUM_KNDRGTN      1.060e+04  7.090e+02  14.949  < 2e-16 ***\n   NUM_CHILDCARE   -5.565e+03  3.491e+02 -15.940  < 2e-16 ***\n   NUM_BUS_STOP    -1.417e+02  2.304e+02  -0.615 0.538627    \n   NUM_PRISCH      -1.068e+04  5.255e+02 -20.319  < 2e-16 ***\n   NUM_SECSCH      -2.021e+03  6.474e+02  -3.122 0.001798 ** \n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 76410 on 14478 degrees of freedom\n   Multiple R-squared: 0.7271\n   Adjusted R-squared: 0.7266 \n   F-statistic:  1330 on 29 and 14478 DF,  p-value: < 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.452677e+13\n   Sigma(hat): 76334.93\n   AIC:  367455.5\n   AICc:  367455.6\n   BIC:  353479.6\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 1005 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                          Min.     1st Qu.      Median     3rd Qu.       Max.\n   Intercept       -1.4548e+06 -4.6710e+05 -2.0784e+05  2.4157e+05 1.2847e+06\n   AREA_SQM         1.6145e+03  3.2348e+03  4.3778e+03  6.6833e+03 8.6631e+03\n   REMAINING_LEASE  4.0905e+03  4.9922e+03  6.1387e+03  7.5314e+03 8.4507e+03\n   Stry_Or          1.1268e+04  1.2476e+04  1.4096e+04  1.6576e+04 2.0459e+04\n   Improvd         -1.2065e+06 -8.8499e+04 -3.3776e+04 -1.2356e+04 1.5452e+06\n   DBSS            -9.5731e+05  2.1606e+04  7.3551e+04  1.4708e+05 1.6717e+06\n   Standrd         -1.1824e+06 -7.9719e+04  6.2211e+03  5.8653e+04 1.4791e+06\n   Model.A         -1.2495e+06 -1.0097e+05 -5.6049e+04  3.3346e+03 1.4964e+06\n   PrmmApr         -1.2176e+06 -9.7368e+04 -1.8598e+04  9.5304e+03 1.4993e+06\n   Adjndfl         -1.2663e+06 -5.0473e+04 -1.7153e+04  8.0498e+04 1.5347e+06\n   MdlA.Ms         -1.1110e+06 -2.5896e+04  2.7910e+04  9.8371e+04 1.5996e+06\n   Type.S2         -9.1354e+05  1.0022e+05  1.6488e+05  2.8107e+05 1.8472e+06\n   Imprv.M         -1.0816e+06 -3.3876e+04  5.7395e+03  1.0804e+05 6.4574e+07\n   PrmmApL         -7.8590e+05  1.5875e+05  1.7764e+05  2.1128e+05 1.8828e+06\n   PROX_CBD        -3.9344e+01 -2.1491e+01 -1.8859e+01 -8.4149e+00 1.7230e+01\n   PROX_CLUBS      -5.4932e+01 -2.1079e+01 -7.5242e+00  1.1215e+01 6.2743e+01\n   PROX_ELDERCARE  -3.1435e+01 -1.2876e+01 -3.3125e+00  7.4618e+00 4.1139e+01\n   PROX_FAM        -7.8119e+01 -3.7425e+01 -2.5234e+01 -3.3249e+00 3.1072e+01\n   PROX_MRT        -1.3562e+02 -3.4614e+01 -1.8085e+01 -5.4282e-01 2.3095e+01\n   PROX_HAWKER     -7.2563e+01 -2.2956e+01 -9.0648e+00 -6.3781e-01 3.8439e+01\n   PROX_PHARMACY   -1.0591e+02 -3.2867e+01 -2.3136e+01 -1.3933e+00 1.0106e+02\n   PROX_PARK       -4.3781e+01 -1.4518e+01 -6.3276e+00  6.3055e+00 3.9140e+01\n   PROX_MALL       -7.8253e+01 -3.6393e+01 -6.5437e+00  1.2115e+01 4.6891e+01\n   PROX_SPRMKT     -1.3570e+02 -5.9855e+01 -2.7766e+01 -8.0718e-02 4.6203e+01\n   PROX_GOODP      -4.4953e+01 -1.2628e+01  8.2561e-01  9.0486e+00 3.4615e+01\n   NUM_KNDRGTN     -1.4397e+04 -1.3103e+03  4.0995e+03  1.1081e+04 2.2052e+04\n   NUM_CHILDCARE   -9.6929e+03 -4.5376e+03 -2.9498e+03 -1.5745e+03 1.8159e+03\n   NUM_BUS_STOP    -2.8820e+03 -1.1841e+03  2.5732e+02  9.5197e+02 2.6178e+03\n   NUM_PRISCH      -2.9142e+04 -6.9958e+03 -1.3525e+03  1.6400e+03 7.2517e+03\n   NUM_SECSCH      -1.2541e+04 -2.0706e+03  2.6619e+02  3.1935e+03 2.6800e+04\n   ************************Diagnostic information*************************\n   Number of data points: 14508 \n   Effective number of parameters (2trace(S) - trace(S'S)): 232.3903 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 14275.61 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 360210.2 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 360019.7 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 347088.5 \n   Residual sum of squares: 5.020664e+13 \n   R-square value:  0.8379075 \n   Adjusted R-square value:  0.8352687 \n\n   ***********************************************************************\n   Program stops at: 2023-03-17 12:52:21 \n\n\nFrom the output above, we see that Adjusted R-square is 0.8352, higher than the non-spatial mulitiple linear regression model."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#preparing-coordinates-data",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#preparing-coordinates-data",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "9.4 Preparing coordinates data",
    "text": "9.4 Preparing coordinates data\n\n9.4.1 Extracting coordinates data\nThe code chunk below extract the x, y coordinates of the full, training and test data sets. This is as taught in in-class exercise 9.\n\ncoords_train <- st_coordinates(training_data)\ncoords_test <- st_coordinates(test_data)\n\nBefore we proceed, we should save the output into rds for future uses\n\nwrite_rds(coords_train, \"data/model/coords_train.rds\" )\nwrite_rds(coords_test, \"data/model/coords_test.rds\" )\n\nAfterwhich, we can just retrieve the coordinates from the saved files.\n\ncoords_train <- read_rds(\"data/model/coords_train.rds\")\ncoords_test <- read_rds(\"data/model/coords_test.rds\")\n\n\n\n9.4.2 Dropping geometry field\nWe need to drop the geometry column of the sf data.frame by using st_drop_geometry() of the sf package. This is because, in the later parts, we cannot have the geometry columns in the data when running the random forest model.\n\ntrain_data_nogeo <- training_data %>%\n  st_drop_geometry()\n\n\n\nShow code\nwrite_rds(train_data_nogeo, \"data/model/train_data_nogeo.rds\")\n\n\n\ntrain_data_nogeo <- read_rds(\"data/model/train_data_nogeo.rds\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calibrating-random-forest-model",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calibrating-random-forest-model",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "9.5 Calibrating Random Forest Model",
    "text": "9.5 Calibrating Random Forest Model\nThe code chunk below uses ranger() from the ranger package\nThis is done to calibrate the model, for predicting HDB resale prices.\n\nset.seed(1234)\nrf <- ranger(PRICE ~ AREA_SQM + REMAINING_LEASE + Stry_Or + Improvd + DBSS + Standrd + Model.A + PrmmApr + Adjndfl + MdlA.Ms + Type.S2 + Imprv.M + PrmmApL + PROX_CBD + PROX_CLUBS + PROX_ELDERCARE + PROX_FAM + PROX_MRT +PROX_HAWKER + PROX_PHARMACY +PROX_PARK+PROX_MALL + PROX_SPRMKT + PROX_GOODP + NUM_KNDRGTN + NUM_CHILDCARE + NUM_BUS_STOP + NUM_PRISCH + NUM_SECSCH,\n                data = train_data_nogeo)\n\n\nprint(rf)\n\nRanger result\n\nCall:\n ranger(PRICE ~ AREA_SQM + REMAINING_LEASE + Stry_Or + Improvd +      DBSS + Standrd + Model.A + PrmmApr + Adjndfl + MdlA.Ms +      Type.S2 + Imprv.M + PrmmApL + PROX_CBD + PROX_CLUBS + PROX_ELDERCARE +      PROX_FAM + PROX_MRT + PROX_HAWKER + PROX_PHARMACY + PROX_PARK +      PROX_MALL + PROX_SPRMKT + PROX_GOODP + NUM_KNDRGTN + NUM_CHILDCARE +      NUM_BUS_STOP + NUM_PRISCH + NUM_SECSCH, data = train_data_nogeo) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      14508 \nNumber of independent variables:  29 \nMtry:                             5 \nTarget node size:                 5 \nVariable importance mode:         none \nSplitrule:                        variance \nOOB prediction error (MSE):       1836142422 \nR squared (OOB):                  0.9140025 \n\n\n\ngwRF_bw <- grf.bw(formula = PRICE ~ AREA_SQM + REMAINING_LEASE + Stry_Or + Improvd + DBSS + Standrd + Model.A + PrmmApr + Adjndfl + MdlA.Ms + Type.S2 + Imprv.M + PrmmApL + PROX_CBD + PROX_CLUBS + PROX_ELDERCARE + PROX_FAM + PROX_MRT +PROX_HAWKER + PROX_PHARMACY +PROX_PARK+PROX_MALL + PROX_SPRMKT + PROX_GOODP + NUM_KNDRGTN + NUM_CHILDCARE + NUM_BUS_STOP + NUM_PRISCH + NUM_SECSCH,\n                data = train_data_nogeo,\n                kernel = \"adaptive\",\n                trees = 30,\n                coords = coords_train\n                )\n\nDue to long computational time, we will make do with what has been generated.\n\n\nShow code\nBandwidth: 725\nR2 of Local Model: 0.830196864620965\nBandwidth: 726\nR2 of Local Model: 0.831511354240713\nBandwidth: 727\nR2 of Local Model: 0.825814193350772\nBandwidth: 728\nR2 of Local Model: 0.833117627936025\nBandwidth: 729\nR2 of Local Model: 0.831542049422668\nBandwidth: 730\nR2 of Local Model: 0.832690759328841\nBandwidth: 731\nR2 of Local Model: 0.831409189031434\nBandwidth: 732\nR2 of Local Model: 0.833478593806476\nBandwidth: 733\nR2 of Local Model: 0.828881217358686\nBandwidth: 734\nR2 of Local Model: 0.833837568289313\nBandwidth: 735\nR2 of Local Model: 0.830944546212957\nBandwidth: 736\nR2 of Local Model: 0.829109016792875\nBandwidth: 737\nR2 of Local Model: 0.832693746938043\nBandwidth: 738\nR2 of Local Model: 0.830609753683569\nBandwidth: 739\nR2 of Local Model: 0.828506606657883\nBandwidth: 740\nR2 of Local Model: 0.829942324327648\nBandwidth: 741\nR2 of Local Model: 0.829673050758191\nBandwidth: 742\nR2 of Local Model: 0.834731888959398\nBandwidth: 743\nR2 of Local Model: 0.831271390847821\nBandwidth: 744\nR2 of Local Model: 0.830326788690227\nBandwidth: 745\nR2 of Local Model: 0.832112671503318\nBandwidth: 746\nR2 of Local Model: 0.832734247748836\nBandwidth: 747\nR2 of Local Model: 0.831818201150335\nBandwidth: 748\nR2 of Local Model: 0.831135316402252\nBandwidth: 749\nR2 of Local Model: 0.832132102303099\nBandwidth: 750\nR2 of Local Model: 0.83134136735134\nBandwidth: 751\nR2 of Local Model: 0.8306802097722\nBandwidth: 752\nR2 of Local Model: 0.829479547542639\nBandwidth: 753\nR2 of Local Model: 0.833479383819347\nBandwidth: 754\nR2 of Local Model: 0.83099893981291\nBandwidth: 755\nR2 of Local Model: 0.830071154250661\nBandwidth: 756\nR2 of Local Model: 0.830529200273976\nBandwidth: 757\nR2 of Local Model: 0.831649054301567\nBandwidth: 758\nR2 of Local Model: 0.831735899098526\nBandwidth: 759\nR2 of Local Model: 0.830897778940034\nBandwidth: 760\nR2 of Local Model: 0.831347886646916\nBandwidth: 761\nR2 of Local Model: 0.828948414511987\nBandwidth: 762\nR2 of Local Model: 0.831341467830645\nBandwidth: 763\nR2 of Local Model: 0.830232601893768\nBandwidth: 764\nR2 of Local Model: 0.831059678585006\nBandwidth: 765\nR2 of Local Model: 0.828842780381122\nBandwidth: 766\nR2 of Local Model: 0.833282210197786\nBandwidth: 767\nR2 of Local Model: 0.82944064674115\nBandwidth: 768\nR2 of Local Model: 0.832924358100198\nBandwidth: 769\nR2 of Local Model: 0.830805294691046\nBandwidth: 770\nR2 of Local Model: 0.831274836665161\nBandwidth: 771\nR2 of Local Model: 0.830376397878408\nBandwidth: 772\nR2 of Local Model: 0.832604789981756\nBandwidth: 773\nR2 of Local Model: 0.829576028459974\nBandwidth: 774\nR2 of Local Model: 0.830796112836969\nBandwidth: 775\nR2 of Local Model: 0.831481002981783\nBandwidth: 776\nR2 of Local Model: 0.831676908866007\nBandwidth: 777\nR2 of Local Model: 0.82931315042137\nBandwidth: 778\nR2 of Local Model: 0.828951603116439\nBandwidth: 779\nR2 of Local Model: 0.831139055149746\nBandwidth: 780\nR2 of Local Model: 0.830316739537019\nBandwidth: 781\nR2 of Local Model: 0.830458930586156\nBandwidth: 782\nR2 of Local Model: 0.833230662394588\nBandwidth: 783\nR2 of Local Model: 0.832973909576033\nBandwidth: 784\nR2 of Local Model: 0.831423925116023\nBandwidth: 785\nR2 of Local Model: 0.829803683418786\nBandwidth: 786\nR2 of Local Model: 0.828531421840785\nBandwidth: 787\nR2 of Local Model: 0.830345759971399\nBandwidth: 788\nR2 of Local Model: 0.830471339400124\nBandwidth: 789\nR2 of Local Model: 0.832798840438387\nBandwidth: 790\nR2 of Local Model: 0.83113249780185\nBandwidth: 791\nR2 of Local Model: 0.827034393025223\nBandwidth: 792\nR2 of Local Model: 0.829133703096098\nBandwidth: 793\nR2 of Local Model: 0.831933812229025\nBandwidth: 794\nR2 of Local Model: 0.830849224075565\nBandwidth: 795\nR2 of Local Model: 0.830321144305101\nBandwidth: 796\nR2 of Local Model: 0.829138641042415\nBandwidth: 797\nR2 of Local Model: 0.830608786109532\nBandwidth: 798\nR2 of Local Model: 0.831307623612618\nBandwidth: 799\nR2 of Local Model: 0.833242600852963\nBandwidth: 800\nR2 of Local Model: 0.832427578593409\nBandwidth: 801\nR2 of Local Model: 0.83096960265283\nBandwidth: 802\nR2 of Local Model: 0.8301887673541\nBandwidth: 803\nR2 of Local Model: 0.834255445238142\nBandwidth: 804\nR2 of Local Model: 0.832521588463182\nBandwidth: 805\nR2 of Local Model: 0.831715300054422\nBandwidth: 806\nR2 of Local Model: 0.831639594906041\nBandwidth: 807\nR2 of Local Model: 0.83115606975791\nBandwidth: 808\nR2 of Local Model: 0.833148579276595\nBandwidth: 809\nR2 of Local Model: 0.831414942555648\nBandwidth: 810\nR2 of Local Model: 0.833719784150672\nBandwidth: 811\nR2 of Local Model: 0.828375723575394\nBandwidth: 812\nR2 of Local Model: 0.830543845828127\nBandwidth: 813\nR2 of Local Model: 0.832240311900002\nBandwidth: 814\nR2 of Local Model: 0.831434839902126\nBandwidth: 815\nR2 of Local Model: 0.828803556504407\nBandwidth: 816\nR2 of Local Model: 0.829547281428623\nBandwidth: 817\nR2 of Local Model: 0.831058937941818\nBandwidth: 818\nR2 of Local Model: 0.82938891796316\nBandwidth: 819\nR2 of Local Model: 0.830405198798365\nBandwidth: 820\nR2 of Local Model: 0.832115866093099\nBandwidth: 821\nR2 of Local Model: 0.830412735051787\nBandwidth: 822\nR2 of Local Model: 0.828572195678903\nBandwidth: 823\nR2 of Local Model: 0.830266787825573\nBandwidth: 824\nR2 of Local Model: 0.83184289974954\nBandwidth: 825\nR2 of Local Model: 0.829420782829894\nBandwidth: 826\nR2 of Local Model: 0.831359754548764\nBandwidth: 827\nR2 of Local Model: 0.830368557576751\nBandwidth: 828\nR2 of Local Model: 0.832429361513429\nBandwidth: 829\nR2 of Local Model: 0.829330567671406\nBandwidth: 830\nR2 of Local Model: 0.833664185213611\nBandwidth: 831\nR2 of Local Model: 0.829605680296404\nBandwidth: 832\nR2 of Local Model: 0.833311778486311\nBandwidth: 833\nR2 of Local Model: 0.830353478426326\nBandwidth: 834\nR2 of Local Model: 0.82977377053556\nBandwidth: 835\nR2 of Local Model: 0.829937703219876\nBandwidth: 836\nR2 of Local Model: 0.831846806163151\nBandwidth: 837\nR2 of Local Model: 0.829895075127843\nBandwidth: 838\nR2 of Local Model: 0.833262019160109\nBandwidth: 839\nR2 of Local Model: 0.829433660783203\nBandwidth: 840\nR2 of Local Model: 0.827531432547631\nBandwidth: 841\nR2 of Local Model: 0.82975712679373\nBandwidth: 842\nR2 of Local Model: 0.832414617979685\nBandwidth: 843\nR2 of Local Model: 0.830781131471392\nBandwidth: 844\nR2 of Local Model: 0.829109261064835\nBandwidth: 845\nR2 of Local Model: 0.832406223647478\nBandwidth: 846\nR2 of Local Model: 0.834708366156922\nBandwidth: 847\nR2 of Local Model: 0.833191760455706\nBandwidth: 848\nR2 of Local Model: 0.831812936634274\nBandwidth: 849\nR2 of Local Model: 0.832387913503154\nBandwidth: 850\nR2 of Local Model: 0.833075377352126\nBandwidth: 851\nR2 of Local Model: 0.830123177762137\nBandwidth: 852\nR2 of Local Model: 0.831841299216412\nBandwidth: 853\nR2 of Local Model: 0.831365701551992\nBandwidth: 854\nR2 of Local Model: 0.830989278187555\nBandwidth: 855\nR2 of Local Model: 0.834752901702268\nBandwidth: 856\nR2 of Local Model: 0.832148011460522\nBandwidth: 857\nR2 of Local Model: 0.830067314893585\nBandwidth: 858\nR2 of Local Model: 0.83078531914217\nBandwidth: 859\nR2 of Local Model: 0.830479327296697\nBandwidth: 860\nR2 of Local Model: 0.834880676239004\nBandwidth: 861\nR2 of Local Model: 0.833506472321838\nBandwidth: 862\nR2 of Local Model: 0.830843082210954\nBandwidth: 863\nR2 of Local Model: 0.830132630677842\nBandwidth: 864\nR2 of Local Model: 0.828704486734575\nBandwidth: 865\nR2 of Local Model: 0.8293732367072\nBandwidth: 866\nR2 of Local Model: 0.829996086927068\nBandwidth: 867\nR2 of Local Model: 0.83288312812145\nBandwidth: 868\nR2 of Local Model: 0.831467621740344\nBandwidth: 869\nR2 of Local Model: 0.829259249144337\nBandwidth: 870\nR2 of Local Model: 0.830770774516278\nBandwidth: 871\nR2 of Local Model: 0.828837075909044\nBandwidth: 872\nR2 of Local Model: 0.829758111980732\nBandwidth: 873\nR2 of Local Model: 0.829557855443734\nBandwidth: 874\nR2 of Local Model: 0.830523982844196\nBandwidth: 875\nR2 of Local Model: 0.831009886895258\nBandwidth: 876\nR2 of Local Model: 0.82944013294738\nBandwidth: 877\nR2 of Local Model: 0.832028294836151\nBandwidth: 878\nR2 of Local Model: 0.833992472427127\nBandwidth: 879\nR2 of Local Model: 0.828809446103142\nBandwidth: 880\nR2 of Local Model: 0.827440566241794\nBandwidth: 881\nR2 of Local Model: 0.83157952544884\nBandwidth: 882\nR2 of Local Model: 0.829294634223024\nBandwidth: 883\nR2 of Local Model: 0.832394559788004\nBandwidth: 884\nR2 of Local Model: 0.831141692432181\nBandwidth: 885\nR2 of Local Model: 0.831071687513164\nBandwidth: 886\nR2 of Local Model: 0.828715571246103\nBandwidth: 887\nR2 of Local Model: 0.829535263164816\nBandwidth: 888\nR2 of Local Model: 0.831319756325194\nBandwidth: 889\nR2 of Local Model: 0.831550952889957\nBandwidth: 890\nR2 of Local Model: 0.829990162602387\nBandwidth: 891\nR2 of Local Model: 0.834388880202844\nBandwidth: 892\nR2 of Local Model: 0.831444356778861\nBandwidth: 893\nR2 of Local Model: 0.829154145538292\nBandwidth: 894\nR2 of Local Model: 0.831118924732515\nBandwidth: 895\nR2 of Local Model: 0.832741630646768\nBandwidth: 896\nR2 of Local Model: 0.828300969146387\nBandwidth: 897\nR2 of Local Model: 0.831320866320787\nBandwidth: 898\nR2 of Local Model: 0.828244750811946\nBandwidth: 899\nR2 of Local Model: 0.832772387332717\nBandwidth: 900\nR2 of Local Model: 0.828538098204589\nBandwidth: 901\nR2 of Local Model: 0.82750095108753\nBandwidth: 902\nR2 of Local Model: 0.828826070773062\nBandwidth: 903\nR2 of Local Model: 0.830187793236362\nBandwidth: 904\nR2 of Local Model: 0.83278488113049\nBandwidth: 905\nR2 of Local Model: 0.830157433907511\n\n\nBase on the output, we will pick the best bandwidth that has the largest R2 of Local Model. The best bandwidth would be 860 with a R2 of 0.834880676239004."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calibrating-geographical-random-forest-model",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#calibrating-geographical-random-forest-model",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "9.6 Calibrating Geographical Random Forest Model",
    "text": "9.6 Calibrating Geographical Random Forest Model\nWe will use grf() from the SpatialML package to calibrate our GRF Model. It takes in the formula which is the same as the non-spatial regression. We will use the bandwidth calculated from the above section and generate base on ntree =30.\n\nset.seed(1234)\ngwRF_adaptive <- grf(PRICE ~ AREA_SQM + REMAINING_LEASE + Stry_Or + Improvd + DBSS + Standrd + Model.A + PrmmApr + Adjndfl + MdlA.Ms + Type.S2 + Imprv.M + PrmmApL + PROX_CBD + PROX_CLUBS + PROX_ELDERCARE + PROX_FAM + PROX_MRT +PROX_HAWKER + PROX_PHARMACY +PROX_PARK+PROX_MALL + PROX_SPRMKT + PROX_GOODP + NUM_KNDRGTN + NUM_CHILDCARE + NUM_BUS_STOP + NUM_PRISCH + NUM_SECSCH,\n                     dframe=train_data_nogeo, \n                     bw= 860,\n                     ntree = 30,\n                     kernel=\"adaptive\",\n                     coords=coords_train)\n\nLet’s save the model output below:\n\n\nShow code\nwrite_rds(gwRF_adaptive, \"data/model/grf_adaptive_30.rds\")\n\n\n\ngwRF_adaptive <- read_rds(\"data/model/grf_adaptive_30.rds\")\n\n\nglimpse(gwRF_adaptive$Local.Variable.Importance)\n\nRows: 14,508\nColumns: 29\n$ AREA_SQM        <dbl> 2.424581e+12, 1.067095e+12, 2.124910e+12, 7.837314e+11…\n$ REMAINING_LEASE <dbl> 5.968755e+12, 1.089890e+13, 9.198546e+12, 1.086368e+13…\n$ Stry_Or         <dbl> 1.667894e+12, 1.954235e+12, 1.815572e+12, 2.209834e+12…\n$ Improvd         <dbl> 46371370090, 46000691389, 199742435598, 48055723839, 7…\n$ DBSS            <dbl> 7.994889e+11, 1.986315e+12, 1.801003e+12, 3.074813e+12…\n$ Standrd         <dbl> 9821725666, 56537787184, 15127326668, 13405301561, 631…\n$ Model.A         <dbl> 173030452009, 120118885998, 130623963170, 64483614844,…\n$ PrmmApr         <dbl> 3521273825, 1407159318, 4885296574, 1080998429, 261446…\n$ Adjndfl         <dbl> 28010101108, 9842577858, 25925330231, 5026815733, 5281…\n$ MdlA.Ms         <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238319006725, 2…\n$ Type.S2         <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Imprv.M         <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ PrmmApL         <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ PROX_CBD        <dbl> 3.143436e+12, 1.637833e+12, 2.894628e+12, 1.109727e+12…\n$ PROX_CLUBS      <dbl> 264741138668, 256459298333, 317281249569, 368099992286…\n$ PROX_ELDERCARE  <dbl> 2.720343e+12, 4.122348e+11, 8.026449e+11, 6.336642e+11…\n$ PROX_FAM        <dbl> 702241926259, 563650762125, 317687788090, 366672142814…\n$ PROX_MRT        <dbl> 443333732342, 311850538700, 562893756604, 534168623064…\n$ PROX_HAWKER     <dbl> 1.412642e+12, 9.811855e+11, 6.902099e+11, 1.284863e+12…\n$ PROX_PHARMACY   <dbl> 247787721115, 291240092756, 413695349865, 302242460583…\n$ PROX_PARK       <dbl> 396585553907, 299799741177, 465855477858, 317239418707…\n$ PROX_MALL       <dbl> 401899080285, 475189291360, 333830540213, 396914155503…\n$ PROX_SPRMKT     <dbl> 210055129383, 645232312470, 429357319993, 362962573963…\n$ PROX_GOODP      <dbl> 4.228778e+11, 1.239573e+12, 9.654273e+11, 1.172245e+12…\n$ NUM_KNDRGTN     <dbl> 1.085026e+11, 1.945946e+12, 7.812492e+11, 1.678249e+12…\n$ NUM_CHILDCARE   <dbl> 377010029537, 120213318416, 182572370153, 166189406726…\n$ NUM_BUS_STOP    <dbl> 126496825575, 199449729515, 165931917136, 299260796894…\n$ NUM_PRISCH      <dbl> 2.100533e+11, 3.394678e+11, 7.286130e+11, 3.729309e+11…\n$ NUM_SECSCH      <dbl> 43167881817, 89902757844, 148178405985, 34834034730, 6…\n\ngwRF_adaptive$Global.Model\n\nRanger result\n\nCall:\n ranger(PRICE ~ AREA_SQM + REMAINING_LEASE + Stry_Or + Improvd +      DBSS + Standrd + Model.A + PrmmApr + Adjndfl + MdlA.Ms +      Type.S2 + Imprv.M + PrmmApL + PROX_CBD + PROX_CLUBS + PROX_ELDERCARE +      PROX_FAM + PROX_MRT + PROX_HAWKER + PROX_PHARMACY + PROX_PARK +      PROX_MALL + PROX_SPRMKT + PROX_GOODP + NUM_KNDRGTN + NUM_CHILDCARE +      NUM_BUS_STOP + NUM_PRISCH + NUM_SECSCH, data = train_data_nogeo,      num.trees = 30, mtry = 9, importance = \"impurity\", num.threads = NULL) \n\nType:                             Regression \nNumber of trees:                  30 \nSample size:                      14508 \nNumber of independent variables:  29 \nMtry:                             9 \nTarget node size:                 5 \nVariable importance mode:         impurity \nSplitrule:                        variance \nOOB prediction error (MSE):       1849063516 \nR squared (OOB):                  0.9133974"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#predicting-by-using-test-data",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#predicting-by-using-test-data",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "9.7 Predicting by using test data",
    "text": "9.7 Predicting by using test data\n\n9.7.1 Preparing the test data\nThe code chunk below will be used to combine the test data with its corresponding coordinates data\n\ntest_data <- cbind(test_data, coords_test) %>%\n  st_drop_geometry()\n\n\n\n9.7.2 Predicting with test data\nNext, predict.grf() of SpatialML package will be used to predict the resale value by using the test data and gwRF_adaptive model calibrated earlier.\n\ngwRF_pred <- predict.grf(gwRF_adaptive, \n                           test_data, \n                           x.var.name=\"X\",\n                           y.var.name=\"Y\", \n                           local.w=1,\n                           global.w=0)\n\nWe should always save our output into rds since these computations take a really long time.\n\n\nShow code\nwrite_rds(gwRF_pred, \"data/model/GRF_pred.rds\")\n\n\n\n\n9.7.3 Converting predicted output into a data frame\n\n#reads the data in and makes it a dataframe\nGRF_pred_df <- as.data.frame(read_rds(\"data/model/GRF_pred.rds\"))\n\nThen, we will use cbind() to append the predicted values onto the test data\n\ntest_data_p <- cbind(test_data, GRF_pred_df)\n\n\nwrite_rds(test_data_p, \"data/model/test_data_p.rds\")\n\n\ntest_data_p <- read_rds(\"data/model/test_data_p.rds\")\n\n\n\n9.7.4 Calculating Root Mean Square Error\nThe root mean square error (RMSE) allows us to measure how far predicted values are from observed values in a regression analysis. In the code chunk below, rmse() of Metrics package is used to compute the RMSE.\n\nglimpse(test_data_p)\n\nRows: 998\nColumns: 50\n$ PRICE                                 <dbl> 682888.0, 695000.0, 658888.0, 74…\n$ month                                 <date> 2023-01-01, 2023-01-01, 2023-01…\n$ AREA_SQM                              <dbl> 123, 123, 119, 119, 135, 135, 11…\n$ REMAINING_LEASE                       <dbl> 53.58, 53.58, 55.42, 54.92, 58.4…\n$ Stry_Or                               <dbl> 6, 2, 4, 8, 5, 1, 2, 5, 4, 7, 7,…\n$ Improvd                               <dbl> 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1,…\n$ NwGnrtn                               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ DBSS                                  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Standrd                               <dbl> 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Aprtmnt                               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Simplfd                               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Model.A                               <dbl> 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0,…\n$ PrmmApr                               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Adjndfl                               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ MdlA.Ms                               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Maisntt                               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Type.S1                               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Type.S2                               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ ModelA2                               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Terrace                               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Imprv.M                               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ PrmmMsn                               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ MltGnrt                               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ PrmmApL                               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ X2.room                               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ X3Gen                                 <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ PROX_CBD                              <dbl> 8625.861, 8625.861, 8139.329, 88…\n$ PROX_BUS                              <dbl> 178.81652, 178.81652, 118.76102,…\n$ PROX_CLUBS                            <dbl> 578.73029, 578.73029, 265.15993,…\n$ PROX_ELDERCARE                        <dbl> 211.9637, 211.9637, 367.6850, 35…\n$ PROX_FAM                              <dbl> 940.0572, 940.0572, 612.9699, 31…\n$ PROX_MRT                              <dbl> 573.2417, 573.2417, 1065.8815, 3…\n$ PROX_HAWKER                           <dbl> 331.2628, 331.2628, 143.0536, 37…\n$ PROX_KINDERGARTENS                    <dbl> 188.26098, 188.26098, 518.63595,…\n$ PROX_PHARMACY                         <dbl> 488.5421, 488.5421, 1152.5507, 5…\n$ PROX_PARK                             <dbl> 554.3174, 554.3174, 537.1188, 39…\n$ PROX_MALL                             <dbl> 490.9497, 490.9497, 1145.3444, 5…\n$ PROX_SPRMKT                           <dbl> 246.50070, 246.50070, 504.07157,…\n$ PROX_CHILDCARE                        <dbl> 1.580294e+02, 1.580294e+02, 3.27…\n$ PROX_PRISCH                           <dbl> 585.34956, 585.34956, 240.18714,…\n$ PROX_GOODP                            <dbl> 5325.218, 5325.218, 4880.120, 56…\n$ PROX_SECSCH                           <dbl> 438.0324, 438.0324, 586.3205, 25…\n$ NUM_KNDRGTN                           <dbl> 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 2,…\n$ NUM_CHILDCARE                         <dbl> 6, 6, 1, 4, 2, 2, 3, 5, 5, 4, 8,…\n$ NUM_BUS_STOP                          <dbl> 6, 6, 7, 6, 6, 6, 6, 8, 10, 6, 8…\n$ NUM_PRISCH                            <dbl> 3, 3, 2, 3, 3, 3, 2, 2, 2, 2, 3,…\n$ NUM_SECSCH                            <dbl> 2, 2, 1, 2, 2, 2, 3, 2, 2, 2, 3,…\n$ X                                     <dbl> 29383.53, 29383.53, 30446.32, 30…\n$ Y                                     <dbl> 38640.51, 38640.51, 38170.74, 38…\n$ `read_rds(\"data/model/GRF_pred.rds\")` <dbl> 694987.6, 674191.5, 670978.4, 72…\n\n\nWe notice that the column name is stated read_rds(\"data/model/GRF_pred.rds\"), we will change the name accordingly.\n\ntest_data_p <- test_data_p %>%\n  rename(GRF_pred = `read_rds(\"data/model/GRF_pred.rds\")`)\n\n\nrmse_grf<- rmse(test_data_p$PRICE, \n     test_data_p$GRF_pred)\nrmse_grf\n\n[1] 56235.78\n\n\nWe notice from the rmse is 56235.78, which is lower than the OLS rmse. Furthermore, Rsquare of the gwRF is 0.91 which is much higher than the OLS model. Hence, this is a better model in terms if its prediction accuracy.\n\n\n9.7.5 Visualising the predicted values\n\nggplot(data = test_data_p,\n       aes(x = GRF_pred,\n           y = PRICE)) +\n  geom_point()"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#differences-between-the-two-models",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#differences-between-the-two-models",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "10.1 Differences between the two models",
    "text": "10.1 Differences between the two models\n\nOLS does not take into account the spatial autocorrelation whereas GRF does.\nConventional OLS is generally good for exploratory data analysis but even so, more needs to be done to improve the model if it is meant to be used for prediction\n\nWe will compare the two models base on RMSE and on the visual plot.\n\nNon-Spatial Multiple linear RegressionGeographical Random Forest Model\n\n\n\nrmse_lm\n\n[1] 87822.93\n\n\n\ntest_data_lm <- cbind(test_data, lm_predicted_value)\n\n\nggplot(data = test_data_lm,\n       aes(x = lm_predicted_value,\n           y = PRICE)) +\n  geom_point() +\n  geom_abline(col = \"Red\")\n\n\n\n\n\n\n\nrmse_grf\n\n[1] 56235.78\n\n\n\nggplot(data = test_data_p,\n       aes(x = GRF_pred,\n           y = PRICE)) +\n  geom_point()+\n  geom_abline(col = \"Red\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#predictive-power",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#predictive-power",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "10.2 Predictive Power",
    "text": "10.2 Predictive Power\nBy comparing the two models, we can see the RMSE for GRF, 56235.78, is lower than the RMSE for non-spatial regression, 87822.93. This suggest that the GRF Model is better at predicting the resale price.\nFurthermore, we also notice that the points scattered in the GRF Model are clustered around the red line more than the non-spatial regression."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#limitations-of-analysis",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#limitations-of-analysis",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "10.3 Limitations of Analysis",
    "text": "10.3 Limitations of Analysis\n\nOne obvious limitation is the “sub-optimal” bandwidth generated for the GRF Model. This is due to the lack of computational power our devices have.\nSecond is the number of trees that can be generated. Again for the same reason, I was only able to do ntree = 30. Having more trees may have better predictive power."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#possible-improvements-to-the-model",
    "href": "Take-Home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#possible-improvements-to-the-model",
    "title": "Take-home Exercise 3: Predicting HDB Public Housing Resale Pricies using Geographically Weighted Methods",
    "section": "10.4 Possible Improvements to the model",
    "text": "10.4 Possible Improvements to the model\n\nOne way to improve the model could be the use of interactive variables.\n\nInteractive variables helps to showcase the combined effects between two variables. For example, story_ordinal and NUM of primary school as an interactive variable. The intuition behind this is that primary schools generally contribute to higher noise-pollution and the higher the story level, the better as it can reduce the amount of noise that reaches the apartment. Such combined effects may improve the predictive power the model have.\nAnother example could be PROX_Parks and Story_Order. The closer one is to parks may signify better views. Higher story may allow residents to have better views and thus raise the price of the apartment. Again this is a useful variable to consider in our modelling.\n\nRemoving outliers\n\nWhile the regression helps us explain more than 90% of the variation in the Resale Price, there may be other reasons not captured affect the price. This could include sellers recent renovation of apartment, internal problems of the apartment and many others. Removing outliers may better fit the regression and reduce the prediction error.\nHowever, outliers may have significant effect on the regression and may hold important information about the resale price. Hence, if the goal is to form a regression that is able to predict resale prices approximately, removing outliers in the training data may improve the model."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/data/geospatial/Singapore_POIS.html",
    "href": "Take-Home_Ex/Take-Home_Ex03/data/geospatial/Singapore_POIS.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex03/data/geospatial/MPSZ-2019.html",
    "href": "Take-Home_Ex/Take-Home_Ex03/data/geospatial/MPSZ-2019.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html",
    "title": "Take-Home Exercise 2: Spatio-temporal analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jarkarta",
    "section": "",
    "text": "Since the outbreak of COVID-19, many countries have rushed to create a vaccine and ensure its population is well immunized against this novel coronavirus. On 13 January 2021, the mass immunisation program commenced and since then Indonesia ranks third in Asia and fifth in the world in terms of total doses given.\nIn this take-home assignment, we will be exploring vaccination rates in DKI Jarkarta, identifying sub-districts with relatively higher number of vaccination rate and how they changed over time.\nThe tasks given to us is as follows:\nChoropleth Mapping and Analysis\n\nCompute the monthly vaccination rate from July 2021 to June 2022 at sub-district (also known as kelurahan in Bahasa Indonesia) level,\nPrepare the monthly vaccination rate maps by using appropriate tmap functions,\nDescribe the spatial patterns revealed by the choropleth maps (not more than 200 words).\n\nLocal Gi* Analysis\nWith reference to the vaccination rate maps prepared in ESDA:\n\nCompute local Gi* values of the monthly vaccination rate,\nDisplay the Gi* maps of the monthly vaccination rate. The maps should only display the significant (i.e. p-value < 0.05)\nWith reference to the analysis results, draw statistical conclusions (not more than 250 words).\n\nEmerging Hot Spot Analysis(EHSA)\nWith reference to the local Gi* values of the vaccination rate maps prepared in the previous section:\n\nPerform Mann-Kendall Test by using the spatio-temporal local Gi* values,\nSelect three sub-districts and describe the temporal trends revealed (not more than 250 words), and\nPrepared a EHSA map of the Gi* values of vaccination rate. The maps should only display the significant (i.e. p-value < 0.05).\nWith reference to the EHSA map prepared, describe the spatial patterns revelaed. (not more than 250 words).\n\nThroughout this page, each step will be explained and guided so that you can follow along."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#packages-used",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#packages-used",
    "title": "Take-Home Exercise 2: Spatio-temporal analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jarkarta",
    "section": "2.1 Packages Used",
    "text": "2.1 Packages Used\nThe R packages used for this analysis are:\n\nsf\ntidyverse\nspatstat\ntmap\nsfdep\nmaptools\nreadxl\n\nThe code chunk below checks whether the packages have been installed, if not it will automatically install them and load the packages into Rstudio.\n\npacman::p_load(sf, raster, spatstat, tmap, tidyverse, sfdep, maptools, readxl, plotly)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#the-data",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#the-data",
    "title": "Take-Home Exercise 2: Spatio-temporal analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jarkarta",
    "section": "2.2 The Data",
    "text": "2.2 The Data\n\n\n\nType\nName\nFormat\nDescription\n\n\n\n\nGeospatial\nBatas Desa Provinsi DKI Jakarta\nshapefile\nSub-districts in DKI Jakarta\n\n\nAspatial\nRiwayat File Vaksinasi DKI Jakarta\n.xlsx\nSub-district level data of vaccination numbers between July 2021 to June 2022\n\n\n\n\nGeospatial Data\n\nThe link under Geospatial Data above brings you to a page where there are many download links sorted by province. Ensure that you are using Shapefile (SHP) Batas Desa Provinsi DKI Jakarta.\n\nAspatial Data\n\nThe link under Aspatial Data above brings you to a page where there are two types of data files you can use. Please choose Data Vaksinasi Berbasis Kelurahan dan Kecamatan and download a total of 12 files beginning July 2021 to June 2022.\nDo note that we will be using the beginning of each month for our download."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#geospatial-data",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#geospatial-data",
    "title": "Take-Home Exercise 2: Spatio-temporal analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jarkarta",
    "section": "3.1 Geospatial Data",
    "text": "3.1 Geospatial Data\n\n3.1.1 Import Geospatial Data\n\ngeoDKI <- st_read(dsn = \"data/geospatial\",\n                    layer = \"BATAS_DESA_DESEMBER_2019_DUKCAPIL_DKI_JAKARTA\")\n\nReading layer `BATAS_DESA_DESEMBER_2019_DUKCAPIL_DKI_JAKARTA' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/Take-Home_Ex/Take-Home_Ex02/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 269 features and 161 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 106.3831 ymin: -6.370815 xmax: 106.9728 ymax: -5.184322\nGeodetic CRS:  WGS 84\n\n\nFrom the output above, we can see that the data set has a geometry type, Multipolygon, and has 269 features and 161 fields.\n\n\n3.1.2 Check for invalid geometries\nBefore we begin, we should check whether there are any invalid geometries by using the code chunk below:\n\nst_is_valid(geoDKI)\n\n  [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [31] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [46] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [61] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [76] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [91] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[106] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[121] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[136] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[151] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[166] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[181] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[196] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[211] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[226] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[241] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n[256] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n\nst_is_valid() from the sf package helps to check whether a geometry is valid. From the output, there are no invalid geometries.\n\n\n3.1.3 Check for Missing values\nThe code chunk below uses is.na() from base R checks whether the data set has NA values. which() from base R takes the indices of these values and lastly length() helps us calculate the length of the data objects.\n\nlength(which(is.na(geoDKI) == TRUE))\n\n[1] 14\n\n\nIn the above output, there are 14 NA values within the jakarta data set. We will carry on with these 14 NA values and will be further explained later.\n\n\n3.1.4 Check Coordinate System\nAs different countries use different projection systems, we need to first check the CRS of jakarta.\nThe code chunk below uses st_crs() from the sf package:\n\nst_crs(geoDKI)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\nWe notice that jakarta is using EPSG::4326 which is the wrong projection coordinate system. DKI Jakarta uses the DGN95, the ‘Datum Geodesi Nasional 1995’, EPSG::23878\nWe can transform the crs by using st_transform() from the sf package:\n\ngeoDKI <- geoDKI %>%\n  st_transform(crs = 23878)\n\n\nst_crs(geoDKI)\n\nCoordinate Reference System:\n  User input: EPSG:23878 \n  wkt:\nPROJCRS[\"DGN95 / UTM zone 48S\",\n    BASEGEOGCRS[\"DGN95\",\n        DATUM[\"Datum Geodesi Nasional 1995\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4755]],\n    CONVERSION[\"UTM zone 48S\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",105,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",10000000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Engineering survey, topographic mapping.\"],\n        AREA[\"Indonesia - south of equator and between 102°E and 108°E - onshore and offshore.\"],\n        BBOX[-10.73,102,0,108.01]],\n    ID[\"EPSG\",23878]]\n\n\nFrom the output above, we can see that the CRS has been properly assigned.\n\n\n3.1.5 Removing Outer Islands\nLet us visualise the geographical polygons.\n\nqtm(geoDKI)\n\n\n\n\nWe can see from the output that jakarta includes both the mainland and the outer islands. Our study area focuses only on the mainland and thus we need to remove them.\n\nView(geoDKI)\n\nBefore we continue further, we need to understand how DKI Jakarta geographical regions are segmented. The code chunk above lets you view the entire dataset. Let us understand the key variables below:\nWith the help of uncle google, we will translate the names.\n\n\n\nName\nTranslation\n\n\n\n\nKODE_DESA\nVillage Code (Sub-District Codes)\n\n\nDESA\nVillage\n\n\nPROVINSI\nProvince\n\n\nKAB_KOTA\nCity\n\n\nKECAMATAN\nSub-District\n\n\n\nKAB_KOTA would be the most logical choice in isolating out the outer islands. This will be shown in the plots later.\nThe code chunk below helps to output unique values in KAB_KOTA field.\n\nunique(geoDKI$KAB_KOTA)\n\n[1] \"JAKARTA BARAT\"    \"JAKARTA PUSAT\"    \"KEPULAUAN SERIBU\" \"JAKARTA UTARA\"   \n[5] \"JAKARTA TIMUR\"    \"JAKARTA SELATAN\"  NA                \n\n\nThe output above shows that there are 6 major cities in DKI Jakarta, ignoring the NA value.\nThe codechunk below will visualize the data with respect to the 6 major cities. We can then see which city isolates out the outer islands.\n\ntmap_mode(\"view\")\ntm_shape(geoDKI) +\n  tm_polygons(\"KAB_KOTA\") +\n  tm_view(set.zoom.limits = c(9,14))\n\n\n\n\n\n\n\n3.1.5.1 Dealing with NA values\nBefore we filter out the outer islands, we have to fix the NA values within geoDKI.\nThe NA values in geoDKI pertains to the information of small areas that is shaded white, shown in the map above between JAKARTA UTARA and JAKARTA PUSAT\nBy viewing geoDKI, row 243 and 244 is where all the 14 NA reside at, as mentioned above. From checking the area bounds online, the white sub-districts pertains to city region, JAKARTA UTARA. As we could not find the KODE DESA (village code), we will just assign unique values: 3188888801 and 3188888802 for now.\nThis ensures completeness in our geographical plots later on.\n\ngeoDKI$KAB_KOTA[243]<-\"JAKARTA UTARA\"\ngeoDKI$KAB_KOTA[244]<-\"JAKARTA UTARA\"\n\ngeoDKI$KODE_DESA[243]<-\"3188888801\"\ngeoDKI$KODE_DESA[244]<-\"3188888802\"\n\n\n\n3.1.5.2 Filtering out Outer Islands\nFrom the visualization above, we can see that KEPULAUAN SERIBU is not part of the mainland. We can then use filter() from dplyr package to remove the outer islands.\n\ngeoDKI <- filter(geoDKI, KAB_KOTA !=\"KEPULAUAN SERIBU\")\n\n\ntmap_mode(\"plot\")\ntm_shape(geoDKI) + \n  tm_polygons(\"KAB_KOTA\")\n\n\n\n\nOn top of getting the mainland study area, we notice the two white shaded areas are now under JAKARTA UTARA (Blue).\n\n\n\n3.1.6 Filtering Relevant Columns\nNow, before we move on further, geoDKI has alot of columns. Since we are only interested in the subdistrict level, we will select KODE_DESA and rename it to village_code.\nNote: village_code is also known as the subdistrict code.\n\ngeoDKI <- geoDKI %>%\n  select(2, \"geometry\") %>%\n  rename(village_code = `KODE_DESA`)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#aspatial-data",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#aspatial-data",
    "title": "Take-Home Exercise 2: Spatio-temporal analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jarkarta",
    "section": "3.2 Aspatial Data",
    "text": "3.2 Aspatial Data\n\n3.2.1 Import Aspatial Data\nBefore we import the data in, the file names are rather long. First, go to your data folder and change the aspatial data file names to Y-M format. It would look like this:\n\n\n\n\n\nThere are a total of 12 excel files we need to load into Rstudio. To read the files more efficiently, we will use the “for loop” to read all the excel files into a data frame by using the read_excel() from the readxl package.\n\n# Set the working directory to the folder containing the Excel files\nsetwd(\"data/aspatial/\")\n# Get a list of all Excel files in the directory\naspatial_data <- list.files(pattern = \".xlsx\")\n\n# Loop through the files and read each one into a data frame\nfor (i in aspatial_data) {\n  assign(gsub(\".xlsx\", \"\", i), read_excel(i))\n}\n\n\n\n3.2.2 Columns of interest and its translation\nIn the aspatial data set, what we want is the total vaccination and not vaccinated numbers, along with these 4 regional classification columns.\n\nnames(`2022-6`)\n\n [1] \"KODE KELURAHAN\"                            \n [2] \"WILAYAH KOTA\"                              \n [3] \"KECAMATAN\"                                 \n [4] \"KELURAHAN\"                                 \n [5] \"SASARAN\"                                   \n [6] \"BELUM VAKSIN\"                              \n [7] \"JUMLAH\\r\\nDOSIS 1\"                         \n [8] \"JUMLAH\\r\\nDOSIS 2\"                         \n [9] \"JUMLAH\\r\\nDOSIS 3\"                         \n[10] \"TOTAL VAKSIN\\r\\nDIBERIKAN\"                 \n[11] \"LANSIA\\r\\nDOSIS 1\"                         \n[12] \"LANSIA\\r\\nDOSIS 2\"                         \n[13] \"LANSIA\\r\\nDOSIS 3\"                         \n[14] \"LANSIA TOTAL \\r\\nVAKSIN DIBERIKAN\"         \n[15] \"PELAYAN PUBLIK\\r\\nDOSIS 1\"                 \n[16] \"PELAYAN PUBLIK\\r\\nDOSIS 2\"                 \n[17] \"PELAYAN PUBLIK\\r\\nDOSIS 3\"                 \n[18] \"PELAYAN PUBLIK TOTAL\\r\\nVAKSIN DIBERIKAN\"  \n[19] \"GOTONG ROYONG\\r\\nDOSIS 1\"                  \n[20] \"GOTONG ROYONG\\r\\nDOSIS 2\"                  \n[21] \"GOTONG ROYONG\\r\\nDOSIS 3\"                  \n[22] \"GOTONG ROYONG TOTAL\\r\\nVAKSIN DIBERIKAN\"   \n[23] \"TENAGA KESEHATAN\\r\\nDOSIS 1\"               \n[24] \"TENAGA KESEHATAN\\r\\nDOSIS 2\"               \n[25] \"TENAGA KESEHATAN\\r\\nDOSIS 3\"               \n[26] \"TENAGA KESEHATAN TOTAL\\r\\nVAKSIN DIBERIKAN\"\n[27] \"TAHAPAN 3\\r\\nDOSIS 1\"                      \n[28] \"TAHAPAN 3\\r\\nDOSIS 2\"                      \n[29] \"TAHAPAN 3\\r\\nDOSIS 3\"                      \n[30] \"TAHAPAN 3 TOTAL\\r\\nVAKSIN DIBERIKAN\"       \n[31] \"REMAJA\\r\\nDOSIS 1\"                         \n[32] \"REMAJA\\r\\nDOSIS 2\"                         \n[33] \"REMAJA\\r\\nDOSIS 3\"                         \n[34] \"REMAJA TOTAL\\r\\nVAKSIN DIBERIKAN\"          \n\n\n\n\n\nName\nTranslation\n\n\n\n\nKODE KELURAHAN\nVillage Code\n\n\nWILAYAH KOTA\nCity Region\n\n\nSASARAN\nVaccinated\n\n\nBELUM VAKSIN\nNot Vaccinated\n\n\n\n\n\n3.2.3 Mutate Aspatial Data\n\n3.2.3.1 Mutating using for loop\nAs there are 12 data sets, we will use the for loop that mutate, rename and select the fields that we want. The code chunk below does the following:\n\nRenames KODE KELURAHAN, WILAYAH KOTA, SASARAN and BELUM VAKSIN to village_code, city_region, vaccinated and not_vaccinated respectively by using rename() from the dplyr package\nSelects the renamed columns by using select() from the dplyr package\nAdds a date column by using mutate() from the dplyr package\n\nAll the mutated aspatial data frames are then placed into a list\n\nlist_mth<- list(`2021-7`,`2021-8`,`2021-9`,`2021-10`,`2021-11`,`2021-12`,`2022-1`,`2022-2`,`2022-3`,`2022-4`,`2022-5`,`2022-6`)\n\ndate <- c(\"2021-07-01\", \"2021-08-01\", \"2021-09-01\", \"2021-10-01\", \"2021-11-01\", \"2021-12-01\",\n          \"2022-01-01\", \"2022-02-01\", \"2022-03-01\",\"2022-04-01\", \"2022-05-01\", \"2022-06-01\")\n\nlists <- list()\nfor (i in c(1:12)){\n  lists[[i]]<- list_mth[[i]] %>% \n    rename(village_code=`KODE KELURAHAN`,\n           city_region =`WILAYAH KOTA`,\n           target= `SASARAN`, \n           not_vaccinated =`BELUM VAKSIN`) %>% \n  select(village_code,city_region, not_vaccinated ,target) %>%\n    mutate(date = as.Date(date[i]), \n           .before=1)\n}\n\n\n\n3.2.3.2 Combine into a single dataframe from a list of dataframes\nAfterwhich, we can use Reduce() and rbind from base R to join all dataframes in the lists as one dataframe.\nThe code chunk below does this:\n\naspatial_data <- Reduce(rbind, lists)\nglimpse(aspatial_data)\n\nRows: 3,216\nColumns: 5\n$ date           <date> 2021-07-01, 2021-07-01, 2021-07-01, 2021-07-01, 2021-0…\n$ village_code   <chr> NA, \"3172051003\", \"3173041007\", \"3175041005\", \"31750310…\n$ city_region    <chr> NA, \"JAKARTA UTARA\", \"JAKARTA BARAT\", \"JAKARTA TIMUR\", …\n$ not_vaccinated <dbl> 5041111, 13272, 16477, 18849, 5743, 15407, 12503, 11268…\n$ target         <dbl> 7739060, 20393, 25785, 25158, 8683, 22768, 18930, 20267…\n\n\nWe can see from the output that we have the columns that we want in its new name and having 3216 rows.\nFrom the glimpse output, we can see that there are NA values inside the dataframe. If you View the original individual files, you will notice that there will be a row that calculates the total of a respective column and that row contains NA values.\n\n\n3.2.3.3 Final steps to take\nSo these are the steps to take,\n\nRemove the NA rows in the dataframe\nFilter out the outer islands\n\nYou will notice from the output of the code chunk below that outer islands is categorised as KAB.ADM.KEP.SERIBU\n\n\n\nunique(aspatial_data$city_region)\n\n[1] NA                   \"JAKARTA UTARA\"      \"JAKARTA BARAT\"     \n[4] \"JAKARTA TIMUR\"      \"JAKARTA SELATAN\"    \"JAKARTA PUSAT\"     \n[7] \"KAB.ADM.KEP.SERIBU\"\n\n\n\nAdd in vaccination rate column\n\nFormula:\n\nvaccination_rate = (target - not_vaccinated)/target\n\n\n\nThe code chunk below does this:\n\naspatial_data <- aspatial_data %>%\n  na.exclude() %>%\n  filter(city_region != \"KAB.ADM.KEP.SERIBU\") %>% \n  mutate(vaccination_rate = as.numeric((target-not_vaccinated)/target)) %>%\n  select(date, village_code, vaccination_rate)\n\n\nAdd in village code: 3188888801 and 3188888802\n\nRecall that there are two polygons that held missing values.\n\nsetdiff(geoDKI$village_code, aspatial_data$village_code)\n\n[1] \"3188888801\" \"3188888802\"\n\n\nWe notice that in the aspatial data, no information were collected for these two sub-districts. Hence, we have to add in these two subdistricts so that both dataframes will match when it is joined later on.\nNote: Each month must have one observation, vaccination rate for the added rows will be considered NA, missing data.\n\naspatial_data <- rbind(aspatial_data, c(\"2021-07-01\", 3188888801,NA),\n                       c(\"2021-08-01\", 3188888801,NA),\n                       c(\"2021-09-01\", 3188888801,NA),\n                       c(\"2021-10-01\", 3188888801,NA),\n                       c(\"2021-11-01\", 3188888801,NA),\n                       c(\"2021-12-01\", 3188888801,NA),\n                       c(\"2022-01-01\", 3188888801,NA),\n                       c(\"2022-02-01\", 3188888801,NA),\n                       c(\"2022-03-01\", 3188888801,NA),\n                       c(\"2022-04-01\", 3188888801,NA),\n                       c(\"2022-05-01\", 3188888801,NA),\n                       c(\"2022-06-01\", 3188888801,NA),\n                       c(\"2021-07-01\", 3188888802,NA),\n                       c(\"2021-08-01\", 3188888802,NA),\n                       c(\"2021-09-01\", 3188888802,NA),\n                       c(\"2021-10-01\", 3188888802,NA),\n                       c(\"2021-11-01\", 3188888802,NA),\n                       c(\"2021-12-01\", 3188888802,NA),\n                       c(\"2022-01-01\", 3188888802,NA),\n                       c(\"2022-02-01\", 3188888802,NA),\n                       c(\"2022-03-01\", 3188888802,NA),\n                       c(\"2022-04-01\", 3188888802,NA),\n                       c(\"2022-05-01\", 3188888802,NA),\n                       c(\"2022-06-01\", 3188888802,NA))\n\nBoth aspatial_data and geoDKI have the same number of unique village code.\n\nThe code chunk below joins them together by their village code, sets vaccination_rate as numeric in the joined dataframe.\n\nvaccination <- left_join(aspatial_data, geoDKI, \n                         by = c(\"village_code\")) %>%\n  mutate(vaccination_rate = as.numeric(vaccination_rate))\n\nWe can save the vaccination sf dataframe as a file so that we can call upon it without having to run the above codes.\nFurthermore, when we transfer this file to other people, they will notice the two polygons with missing data more clearly when analysing the datafile.\n\n\n\nAfterwhich, we can then exclude the NA values and convert the object to sf.\n\nvaccination <- vaccination %>%\n  na.exclude() %>%\n  st_as_sf()"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#visualizing-the-data",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#visualizing-the-data",
    "title": "Take-Home Exercise 2: Spatio-temporal analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jarkarta",
    "section": "4.1 Visualizing the data",
    "text": "4.1 Visualizing the data\n\n4.1.1 R Shiny\nSomething extra to this TakeHome Assignment will be the use of the ShinyApp. This is a short introduction as to how Rshiny works:\n\nDefine the UI:\n\nYou will have an input and in this case, we will use selectInput(“dates”, “Pick a month”, date, selected = “July 2021”,multiple = FALSE).\n\n“dates”: This is the variable name to call into the output portion in the server\n“Pick a month”: This is a text under the user interface to ask the user to pick a choice\ndate: This is the vector of choices that they can pick from.\nselected = “July 2021” : This sets the choice “July 2021” as the default when starting up the app\nmultiple = FALSE : Prevents the user from picking multiple options and can only choose 1\n\n\nDefine Server:\n\nThis is where tmap is used and calls upon the variable name defined in UI which is “dates”.\n\n\n\nlibrary(shiny)\n\ndate <- c(\"2021-07-01\", \"2021-08-01\", \"2021-09-01\", \"2021-10-01\", \"2021-11-01\", \"2021-12-01\", \"2022-01-01\", \"2022-02-01\", \"2022-03-01\", \"2022-04-01\", \"2022-05-01\", \"2022-06-01\")\nui <- fluidPage(\n  selectInput(\"dates\", \"Pick a date\",\n              date, selected = \"2021-07-01\",\n              multiple = FALSE),\n\n  tmapOutput(\"my_map\")\n)\n\n# Define the server\nserver <- function(input, output) {\n  # Render the tmap in the output element\n  output$my_map <- renderTmap({\n    a <- vaccination |>\n      filter(date == input$dates)\n    \n    tm_shape(a) +\n      tm_fill(\"vaccination_rate\",\n              n = 6,\n              style = \"quantile\",\n              palette = \"Blues\",\n              title = \"Vaccination Rate\") +\n      tm_layout(main.title = paste(input$dates),\n                main.title.position = \"left\",\n                legend.height = 0.8, \n                legend.width = 0.8,\n                frame = TRUE) +\n      tm_borders(alpha = 0.5) +\n      tm_grid(alpha =0.2)\n  })\n}\n\n# Run the app\nshinyApp(ui, server)\n\nRefer to visual plot : ShinyApp\nNote: There are many ways to create and design the shiny app, under the user interface. This can be found under R shiny documentation.\n\n\n4.1.2 Tmap Visualization\nConsidering we have 12 months of Tmap visualization to do, it would be better to create a tmap function.\nThe code chunk below first filters out vaccination dataframe into their respective months and then inputs the filtered dataframe into the tm_shape().\n\ngraphing <- function(x){\n  a <- vaccination %>%\n    filter(date == x)\n  tm_shape(a) +\n  tm_fill(\"vaccination_rate\",\n          n=10,\n          style = \"quantile\",\n          palette = \"Blues\",\n          title = \"Vaccination Rate\") +\n  tm_layout(main.title = paste(x),\n            main.title.position = \"left\",\n            legend.height = 0.8, \n            legend.width = 0.8,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_grid(alpha =0.2)\n}\n\nWe will split the plots into 2 code chunks to reduce the number of graphs in a single output for a clearer view.\n\ntmap_mode(\"plot\")\ntmap_arrange(graphing(\"2021-07-01\"),\n             graphing(\"2021-08-01\"),\n             graphing(\"2021-09-01\"),\n             graphing(\"2021-10-01\"),\n             graphing(\"2021-11-01\"),\n             graphing(\"2021-12-01\"),\n             ncol = 2)\n\n\n\n\n\ntmap_arrange(graphing(\"2022-01-01\"),\n             graphing(\"2022-02-01\"),\n             graphing(\"2022-03-01\"),\n             graphing(\"2022-04-01\"),\n             graphing(\"2022-05-01\"),\n             graphing(\"2022-06-01\"),\n             ncol = 2)\n\n\n\n\nLikewise, this can be done on Rshiny app but this will be covered on a later date when I have attended the Rshiny workshop. :)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#spatial-patterns-observed-200words",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#spatial-patterns-observed-200words",
    "title": "Take-Home Exercise 2: Spatio-temporal analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jarkarta",
    "section": "4.2 Spatial Patterns observed (200words)",
    "text": "4.2 Spatial Patterns observed (200words)\nFirstly, from the choropleth maps seen above, we notice that the southern part of DKI Jakarta started out with lower vaccination rates but in 2022-06, it became the region with one of the highest vaccination rates. Another observation is that the northern region of DKI Jakarta gradually over the months had vaccination rates lower than the other parts. However, this does not mean that vaccination rates are decreasing in the northern region. One of the distinct change is through the classification numbers. In 2021-07, we notice that the minimum vaccination rate is 0.227 and that number increases as the months go by to 0.781 in 2022-06. Overall, we can conclude that vaccination rates throughout DKI Jakarta have seen an increase and a more stable distribution across its sub-district."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#computing-contiguity-spatial-weights",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#computing-contiguity-spatial-weights",
    "title": "Take-Home Exercise 2: Spatio-temporal analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jarkarta",
    "section": "5.1 Computing Contiguity Spatial Weights",
    "text": "5.1 Computing Contiguity Spatial Weights\nBefore we can compute the global spatial autocorrelation statistics, we need to construct the spatial weights of the study area.\nSpatial weights: Used to define the neighbourhood relationships between geographical units in the study area.\nAs we are dealing with 12 different months of vaccination rates, we will have to filter the dataframe to their respective months and calculate their respective weights. The code chunk below shows the function that filters to the selected month and then calculate their weights.\n\nmonth <- vaccination %>%\n  filter(date == \"2021-07-01\")\nwm_q <- month %>%\n  na.exclude() %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\nwm_q\n\nSimple feature collection with 261 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 686587.9 ymin: 9295420 xmax: 718314.5 ymax: 9326648\nProjected CRS: DGN95 / UTM zone 48S\n# A tibble: 261 × 6\n   nb        wt        date       village_code vacci…¹                  geometry\n * <nb>      <list>    <date>     <chr>          <dbl>        <MULTIPOLYGON [m]>\n 1 <int [9]> <dbl [9]> 2021-07-01 3172051003     0.349 (((706161.9 9323032, 706…\n 2 <int [4]> <dbl [4]> 2021-07-01 3173041007     0.361 (((699268 9320073, 69927…\n 3 <int [4]> <dbl [4]> 2021-07-01 3175041005     0.251 (((705677.8 9306675, 705…\n 4 <int [7]> <dbl [7]> 2021-07-01 3175031003     0.339 (((706070 9313044, 70607…\n 5 <int [4]> <dbl [4]> 2021-07-01 3175101006     0.323 (((711830 9302993, 71181…\n 6 <int [8]> <dbl [8]> 2021-07-01 3174031002     0.340 (((700371 9308387, 70038…\n 7 <int [4]> <dbl [4]> 2021-07-01 3175051002     0.444 (((704532.3 9301182, 704…\n 8 <int [5]> <dbl [5]> 2021-07-01 3175041004     0.267 (((706784.6 9305766, 706…\n 9 <int [6]> <dbl [6]> 2021-07-01 3171071002     0.395 (((700406 9314413, 70040…\n10 <int [7]> <dbl [7]> 2021-07-01 3175031002     0.276 (((706499.5 9311596, 706…\n# … with 251 more rows, and abbreviated variable name ¹​vaccination_rate"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#computing-local-gi",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#computing-local-gi",
    "title": "Take-Home Exercise 2: Spatio-temporal analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jarkarta",
    "section": "5.2 Computing local GI",
    "text": "5.2 Computing local GI\nNext, we will use local_gstar_perm() of the sfdep package to calculate local GI.\nWe will also need to use set.seed() to ensure we obtain the same result when the code chunk is re-runned.\n\nset.seed(1234)\njuly_LGI <- wm_q %>%\n  mutate(local_Gi = local_gstar_perm(vaccination_rate,\n                                   nb,\n                                   wt,\n                                   nsim = 99),\n         .before = 1) %>%\n  unnest(local_Gi)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#visualizing-p-value-of-local-gi",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#visualizing-p-value-of-local-gi",
    "title": "Take-Home Exercise 2: Spatio-temporal analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jarkarta",
    "section": "5.3 Visualizing p-value of local Gi",
    "text": "5.3 Visualizing p-value of local Gi\n\ntmap_mode(\"plot\")\ntm_shape(july_LGI) +\n    tm_polygons() +\n    tm_shape(july_LGI %>% filter(p_sim <0.05)) +\n    tm_fill(\"gi_star\") +\n    tm_borders(alpha = 0.5) +\n    tm_layout(main.title = paste(\"significant local Gi\", \"(\", july_LGI$date[1],\")\"),\n              main.title.size = 0.8)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#putting-it-all-together",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#putting-it-all-together",
    "title": "Take-Home Exercise 2: Spatio-temporal analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jarkarta",
    "section": "5.4 Putting it all together",
    "text": "5.4 Putting it all together\nAs you follow along, these are the 3 main steps to creating the plots required for this section. As mentioned above, we will combine these 3 sections into a single function to calculate the local Gi for each month. The code chunk below takes in input “mth” to filter vaccination to the respective month and calculate the weights and the local Moran’s I.\n\n5.4.1 Creating the local GI computation function\n\nlocal_gi <- function(mth){\n  set.seed(1234)\n  month <- vaccination %>%\n    filter(date ==mth)\n  wm_q <- month %>%\n    na.exclude() %>%\n    mutate(nb = st_contiguity(geometry),\n           wt = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1))\n  result <- wm_q %>%\n    mutate(local_gi = local_gstar_perm(vaccination_rate,\n                                   nb,\n                                   wt,\n                                   nsim = 99),\n           .before = 1) %>% \n    unnest(local_gi)\n  return(result)\n}\n\nNow we will calculate the local Gi for each month and place it into a list for easy referencing for the plots later.\n\ndate <- c(\"2021-07-01\", \"2021-08-01\", \"2021-09-01\", \"2021-10-01\", \"2021-11-01\", \"2021-12-01\",\n          \"2022-01-01\", \"2022-02-01\", \"2022-03-01\",\"2022-04-01\", \"2022-05-01\", \"2022-06-01\")\nmonth_GI <- list()\nfor (i in 1:12){\n  month_GI[[i]] <- local_gi(date[i])\n}\n\nNow we have a list of dataframes with local GI computed. Note that lisa_LMI[[1]] refers to July 2021, in ascending order.\n\n\n5.4.2 Creating the Tmap function\n\ngraph_gi <- function(x){\n  HCSA_sig <- x %>%\n    filter(p_sim <0.05)\n  HCSA_plots <- tm_shape(x) +\n    tm_polygons() +\n    tm_borders(alpha = 0.5) +\n    tm_shape(HCSA_sig) +\n      tm_fill(\"gi_star\",\n              palette = \"-RdBu\",\n              midpoint = 0) +\n      tm_borders(alpha = 0.4) +\n    tm_layout(main.title = paste(\"significant local Gi\", \"(\",x$date[1],\")\"),\n              main.title.size = 0.8)\n  return(HCSA_plots)\n}\n\n\ntmap_mode(\"plot\")\ntmap_arrange(graph_gi(month_GI[[1]]),\n             graph_gi(month_GI[[2]]),\n             graph_gi(month_GI[[3]]),\n             graph_gi(month_GI[[4]]),\n             graph_gi(month_GI[[5]]),\n             graph_gi(month_GI[[6]]),\n             ncol =2)\n\n\n\n\n\ntmap_arrange(graph_gi(month_GI[[7]]),\n             graph_gi(month_GI[[8]]),\n             graph_gi(month_GI[[9]]),\n             graph_gi(month_GI[[10]]),\n             graph_gi(month_GI[[11]]),\n             graph_gi(month_GI[[12]]),\n             ncol =2)\n\n\n\n\nRefer to this link on Hotspot and Coldspot"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#statistical-conclusion-not-more-than-250words",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#statistical-conclusion-not-more-than-250words",
    "title": "Take-Home Exercise 2: Spatio-temporal analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jarkarta",
    "section": "5.5 Statistical Conclusion (Not more than 250words) :",
    "text": "5.5 Statistical Conclusion (Not more than 250words) :\nThe graph plotted above showcases the hot spots and cold spots. Hot spots are referred to the colour red with a positive z-value while cold spots are referred to the colour blue with a negative z-value. Since the plots were filtered by p-value being less than 0.05, they are statistically significant at the 0.05 level of significance.\nIn the earlier months, we notice that hot spots are generally in the northern region of DKI Jakarta while cold spots are generally in the middle. We start to see a shift in hotspots moving towards the southern region in the later months. This evidence is also seen in the spatial patterns observed in the choropleth maps, where higher vaccination rates shifts from north to south. It is also worth noting that the cold spots at the center have been consistent across the months and this could indicate either lack of willingness to be vaccinated in the sub-district or a lack of medical capacity. However, as mentioned above, overall vaccination rates have increased over the months. If the goal is to increase vaccination rates across DKI Jakarta, the local Gi maps can indicate areas of concern (cold spots) to place greater priority."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#creating-a-time-series-cube",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#creating-a-time-series-cube",
    "title": "Take-Home Exercise 2: Spatio-temporal analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jarkarta",
    "section": "6.1 Creating a Time Series Cube",
    "text": "6.1 Creating a Time Series Cube\nIn creating a Time series cube, there are two arguments that needs to be satisfied, a location identifier and a time identifier. As taught in in-class Exercise 7, we can use spacetime() from the sfdep package to create the time series cube. This is done by taking the .data and .geometry and combining them together.\nThe code chunk below is done as taught in class:\n\nvaccination_rate_st <- spacetime(aspatial_data, \n                                 geoDKI,\n                                 .loc_col = \"village_code\",\n                                 .time_col = \"date\")\n\nAnother way is to use as_spacetime() from the sfdep package. It takes the combined dataframe.\nThe code chunk below creates a spatio-temporal cube by using spacetime() from the sfdep package.\n\nvaccination_rate_st<- as_spacetime(vaccination,\n                                .loc_col = \"village_code\",\n                                .time_col = \"date\")\n\nThe code chunk below checks whether the object is a spacetime cube by using is_spacetime_cube from the sfdep package.\n\nis_spacetime_cube(vaccination_rate_st)\n\n[1] TRUE"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#deriving-spatial-weights",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#deriving-spatial-weights",
    "title": "Take-Home Exercise 2: Spatio-temporal analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jarkarta",
    "section": "6.2 Deriving Spatial Weights",
    "text": "6.2 Deriving Spatial Weights\n\nvaccination_rate_nb <- vaccination_rate_st %>%\n  activate(\"geometry\") %>%\n  mutate(\n    nb = include_self(st_contiguity(geometry)),\n    wt = st_inverse_distance(nb, geometry,\n                                  scale = 1,\n                                  alpha = 1),\n    .before = 1) %>%\n  set_nbs(\"nb\") %>%\n  set_wts(\"wt\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#computing-gi",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#computing-gi",
    "title": "Take-Home Exercise 2: Spatio-temporal analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jarkarta",
    "section": "6.3 Computing Gi*",
    "text": "6.3 Computing Gi*\nThe codechunk below uses local_gstar_perm from the sfdep package to compute the Gi*:\n\ngi_stars <- vaccination_rate_nb %>%\n  group_by(date) %>%\n  mutate(vaccination_rate = as.numeric(vaccination_rate),\n         gi_star = local_gstar_perm(vaccination_rate, \n                                    nb, \n                                    wt, \n                                    nsim = 99)) %>%\n  tidyr::unnest(gi_star)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#mann-kendall-test",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#mann-kendall-test",
    "title": "Take-Home Exercise 2: Spatio-temporal analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jarkarta",
    "section": "6.4 Mann-Kendall Test",
    "text": "6.4 Mann-Kendall Test\nThe Mann-Kendall test is a statistical test used in spatial analysis to detect trends and changes. However, it does not detect magnitude of changes.\nThe assignment requires us to select 3 sub-districts and describe the temperal trends revealed.\nSub-districts Chosen:\n\n3174101005\n3173031006\n3174091001\n\n\n6.4.1 District 1: 3174101005\nWe will first visualize the distribution of Gi* value to the corresponding village_code\n\ncbg_1 <- gi_stars %>%\n  ungroup() %>%\n  filter(village_code == \"3174101005\") %>%\n  select(date, village_code, gi_star)\n\n\nggplot(data = cbg_1, \n       aes(x = date, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\n\n\n\nWe can then use MannKendall() from the Kendall package to calculate the test statistics of the Mann Kendall test.\nThe output we will be focusing on are:\n\ntau : A measure of the strength and direction of the trend in the data. It ranges from -1 to 1, where a tau value of -1 indicates a strong negative trend, a tau value of 0 indicates no trend, and a tau value of 1 indicates a strong positive trend.\nsl : This is the p value and for it to be significant, it has to be less than significance level, 0.05.\n\n\nset.seed(1234)\ntest_stat1 <- cbg_1 %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>% \n  tidyr::unnest_wider(mk)\nglimpse(test_stat1)\n\nRows: 1\nColumns: 5\n$ tau  <dbl> 0.7272726\n$ sl   <dbl> 0.001268983\n$ S    <dbl> 48\n$ D    <dbl> 66.00001\n$ varS <dbl> 212.6667\n\n\n\n6.4.1.1 Statistical conclusion:\nFor the 1st sub-district chosen, we notice from the plot that gi* values is in the negative suggesting that it is a cold spot. It is also seen that gi* values are getting larger as months go by, indicating that vaccination rates are improving. This is supported by the Mann Kendell test where there is a positive association between gi* values and date as tau = 0.727 > 0. It is also statistically significant at the 0.05 level of significance since sl= 0.001 < 0.05.\n\n\n\n6.4.2 District 2: 3173031006\nRepeat the steps above\n\ncbg_2 <- gi_stars %>%\n  ungroup() %>%\n  filter(village_code == \"3173031006\") %>%\n  select(date, village_code, gi_star)\n\n\nggplot(data = cbg_2, \n       aes(x = date, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\n\n\n\n\nset.seed(1234)\ntest_stat2 <- cbg_2 %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>% \n  tidyr::unnest_wider(mk)\nglimpse(test_stat2)\n\nRows: 1\nColumns: 5\n$ tau  <dbl> 0.1515151\n$ sl   <dbl> 0.5371338\n$ S    <dbl> 10\n$ D    <dbl> 66.00001\n$ varS <dbl> 212.6667\n\n\n\n6.4.2.1 Statistical Conclusion 2:\nFrom the plot above, we notice that gi* values increase in the initial month and then fluctuate but remain relatively consistent. However while tau=0.151 > 0, sl = 0.537 > 0.05. Hence the result is statistically insignificant and we can conclude there is no trend between gi* values and date for District 2. This suggest that for district 2, the gi* values have no trend and base on the plot, there is clustering but it remains relatively consistent.\n\n\n\n6.4.3 District 3: 3174091001\nRepeat steps above\n\ncbg_3 <- gi_stars %>%\n  ungroup() %>%\n  filter(village_code == \"3174091001\") %>%\n  select(date, village_code, gi_star)\n\n\nggplot(data = cbg_3, \n       aes(x = date, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\n\n\n\n\nset.seed(1234)\ntest_stat3 <- cbg_3 %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>% \n  tidyr::unnest_wider(mk)\nglimpse(test_stat3)\n\nRows: 1\nColumns: 5\n$ tau  <dbl> 0.6969696\n$ sl   <dbl> 0.002030253\n$ S    <dbl> 46\n$ D    <dbl> 66.00001\n$ varS <dbl> 212.6667\n\n\n\n6.4.3.1 Statistical Conclusion 3:\nSimilar to the first district, there is a positive association between gi* values and date as tau =0.696 > 0. According to the plot, we also see a strong positive associate where gi* values increases as the month goes by. This result is also statistically significant since sl = 0.002 < 0.05. This suggest that there is greater clustering of hotspots, suggesting higher vaccination rates as gi* values increases."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#performing-emerging-hotspot-analysis",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#performing-emerging-hotspot-analysis",
    "title": "Take-Home Exercise 2: Spatio-temporal analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jarkarta",
    "section": "6.5 Performing Emerging Hotspot Analysis",
    "text": "6.5 Performing Emerging Hotspot Analysis\nFirstly, we will run the gi* values from all the vilage code using the same steps above. By using the MannKendall(), we can calculate their relevant test statistics. Afterwhich, we will filter by their sl values to those significant.\n\nset.seed(1234)\nehsa <- gi_stars %>%\n  group_by(date) %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>%\n  tidyr::unnest_wider(mk) %>%\n  filter(sl < 0.05)\n\n\n6.5.1 Arrange to show significant emerging hotspots and coldspots\n\nemerging <- ehsa %>% \n  arrange(sl, abs(tau)) %>% \n  slice(1:5)\n\nThe code chunk below uses the emerging_hotspot_analysis() from the sf package.\nArguments:\n\nx takes in a spacetime object\n.var takes in the variable of interest, in this case is vaccination_rate\nk refers to the number of time lags.\n\n\nset.seed(1234)\nehsa <- emerging_hotspot_analysis(\n  x = vaccination_rate_st,\n  .var = \"vaccination_rate\",\n  k = 1,\n  nsim = 99\n)\n\n\n\n6.5.2 Visualising distribution of EHSA\nWe can visualise the data using ggplot to see the distribution of the classifications.\n\nggplot(data = ehsa,\n       aes(x = classification)) +\n  geom_bar()\n\n\n\n\n\n\n6.5.3 Visualising EHSA\nWe will first need to join the ehsa dataframe with our classification column. This will be joined together by the unique identifier “village_code” and “location”.\n\nvaccination_ehsa <- left_join(geoDKI, ehsa, by = c(\"village_code\" = \"location\"))\n\n\nehsa_sig <- vaccination_ehsa  %>%\n  filter(p_value < 0.05)\ntmap_mode(\"view\")\ntm_shape(vaccination_ehsa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(ehsa_sig) +\n  tm_fill(\"classification\") + \n  tm_borders(alpha = 0.4)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#statistical-conclusion-not-more-than-250-words",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#statistical-conclusion-not-more-than-250-words",
    "title": "Take-Home Exercise 2: Spatio-temporal analysis of COVID-19 Vaccination Trends at the Sub-district Level, DKI Jarkarta",
    "section": "6.6 Statistical Conclusion (Not more than 250 words)",
    "text": "6.6 Statistical Conclusion (Not more than 250 words)\nWe can refer to the table below obtained from this link\n\n\n\n\n\n\n\n\nPattern name\nDefinition\n\n\n\n\nNo Pattern Detected\nDoes not fall into any of the hot or cold spot patterns defined below.\n\n\nSporadic Hot Spot\nA statistically significant hot spot for the final time-step interval with a history of also being an on-again and off-again hot spot. Less than 90 percent of the time-step intervals have been statistically significant hot spots and none of the time-step intervals have been statistically significant cold spots.\n\n\nOscillating Hot Spot\nA statistically significant hot spot for the final time-step interval that has a history of also being a statistically significant cold spot during a prior time step. Less than 90 percent of the time-step intervals have been statistically significant hot spots.\n\n\nSporadic Cold Spot\nA statistically significant cold spot for the final time-step interval with a history of also being an on-again and off-again cold spot. Less than 90 percent of the time-step intervals have been statistically significant cold spots and none of the time-step intervals have been statistically significant hot spots.\n\n\nOscillating Cold Spot\nA statistically significant cold spot for the final time-step interval that has a history of also being a statistically significant hot spot during a prior time step. Less than 90 percent of the time-step intervals have been statistically significant cold spots.\n\n\n\nBy referring to the definitions above, an oscillating hot spot implies that many sub-districts that were cold-spots initially became hotspots, indicating that there is a shift in clustering of low to high vaccination rates. From the distribution of classification, we know that there is more oscillating hotspots than oscillating cold spots and thus this tells us that more sub-districts had higher vaccination rates over time. This is as expected and ideal as DKI Jakarta is undergoing the inoculation program initiated by the government.\nAn sporadic cold spot, according to the definition above, implies that these regions generally switch between statistically significant and statistically insignificant cold spots. These areas could be investigated further to understand why vaccination rates has not improved as quickly as the other regions.\nWith that, we are done!"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex11/In-class_Ex11.html",
    "href": "In-class_Ex/In-class_Ex11/In-class_Ex11.html",
    "title": "In-class Exercise 11: Spatial Interaction Models (SIM)",
    "section": "",
    "text": "pacman::p_load(tmap, sf, sp, caret, stplanr, reshape2, broom, tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex11/In-class_Ex11.html#importing-od-data",
    "href": "In-class_Ex/In-class_Ex11/In-class_Ex11.html#importing-od-data",
    "title": "In-class Exercise 11: Spatial Interaction Models (SIM)",
    "section": "2.1 Importing OD Data",
    "text": "2.1 Importing OD Data\nFirstly, we will import the Passenger Volume by Origin Destination Bus stops data set downloaded from LTA Datamall by using read_csv() of readr package.\n\nodbus <- read_csv(\"data/aspatial/origin_destination_bus_202210.csv\")\n\n\nodbus$ORIGIN_PT_CODE <- \n  as.factor(odbus$ORIGIN_PT_CODE)\nodbus$DESTINATION_PT_CODE <- \n  as.factor(odbus$DESTINATION_PT_CODE)\n\n\nodbus7_9 <- odbus %>%\n  filter(DAY_TYPE == \"WEEKDAY\") %>%\n  filter(TIME_PER_HOUR >= 7 &\n           TIME_PER_HOUR <= 9) %>%\n  group_by(ORIGIN_PT_CODE,\n           DESTINATION_PT_CODE) %>%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\n\nwrite_rds(odbus7_9, \"data/rds/odbus7_9.rds\")\n\n\nodbus7_9 <- read_rds(\"data/rds/odbus7_9.rds\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex11/In-class_Ex11.html#extracting-the-study-area",
    "href": "In-class_Ex/In-class_Ex11/In-class_Ex11.html#extracting-the-study-area",
    "title": "In-class Exercise 11: Spatial Interaction Models (SIM)",
    "section": "2.2 Extracting the study area",
    "text": "2.2 Extracting the study area\n\nbusstop <- st_read(dsn = \"data/geospatial\",\n                   layer = \"BusStop\") %>%\n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/In-class_Ex/In-class_Ex11/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5159 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\n\nmpsz <- st_read(dsn = \"data/geospatial\",\n                layer = \"MPSZ-2019\") %>%\n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/In-class_Ex/In-class_Ex11/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\nbusstop_mpsz <- st_intersection(busstop, mpsz) %>%\n  select(BUS_STOP_N, SUBZONE_C) %>%\n  st_drop_geometry()\n\n\nod_data <- left_join(odbus7_9, busstop_mpsz,\n                     by = c(\"ORIGIN_PT_CODE\"=\"BUS_STOP_N\")) %>%\n  rename(ORIGIN_BS = ORIGIN_PT_CODE,\n         ORIGIN_SZ = SUBZONE_C,\n         DESTIN_BS = DESTINATION_PT_CODE)\n\nBefore continuing, it is a good practice to check for duplicate records\n\nduplicate <- od_data %>%\n  group_by_all() %>%\n  filter(n()>1) %>%\n  ungroup()\n\n\nod_data <- unique(od_data)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex11/In-class_Ex11.html#combining-busstop-and-od_data",
    "href": "In-class_Ex/In-class_Ex11/In-class_Ex11.html#combining-busstop-and-od_data",
    "title": "In-class Exercise 11: Spatial Interaction Models (SIM)",
    "section": "2.3 Combining Busstop and od_data",
    "text": "2.3 Combining Busstop and od_data\n\nod_data <- left_join(od_data, busstop_mpsz,\n                     by = c(\"DESTIN_BS\"= \"BUS_STOP_N\"))\n\n\nduplicate <- od_data %>%\n  group_by_all() %>%\n  filter(n()>1) %>%\n  ungroup()\nglimpse(duplicate)\n\nRows: 1,216\nColumns: 5\n$ ORIGIN_BS <chr> \"1012\", \"1012\", \"1112\", \"1112\", \"1112\", \"1112\", \"1112\", \"111…\n$ DESTIN_BS <chr> \"82221\", \"82221\", \"51071\", \"51071\", \"53041\", \"53041\", \"82221…\n$ TRIPS     <dbl> 1, 1, 15, 15, 4, 4, 1, 1, 3, 3, 1, 1, 3, 3, 14, 14, 8, 8, 10…\n$ ORIGIN_SZ <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ SUBZONE_C <chr> \"GLSZ05\", \"GLSZ05\", \"CCSZ01\", \"CCSZ01\", \"BSSZ01\", \"BSSZ01\", …\n\n\n\nod_data <- unique(od_data)\n\n\nod_data <- od_data %>%\n  rename(DESTIN_SZ = SUBZONE_C) %>%\n  drop_na()\n\nSave the output into an rds file format\n\nwrite_rds(od_data, \"data/rds/od_data.rds\")\n\n\nod_data <- read_rds(\"data/rds/od_data.rds\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex11/In-class_Ex11.html#sorting-the-distance-matrix-to-subzone",
    "href": "In-class_Ex/In-class_Ex11/In-class_Ex11.html#sorting-the-distance-matrix-to-subzone",
    "title": "In-class Exercise 11: Spatial Interaction Models (SIM)",
    "section": "5.1 Sorting the distance matrix to subzone",
    "text": "5.1 Sorting the distance matrix to subzone\n\nsz_names <- mpsz$SUBZONE_C\n\n\ncolnames(dist) <- paste0(sz_names)\nrownames(dist) <- paste0(sz_names)\n\n\n5.1.1 Pivoting distance value by Subzone_C\n\ndistPair <- melt(dist) %>%\n  rename(dist = value)\nhead(distPair, 10)\n\n     Var1   Var2      dist\n1  AMSZ01 AMSZ01    0.0000\n2  AMSZ02 AMSZ01  810.4491\n3  AMSZ03 AMSZ01 1360.9294\n4  AMSZ04 AMSZ01  840.4432\n5  AMSZ05 AMSZ01 1076.7916\n6  AMSZ06 AMSZ01  805.2979\n7  AMSZ07 AMSZ01 1798.7526\n8  AMSZ08 AMSZ01 2576.0199\n9  AMSZ09 AMSZ01 1204.2846\n10 AMSZ10 AMSZ01 1417.8035\n\n\n\n\n5.1.2 Updating intra-zonal distances\n\ndistPair %>%\n  filter(dist > 0) %>%\n  summary()\n\n      Var1             Var2             dist        \n AMSZ01 :   331   AMSZ01 :   331   Min.   :  173.8  \n AMSZ02 :   331   AMSZ02 :   331   1st Qu.: 7149.5  \n AMSZ03 :   331   AMSZ03 :   331   Median :11890.0  \n AMSZ04 :   331   AMSZ04 :   331   Mean   :12229.4  \n AMSZ05 :   331   AMSZ05 :   331   3rd Qu.:16401.7  \n AMSZ06 :   331   AMSZ06 :   331   Max.   :49894.4  \n (Other):107906   (Other):107906                    \n\n\n\ndistPair$dist <- ifelse(distPair$dist ==0,\n                        50, distPair$dist)\n\n\ndistPair <- distPair %>% \n  rename(orig = Var1, \n         dest = Var2)\n\n\nwrite_rds(distPair, \"data/rds/distPair.rds\")\n\n\nflow_data <- od_data %>%\n  group_by(ORIGIN_SZ, DESTIN_SZ) %>%\n  summarize(TRIPS = sum(TRIPS))\n\n\npop <- read_csv(\"data/aspatial/pop.csv\")\n\n\npop <- pop %>%\n  left_join(mpsz,\n            by = c(\"PA\"=\"PLN_AREA_N\",\n                   \"SZ\" = \"SUBZONE_N\")) %>%\n  select(1:6) %>%\n  rename(SZ_NAME = SZ,\n         SZ = SUBZONE_C)\n\n\nflow_data1 <- flow_data %>%\n  left_join(distPair,\n            by = c(\"ORIGIN_SZ\"= \"orig\",\n                   \"DESTIN_SZ\" = \"dest\"))\n\n\n# Origin version\nflow_data1 <- flow_data1 %>%\n  left_join(pop,\n            by = c(ORIGIN_SZ = \"SZ\")) %>%\n  rename(ORIGIN_AGE7_12 = AGE7_12,\n         ORIGIN_AGE13_24 = AGE13_24,\n         ORIGIN_AGE25_64 = AGE25_64) %>%\n  select(-c(PA,SZ_NAME))\n\n\nflow_data1 <- flow_data1 %>%\n  left_join(pop,\n            by = c(DESTIN_SZ = \"SZ\")) %>%\n  rename(DESTIN_AGE7_12 = AGE7_12,\n         DESTIN_AGE13_24 = AGE13_24,\n         DESTIN_AGE25_64 = AGE25_64) %>%\n  select(-c(PA,SZ_NAME))\n\n\nwrite_rds(flow_data1, \"data/rds/flow_data1.rds\")\n\n\nflow_data1 <- read_rds(\"data/rds/flow_data1.rds\")\nglimpse(flow_data1)\n\nRows: 14,537\nColumns: 10\nGroups: ORIGIN_SZ [279]\n$ ORIGIN_SZ       <chr> \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMS…\n$ DESTIN_SZ       <chr> \"AMSZ01\", \"AMSZ02\", \"AMSZ03\", \"AMSZ04\", \"AMSZ05\", \"AMS…\n$ TRIPS           <dbl> 1793, 6790, 7242, 2048, 4594, 1767, 1136, 1703, 1494, …\n$ dist            <dbl> 50.0000, 810.4491, 1360.9294, 840.4432, 1076.7916, 805…\n$ ORIGIN_AGE7_12  <dbl> 310, 310, 310, 310, 310, 310, 310, 310, 310, 310, 310,…\n$ ORIGIN_AGE13_24 <dbl> 710, 710, 710, 710, 710, 710, 710, 710, 710, 710, 710,…\n$ ORIGIN_AGE25_64 <dbl> 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, …\n$ DESTIN_AGE7_12  <dbl> 310, 1140, 1010, 980, 810, 1050, 420, 390, 1190, 0, 0,…\n$ DESTIN_AGE13_24 <dbl> 710, 2770, 2650, 2000, 1920, 2390, 1120, 1150, 3260, 0…\n$ DESTIN_AGE25_64 <dbl> 2780, 15700, 14240, 11320, 9650, 12460, 3620, 4350, 13…"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex11/data/geospatial/MPSZ-2019.html",
    "href": "In-class_Ex/In-class_Ex11/data/geospatial/MPSZ-2019.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "In Class Exercise 3: Analytical Mapping",
    "section": "",
    "text": "pacman::p_load(sf, tmap, tidyverse)\n\n\nNGA_wp <- read_rds(\"data/rds/NGA_wp.rds\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html#visualising-distribution-of-non-functional-water-point",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html#visualising-distribution-of-non-functional-water-point",
    "title": "In Class Exercise 3: Analytical Mapping",
    "section": "2.1 Visualising distribution of non-functional Water Point",
    "text": "2.1 Visualising distribution of non-functional Water Point\n\np1 <- tm_shape(NGA_wp) +\n  tm_fill(\"wp_functional\", \n          n= 10,\n          style = \"equal\",\n          palette =\"Blues\") +\n  tm_borders(lwd = 0.1, \n             alpha = 1) +\n  tm_layout(main.title = \"Distribution of functional water\",\n            legend.outside = FALSE)\n\n# n = 10 indicates 10 range of colors\n# style = equal indicates the distribution of data, in this case, equal refers to equal difference per range as per seen in the plot\n\n\np2 <- tm_shape(NGA_wp) +\n  tm_fill(\"total_wp\", \n          n= 10,\n          style = \"equal\",\n          palette =\"Blues\") +\n  tm_borders(lwd = 0.1, \n             alpha = 1) +\n  tm_layout(main.title = \"Distribution of total water point\",\n            legend.outside = FALSE)\n\nArrange both maps into 1 visualisation\n\ntmap_arrange(p2, p1, nrow = 1)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html#deriving-proportion-of-functional-water-points-and-non-functional-waterpoints",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html#deriving-proportion-of-functional-water-points-and-non-functional-waterpoints",
    "title": "In Class Exercise 3: Analytical Mapping",
    "section": "3.1 Deriving Proportion of Functional Water Points and Non-Functional WaterPoints",
    "text": "3.1 Deriving Proportion of Functional Water Points and Non-Functional WaterPoints\n\nNGA_wp <- NGA_wp %>%\n  mutate(pct_functional = wp_functional/total_wp) %>%\n  mutate(pct_non_functional = wp_nonfunctional/total_wp)\n\n\np3 <- tm_shape(NGA_wp) +\n  tm_fill(\"pct_functional\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\") +\n  tm_borders(lwd= 0.1, \n             alpha = 1) +\n  tm_layout(main.title = \"Distribution of Proportion of\\nFunctional WaterPoints\",\n            legend.outside = FALSE)\n\np4 <- tm_shape(NGA_wp) +\n  tm_fill(\"pct_non_functional\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\") +\n  tm_borders(lwd= 0.1, \n             alpha = 1) +\n  tm_layout(main.title = \"Distribution of Proportion of\\nNon_Functional WaterPoints\",\n            legend.outside = FALSE)\n\ntmap_arrange(p4, p3, nrow = 1)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html#percentile-map",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html#percentile-map",
    "title": "In Class Exercise 3: Analytical Mapping",
    "section": "4.1 Percentile Map",
    "text": "4.1 Percentile Map\nStep 1: Exclude records with NA\n\nNGA_wp <- NGA_wp %>%\n  drop_na()\n\nStep 2: Creating customised classification\n\npercent <- c(0,.01,.1,.5,.9,.99,1)\nvar <- NGA_wp[\"pct_functional\"] %>%\n  st_set_geometry(NULL)\nquantile(var[,1], percent)\n\n        0%         1%        10%        50%        90%        99%       100% \n0.00000000 0.01818182 0.18181818 0.41666667 0.76086957 1.00000000 1.00000000 \n\n# NULL forces NGA_wp[\"pct_functional\"] into var (dataframe)\n\n\nget.var <- function(vname, df) {\n  v <- df[vname] %>%\n    st_set_geometry(NULL)\n  v <- unname(v[,1])\n  return(v)\n}\n\n\npercentmap <- function(vnam, df, legtitle=NA, mtitle = \"Percentile Map\"){\n  percent <- c(0,.01,.1,.5,.9,.99,1)\n  var <- get.var(vnam, df)\n  bperc <- quantile(var, percent)\n  tm_shape(df) + \n    tm_polygons() + \n    tm_shape(df) +\n    tm_fill(vnam,\n            title = legtitle,\n            breaks=bperc,\n            palette=\"Blues\",\n            labels = c(\"< 1%\",\"1% - 10%\", \"10% - 50%\", \"50% - 90%\", \"90% - 99%\", \">99%\")) +\n    tm_borders() +\n    tm_layout(main.title = mtitle, \n              title.position = c(\"right\", \"bottom\"))\n}\n\npercentmap(\"pct_functional\", NGA_wp,)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html#box-map",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html#box-map",
    "title": "In Class Exercise 3: Analytical Mapping",
    "section": "4.2 Box map",
    "text": "4.2 Box map\n\n4.2.1 Using ggplot\n\nggplot(data = NGA_wp,\n       aes(x = \"\",\n           y = wp_nonfunctional)) +\n  geom_boxplot()\n\n\n\n\n\n\n4.2.2 Creating boxbreaks\n\nboxbreaks <- function(v,mult=1.5) {\n  qv <- unname(quantile(v))\n  iqr <- qv[4] - qv[2]\n  upfence <- qv[4] + mult * iqr\n  lofence <- qv[2] - mult * iqr\n  # initialize break points vector\n  bb <- vector(mode=\"numeric\",length=7)\n  # logic for lower and upper fences\n  if (lofence < qv[1]) {  # no lower outliers\n    bb[1] <- lofence\n    bb[2] <- floor(qv[1])\n  } else {\n    bb[2] <- lofence\n    bb[1] <- qv[1]\n  }\n  if (upfence > qv[5]) { # no upper outliers\n    bb[7] <- upfence\n    bb[6] <- ceiling(qv[5])\n  } else {\n    bb[6] <- upfence\n    bb[7] <- qv[5]\n  }\n  bb[3:5] <- qv[2:4]\n  return(bb)\n}\n\n\n\n4.2.3 Creating get.var function\nTo retrieve a variable as a vector from an sf dataframe\n\nget.var <- function(vname, df) {\n  v <- df[vname] %>%\n    st_set_geometry(NULL)\n  v <- unname(v[,1])\n  return(v)\n}\n\n\n\n4.2.4 Test newly created function\n\nvar <- get.var(\"wp_nonfunctional\", NGA_wp)\nboxbreaks(var)\n\n[1] -53.5   0.0  14.0  34.0  59.0 126.5 252.0\n\n\n\n\n4.2.5 Boxmap function\n\nboxmap <- function(vnam, df, \n                   legtitle=NA,\n                   mtitle=\"Box Map\",\n                   mult=1.5){\n  var <- get.var(vnam,df)\n  bb <- boxbreaks(var)\n  tm_shape(df) +\n    tm_polygons() +\n  tm_shape(df) +\n     tm_fill(vnam,title=legtitle,\n             breaks=bb,\n             palette=\"Blues\",\n          labels = c(\"lower outlier\", \n                     \"< 25%\", \n                     \"25% - 50%\", \n                     \"50% - 75%\",\n                     \"> 75%\", \n                     \"upper outlier\"))  +\n  tm_borders() +\n  tm_layout(main.title = mtitle, \n            title.position = c(\"left\",\n                               \"top\"))\n}\n\n\ntmap_mode(\"plot\")\nboxmap(\"wp_nonfunctional\", NGA_wp)\n\n\n\n\n\n\n4.2.6 Recode zero\nThis is used to recode LGAs with zero total water point into NA\n\nNGA_wp <- NGA_wp %>%\n  mutate(wp_functional = na_if(\n    total_wp, total_wp < 0))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In class exercise 4",
    "section": "",
    "text": "pacman::p_load(maptools, sf, raster, spatstat, tmap)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#handling-duplicated-point-event",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#handling-duplicated-point-event",
    "title": "In class exercise 4",
    "section": "Handling duplicated point event",
    "text": "Handling duplicated point event\n\nchildcare_ppp_jit <- rjitter(childcare_ppp,\n                             retry=TRUE,\n                             nsim =1,\n                             drop = TRUE)\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#creating-an-owin-object",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#creating-an-owin-object",
    "title": "In class exercise 4",
    "section": "Creating an owin object",
    "text": "Creating an owin object\n\nsg_owin <- as(sg_sp, \"owin\")\n\nplot(sg_owin)\n\n\n\n\n\nchildcareSG_ppp <- childcare_ppp_jit[sg_owin]\nplot(childcareSG_ppp)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In class exercise 5",
    "section": "",
    "text": "Install and Load Packages\n\npacman::p_load(sfdep, sf, tidyverse, tmap)\n\nNew package used is sfdep, used mainly for Local Co-Location Quotient\n\n\nImporting Data\nThe national projection system of Taiwan is EPSG::3829\n\nstudyArea <- st_read(dsn = \"data/\", \n                     layer = \"study_area\") %>%\n  st_transform(crs = 3829)\n\nReading layer `study_area' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/In-class_Ex/In-class_Ex05/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 7 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 121.4836 ymin: 25.00776 xmax: 121.592 ymax: 25.09288\nGeodetic CRS:  TWD97\n\nstores <- st_read(dsn = \"data/\", \n                  layer = \"stores\") %>%\n  st_transform(crs = 3829)\n\nReading layer `stores' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/In-class_Ex/In-class_Ex05/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1409 features and 4 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 121.4902 ymin: 25.01257 xmax: 121.5874 ymax: 25.08557\nGeodetic CRS:  TWD97\n\n\n\n\nVisualising sf layers\n\ntmap_mode(\"view\")\ntm_shape(studyArea) +\n  tm_polygons() +\ntm_shape(stores) +\n  tm_dots(col = \"Name\",\n          size = 0.01,\n          border.col=\"black\",\n          border.lwd= 0.5) +\n  tm_view(set.zoom.limits = c(12,16))\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\nlocal_colocation(A, B, nb, wt, nsim), where - A\n\n\nLocal Colocation Quotients (LCLQ)\n\nnb <- include_self(\n  st_knn(st_geometry(stores), 6))\n# The number 6 indicates getting the 6 nearest stores (nearest neighbor)\n\n# List of lengths in nb showcases the numbers of the neighbors of a particular point\nwt <- st_kernel_weights(nb,\n                        stores,\n                        \"gaussian\",\n                        adaptive = TRUE)\n# List of lengths in wt showcases the weights: \n# The closer, the higher the weight, the further, the lower the weight\n\nFamilyMart <- stores %>%\n  filter(Name == \"Family Mart\")\nA<- FamilyMart$Name\n\nSevenEleven <- stores %>%\n  filter(Name == \"7-Eleven\")\nB<- SevenEleven$Name\n\nLCLQ <- local_colocation(A, B, nb, wt, 49)\n\nLCLQ_stores <- cbind(stores, LCLQ) %>%\n  na.exclude()\n\n\n# Place stores first as the function takes on the structure of the first input.\n\n\ntmap_mode(\"view\")\ntm_shape(studyArea) +\n  tm_polygons() +\ntm_shape(LCLQ_stores) +\n  tm_dots(col = \"X7.Eleven\",\n          size = 0.01,\n          border.col = \"black\",\n          border.lwd = 0.5) +\ntm_shape(LCLQ_stores) +\n  tm_dots(col = \"p_sim_7.Eleven\",\n          size = 0.01,\n          border.col = \"black\",\n          border.lwd = 0.5)\n\n\n\n\n\n  tm_view(set.zoom.limits = c(12,16))\n\n$tm_layout\n$tm_layout$set.zoom.limits\n[1] 12 16\n\n$tm_layout$style\n[1] NA\n\n\nattr(,\"class\")\n[1] \"tm\""
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/data/study_area.html",
    "href": "In-class_Ex/In-class_Ex05/data/study_area.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/data/stores.html",
    "href": "In-class_Ex/In-class_Ex05/data/stores.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "<!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’>     \n\n\n        0 0     false"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "title": "In Class Exercise 2: Geospatial Data Wrangling",
    "section": "",
    "text": "Water is an important resource to mankind. Clean and accessible water is critical to human health. It provides a healthy environment, a sustainable economy, reduces poverty and ensures peace and security. Yet over 40% of the global population does not have access to sufficient clean water. By 2025, 1.8 billion people will be living in countries or regions with absolute water scarcity, according to UN-Water. The lack of water poses a major threat to several sectors, including food security. Agriculture uses about 70% of the world’s accessible freshwater.\nDeveloping countries are most affected by water shortages and poor water quality. Up to 80% of illnesses in the developing world are linked to inadequate water and sanitation. Despite technological advancement, providing clean water to the rural community is still a major development issues in many countries globally, especially countries in the Africa continent.\nTo address the issue of providing clean and sustainable water supply to the rural community, a global Water Point Data Exchange (WPdx) project has been initiated. The main aim of this initiative is to collect water point related data from rural areas at the water point or small water scheme level and share the data via WPdx Data Repository, a cloud-based data library. What is so special of this project is that data are collected based on WPDx Data Standard.\n\n\nThe specific tasks of this take-home exercise are as follows:\n\nUsing appropriate sf method, import the shapefile into R and save it in a simple feature data frame format. Note that there are three Projected Coordinate Systems of Nigeria, they are: EPSG: 26391, 26392, and 26303. You can use any one of them.\nUsing appropriate tidyr and dplyr methods, derive the proportion of functional and non-functional water point at LGA level.\nCombining the geospatial and aspatial data frame into simple feature data frame.\nVisualising the distribution of water point by using appropriate analytical visualisation methods."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#importing-aspatial-data",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#importing-aspatial-data",
    "title": "In Class Exercise 2: Geospatial Data Wrangling",
    "section": "3.1 Importing Aspatial data",
    "text": "3.1 Importing Aspatial data\nUse filter to extract only “Nigeria”\n\n\nShow code\nwp_nga <- read_csv(file = \"data/aspatial/WPdx.csv\") |>\n  filter(`#clean_country_name` == \"Nigeria\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#checking-duplicate-name-and-amending-them",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#checking-duplicate-name-and-amending-them",
    "title": "In Class Exercise 2: Geospatial Data Wrangling",
    "section": "5.1 Checking duplicate name and amending them",
    "text": "5.1 Checking duplicate name and amending them\n\nNGA$ADM2_EN[duplicated(NGA$ADM2_EN) == TRUE]\n\n[1] \"Bassa\"    \"Ifelodun\" \"Irepodun\" \"Nasarawa\" \"Obi\"      \"Surulere\"\n\n\nCorrect the areas as they are located in different states\n\nNGA$ADM2_EN[94] <- \"Bassa, Kogi\"\nNGA$ADM2_EN[95] <- \"Bassa, Plateau\"\nNGA$ADM2_EN[304] <- \"Ifelodun, Kwara\"\nNGA$ADM2_EN[305] <- \"Ifelodun, Osun\"\nNGA$ADM2_EN[355] <- \"Irepodun, Kwara\"\nNGA$ADM2_EN[356] <- \"Irepodun, Osun\"\nNGA$ADM2_EN[519] <- \"Nasarawa, Kano\"\nNGA$ADM2_EN[520] <- \"Nasarawa, Nasarawa\"\nNGA$ADM2_EN[546] <- \"Obi, Benue\"\nNGA$ADM2_EN[547] <- \"Obi, Nasarawa\"\nNGA$ADM2_EN[693] <- \"Surulere, Lagos\"\nNGA$ADM2_EN[694] <- \"Surulere, Oyo\"\n\nRerun code to check\n\n\nShow code\nNGA$ADM2_EN[duplicated(NGA$ADM2_EN) == TRUE]\n\n\ncharacter(0)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#extracting-water-point-data",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#extracting-water-point-data",
    "title": "In Class Exercise 2: Geospatial Data Wrangling",
    "section": "6.1 Extracting Water Point Data",
    "text": "6.1 Extracting Water Point Data\nFilter based on functional, non_functional and unknown respectively.\n\nwp_functional <- wp_sf_nga %>%\n  filter(status_clean %in%\n           c(\"Functional\",\n             \"Functional but not in use\",\n             \"Functional but needs repair\"))\n\n\nwp_nonfunctional <- wp_sf_nga %>% \n  filter(status_clean %in% \n           c(\"Abandoned/Decommissioned\",\n             \"Abandoned\",\n             \"Non-Functional due to dry season\",\n             \"Non-Functional\",\n             \"Non functional due to dry season\"))\n\n\nwp_unknown <- wp_sf_nga %>%\n  filter(status_clean %in% \"unknown\")\n\n\nfreq(data = wp_functional,\n     input = 'status_clean')\n\n\n\n\n                 status_clean frequency percentage cumulative_perc\n1                  Functional     47228      99.81           99.81\n2   Functional but not in use        86       0.18           99.99\n3 Functional but needs repair         4       0.01          100.00\n\n\n\nfreq(data = wp_nonfunctional,\n     input = 'status_clean')\n\n\n\n\n                      status_clean frequency percentage cumulative_perc\n1                   Non-Functional     30638      98.94           98.94\n2         Abandoned/Decommissioned       321       1.04           99.98\n3 Non-Functional due to dry season         7       0.02          100.00\n\n\n\nfreq(data = wp_unknown,\n     input = 'status_clean')\n\n\n\n\n  status_clean frequency percentage cumulative_perc\n1      unknown     10154        100             100"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#performing-point-in-polygon-count",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#performing-point-in-polygon-count",
    "title": "In Class Exercise 2: Geospatial Data Wrangling",
    "section": "6.2 Performing Point-in-Polygon Count",
    "text": "6.2 Performing Point-in-Polygon Count\n\nNGA_wp <- NGA %>%\n  mutate(`total_wp` = lengths(\n    st_intersects(NGA, wp_sf_nga))) %>%\n  mutate(`wp_functional` = lengths(\n    st_intersects(NGA, wp_functional))) %>%\n  mutate(`wp_nonfunctional` = lengths(\n    st_intersects(NGA, wp_nonfunctional))) %>%\n  mutate(`wp_unknown` = lengths(\n    st_intersects(NGA, wp_unknown)))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#visualing-attributes-by-using-statistical-graph",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#visualing-attributes-by-using-statistical-graph",
    "title": "In Class Exercise 2: Geospatial Data Wrangling",
    "section": "6.3 Visualing attributes by using statistical graph",
    "text": "6.3 Visualing attributes by using statistical graph\n\n\nShow code\nggplot(data = NGA_wp,\n       aes(x = total_wp)) +\n  geom_histogram(bins = 20, \n                 color = \"black\",\n                 fill =\"light blue\") +\n  geom_vline(aes(xintercept=mean(total_wp, na.rm=T)),\n             color = \"red\", linetype=\"dashed\", size = 0.8) +\n  xlab(\"No of water points\") +\n  ylab(\"No. of\\nLGAs\") +\n  theme(axis.title.y = element_text(angle = 0))\n\n\n\n\n\n\n\nShow code\nwrite_rds(NGA_wp, \"data/rds/NGA_wp.rds\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex12/In-class_Ex12.html",
    "href": "In-class_Ex/In-class_Ex12/In-class_Ex12.html",
    "title": "In-class Exercise 12: Calibrating Spatial Interaction Models (SIM) with R",
    "section": "",
    "text": "pacman::p_load(tmap, sf, sp, stplanr, \n               reshape2, broom, performance,\n               gtsummary, ggpubr, tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex12/In-class_Ex12.html#calibrating-spatial-interaction-models",
    "href": "In-class_Ex/In-class_Ex12/In-class_Ex12.html#calibrating-spatial-interaction-models",
    "title": "In-class Exercise 12: Calibrating Spatial Interaction Models (SIM) with R",
    "section": "2 Calibrating Spatial Interaction Models",
    "text": "2 Calibrating Spatial Interaction Models\nIn this section, you will learn how to calibrate Spatial Interaction Models by using Poisson Regression method.\n\n2.1 Importing the modelling data\nThe code chunk below reads the modelling data into object SIM_data\n\nSIM_data <- read_rds(\"data/rds/SIM_data.rds\")\n\n\n\n2.2 Visualising the dependent variable\nFirstly, let us plot the distribution of the dependent variable (i.e. TRIPS) by using histogram method by using the code chunk below.\n\nggplot(data = SIM_data,\n       aes(x = TRIPS)) +\n  geom_histogram()\n\n\n\n\nNotice that the distribution is highly skewed and not resemble bell shape or also known as normal distribution.\n\nright skewed\nhas to be whole number\n\n\nUse Poisson distribution to model\n\nNext, let us visualise the relation between the dependent variable and one of the key independent variable in Spatial Interaction Model, namely distance.\n\nggplot(data = SIM_data,\n       aes(x = dist,\n           y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n\n\n\nNotice that their relationship hardly resemble linear relationship.\nOn the other hand, if we plot the scatter plot by using the log transformed version of both variables, we can see that their relationship is more resemble linear relationship.\n\nggplot(data = SIM_data,\n       aes(x = log(dist),\n           y = log(TRIPS))) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n\n\n\n\n\n2.3 Checking for variables with zero values\nSince Poisson Regression is based of log and log 0 is undefined, it is important for us to ensure that no 0 values in the explanatory variables.\nIn the code chunk below, summary() of Base R is used to compute the summary statistics of all variables in SIM_data data frame.\n\nsummary(SIM_data)\n\n  ORIGIN_SZ          DESTIN_SZ             TRIPS           FlowNoIntra      \n Length:14274       Length:14274       Min.   :     1.0   Min.   :     1.0  \n Class :character   Class :character   1st Qu.:    11.0   1st Qu.:    11.0  \n Mode  :character   Mode  :character   Median :    56.0   Median :    56.0  \n                                       Mean   :   664.3   Mean   :   664.3  \n                                       3rd Qu.:   296.0   3rd Qu.:   296.0  \n                                       Max.   :104167.0   Max.   :104167.0  \n     offset       dist         ORIGIN_AGE7_12 ORIGIN_AGE13_24 ORIGIN_AGE25_64\n Min.   :1   Min.   :  173.8   Min.   :   0   Min.   :    0   Min.   :    0  \n 1st Qu.:1   1st Qu.: 3465.4   1st Qu.: 240   1st Qu.:  460   1st Qu.: 2210  \n Median :1   Median : 6121.0   Median : 710   Median : 1400   Median : 7030  \n Mean   :1   Mean   : 6951.8   Mean   :1037   Mean   : 2278   Mean   :10536  \n 3rd Qu.:1   3rd Qu.: 9725.1   3rd Qu.:1500   3rd Qu.: 3282   3rd Qu.:15830  \n Max.   :1   Max.   :26135.8   Max.   :6340   Max.   :16380   Max.   :74610  \n DESTIN_AGE7_12 DESTIN_AGE13_24 DESTIN_AGE25_64\n Min.   :   0   Min.   :    0   Min.   :    0  \n 1st Qu.: 250   1st Qu.:  460   1st Qu.: 2210  \n Median : 720   Median : 1430   Median : 7120  \n Mean   :1040   Mean   : 2305   Mean   :10648  \n 3rd Qu.:1500   3rd Qu.: 3290   3rd Qu.:15830  \n Max.   :6340   Max.   :16380   Max.   :74610  \n\n\nThe print report above reveals that variables ORIGIN_AGE7_12, ORIGIN_AGE13_24, ORIGIN_AGE25_64,DESTIN_AGE7_12, DESTIN_AGE13_24, DESTIN_AGE25_64 consist of 0 values. But we cannot log(0), therefore we need to replace the values.\nIn view of this, code chunk below will be used to replace zero values to 0.99.\n\nSIM_data$DESTIN_AGE7_12 <- ifelse(\n  SIM_data$DESTIN_AGE7_12 == 0,\n  0.99, SIM_data$DESTIN_AGE7_12)\nSIM_data$DESTIN_AGE13_24 <- ifelse(\n  SIM_data$DESTIN_AGE13_24 == 0,\n  0.99, SIM_data$DESTIN_AGE13_24)\nSIM_data$DESTIN_AGE25_64 <- ifelse(\n  SIM_data$DESTIN_AGE25_64 == 0,\n  0.99, SIM_data$DESTIN_AGE25_64)\nSIM_data$ORIGIN_AGE7_12 <- ifelse(\n  SIM_data$ORIGIN_AGE7_12 == 0,\n  0.99, SIM_data$ORIGIN_AGE7_12)\nSIM_data$ORIGIN_AGE13_24 <- ifelse(\n  SIM_data$ORIGIN_AGE13_24 == 0,\n  0.99, SIM_data$ORIGIN_AGE13_24)\nSIM_data$ORIGIN_AGE25_64 <- ifelse(\n  SIM_data$ORIGIN_AGE25_64 == 0,\n  0.99, SIM_data$ORIGIN_AGE25_64)\n\nYou can run the summary() again.\n\nsummary(SIM_data)\n\n  ORIGIN_SZ          DESTIN_SZ             TRIPS           FlowNoIntra      \n Length:14274       Length:14274       Min.   :     1.0   Min.   :     1.0  \n Class :character   Class :character   1st Qu.:    11.0   1st Qu.:    11.0  \n Mode  :character   Mode  :character   Median :    56.0   Median :    56.0  \n                                       Mean   :   664.3   Mean   :   664.3  \n                                       3rd Qu.:   296.0   3rd Qu.:   296.0  \n                                       Max.   :104167.0   Max.   :104167.0  \n     offset       dist         ORIGIN_AGE7_12    ORIGIN_AGE13_24   \n Min.   :1   Min.   :  173.8   Min.   :   0.99   Min.   :    0.99  \n 1st Qu.:1   1st Qu.: 3465.4   1st Qu.: 240.00   1st Qu.:  460.00  \n Median :1   Median : 6121.0   Median : 710.00   Median : 1400.00  \n Mean   :1   Mean   : 6951.8   Mean   :1036.73   Mean   : 2278.59  \n 3rd Qu.:1   3rd Qu.: 9725.1   3rd Qu.:1500.00   3rd Qu.: 3282.50  \n Max.   :1   Max.   :26135.8   Max.   :6340.00   Max.   :16380.00  \n ORIGIN_AGE25_64    DESTIN_AGE7_12    DESTIN_AGE13_24    DESTIN_AGE25_64   \n Min.   :    0.99   Min.   :   0.99   Min.   :    0.99   Min.   :    0.99  \n 1st Qu.: 2210.00   1st Qu.: 250.00   1st Qu.:  460.00   1st Qu.: 2210.00  \n Median : 7030.00   Median : 720.00   Median : 1430.00   Median : 7120.00  \n Mean   :10535.93   Mean   :1039.98   Mean   : 2305.33   Mean   :10647.95  \n 3rd Qu.:15830.00   3rd Qu.:1500.00   3rd Qu.: 3290.00   3rd Qu.:15830.00  \n Max.   :74610.00   Max.   :6340.00   Max.   :16380.00   Max.   :74610.00  \n\n\nNotice that all the 0 values have been replaced by 0.99.\n\n\n2.4 Unconstrained Spatial Interaction Model\nIn this section, you will learn how to calibrate an unconstrained spatial interaction model by using glm() of Base Stats. The explanatory variables are origin population by different age cohort, destination population by different age cohort (i.e. wj3_destmedinc) and distance between origin and destination in km (i.e. dist).\nThe general formula of Unconstrained Spatial Interaction Model\n\nThe code chunk used to calibrate to model is shown below:\n\nuncSIM <- glm(formula = TRIPS ~ \n                log(ORIGIN_AGE25_64) + \n                log(DESTIN_AGE25_64) +\n                log(dist),\n              family = poisson(link = \"log\"),\n              data = SIM_data,\n              na.action = na.exclude)\nuncSIM\n\n\nCall:  glm(formula = TRIPS ~ log(ORIGIN_AGE25_64) + log(DESTIN_AGE25_64) + \n    log(dist), family = poisson(link = \"log\"), data = SIM_data, \n    na.action = na.exclude)\n\nCoefficients:\n         (Intercept)  log(ORIGIN_AGE25_64)  log(DESTIN_AGE25_64)  \n            17.00287               0.21001               0.01289  \n           log(dist)  \n            -1.51785  \n\nDegrees of Freedom: 14273 Total (i.e. Null);  14270 Residual\nNull Deviance:      36120000 \nResidual Deviance: 19960000     AIC: 20040000\n\n\n\n\n2.5 R-squared function\nIn order to measure how much variation of the trips can be accounted by the model we will write a function to calculate R-Squared value as shown below.\n\nCalcRSquared <- function(observed,estimated){\n  r <- cor(observed,estimated)\n  R2 <- r^2\n  R2\n}\n\nNext, we will compute the R-squared of the unconstrained SIM by using the code chunk below.\n\nCalcRSquared(uncSIM$data$TRIPS, uncSIM$fitted.values)\n\n[1] 0.1694734\n\n\n\nr2_mcfadden(uncSIM)\n\n# R2 for Generalized Linear Regression\n       R2: 0.446\n  adj. R2: 0.446\n\n\n\n\n2.6 Origin (Production) constrained SIM\nIn this section, we will fit an origin constrained SIM by using the code3 chunk below.\nThe general formula of Origin Constrained Spatial Interaction Model\n\n\norcSIM <- glm(formula = TRIPS ~ \n                 ORIGIN_SZ +\n                 log(DESTIN_AGE25_64) +\n                 log(dist),\n              family = poisson(link = \"log\"),\n              data = SIM_data,\n              na.action = na.exclude)\nsummary(orcSIM)\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_SZ + log(DESTIN_AGE25_64) + log(dist), \n    family = poisson(link = \"log\"), data = SIM_data, na.action = na.exclude)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-241.02   -16.13    -7.46     0.80   418.33  \n\nCoefficients:\n                       Estimate Std. Error   z value Pr(>|z|)    \n(Intercept)          19.9309957  0.0054015  3689.887  < 2e-16 ***\nORIGIN_SZAMSZ02       0.6805710  0.0052686   129.175  < 2e-16 ***\nORIGIN_SZAMSZ03       0.3597850  0.0054884    65.554  < 2e-16 ***\nORIGIN_SZAMSZ04      -0.1106566  0.0060027   -18.434  < 2e-16 ***\nORIGIN_SZAMSZ05      -0.3140561  0.0067998   -46.186  < 2e-16 ***\nORIGIN_SZAMSZ06       0.0634425  0.0060258    10.528  < 2e-16 ***\nORIGIN_SZAMSZ07      -1.1301580  0.0110298  -102.464  < 2e-16 ***\nORIGIN_SZAMSZ08      -0.6330394  0.0102949   -61.491  < 2e-16 ***\nORIGIN_SZAMSZ09       0.1064915  0.0063450    16.784  < 2e-16 ***\nORIGIN_SZAMSZ10       0.5061899  0.0053889    93.931  < 2e-16 ***\nORIGIN_SZAMSZ11      -1.3167911  0.0144870   -90.895  < 2e-16 ***\nORIGIN_SZAMSZ12      -1.5103004  0.0127453  -118.499  < 2e-16 ***\nORIGIN_SZBDSZ01       1.3626004  0.0051433   264.929  < 2e-16 ***\nORIGIN_SZBDSZ02       0.9554084  0.0059655   160.156  < 2e-16 ***\nORIGIN_SZBDSZ03       1.1476190  0.0054278   211.433  < 2e-16 ***\nORIGIN_SZBDSZ04       2.0110410  0.0046344   433.940  < 2e-16 ***\nORIGIN_SZBDSZ05       1.0658940  0.0053976   197.477  < 2e-16 ***\nORIGIN_SZBDSZ06       1.2719222  0.0054774   232.213  < 2e-16 ***\nORIGIN_SZBDSZ07      -0.5053039  0.0111553   -45.297  < 2e-16 ***\nORIGIN_SZBDSZ08      -0.3556193  0.0102947   -34.544  < 2e-16 ***\nORIGIN_SZBKSZ01      -0.3606399  0.0075473   -47.784  < 2e-16 ***\nORIGIN_SZBKSZ02       0.1357265  0.0061394    22.107  < 2e-16 ***\nORIGIN_SZBKSZ03       0.4101999  0.0058983    69.545  < 2e-16 ***\nORIGIN_SZBKSZ04      -0.3418645  0.0070764   -48.310  < 2e-16 ***\nORIGIN_SZBKSZ05      -0.2986750  0.0074073   -40.322  < 2e-16 ***\nORIGIN_SZBKSZ06      -0.2637855  0.0068739   -38.375  < 2e-16 ***\nORIGIN_SZBKSZ07       0.5498323  0.0051476   106.813  < 2e-16 ***\nORIGIN_SZBKSZ08      -0.0527393  0.0061457    -8.582  < 2e-16 ***\nORIGIN_SZBKSZ09      -0.1564691  0.0067300   -23.249  < 2e-16 ***\nORIGIN_SZBLSZ01      -1.7551329  0.0176599   -99.385  < 2e-16 ***\nORIGIN_SZBLSZ02      -1.9493637  0.0213859   -91.152  < 2e-16 ***\nORIGIN_SZBLSZ03      -2.9057732  0.0535995   -54.213  < 2e-16 ***\nORIGIN_SZBLSZ04      -1.4672066  0.0254726   -57.599  < 2e-16 ***\nORIGIN_SZBMSZ01       0.1806064  0.0060563    29.821  < 2e-16 ***\nORIGIN_SZBMSZ02      -1.4026549  0.0078244  -179.267  < 2e-16 ***\nORIGIN_SZBMSZ03      -0.5976236  0.0063808   -93.660  < 2e-16 ***\nORIGIN_SZBMSZ04      -0.5456513  0.0059061   -92.388  < 2e-16 ***\nORIGIN_SZBMSZ05      -3.1095195  0.0188118  -165.297  < 2e-16 ***\nORIGIN_SZBMSZ06      -3.0273827  0.0194319  -155.794  < 2e-16 ***\nORIGIN_SZBMSZ07      -0.7378197  0.0066865  -110.345  < 2e-16 ***\nORIGIN_SZBMSZ08      -0.9306150  0.0067188  -138.510  < 2e-16 ***\nORIGIN_SZBMSZ09      -1.4137345  0.0101071  -139.876  < 2e-16 ***\nORIGIN_SZBMSZ10      -1.7054195  0.0101582  -167.886  < 2e-16 ***\nORIGIN_SZBMSZ11      -1.2418380  0.0076792  -161.714  < 2e-16 ***\nORIGIN_SZBMSZ12      -1.3746537  0.0109769  -125.231  < 2e-16 ***\nORIGIN_SZBMSZ13      -0.4339494  0.0069335   -62.587  < 2e-16 ***\nORIGIN_SZBMSZ14      -0.9950458  0.0076302  -130.410  < 2e-16 ***\nORIGIN_SZBMSZ15      -0.6544196  0.0068964   -94.892  < 2e-16 ***\nORIGIN_SZBMSZ16      -1.5193747  0.0105329  -144.250  < 2e-16 ***\nORIGIN_SZBMSZ17      -1.6536771  0.0180672   -91.529  < 2e-16 ***\nORIGIN_SZBPSZ01       0.1484355  0.0064734    22.930  < 2e-16 ***\nORIGIN_SZBPSZ02      -0.3602094  0.0073902   -48.741  < 2e-16 ***\nORIGIN_SZBPSZ03      -0.1567975  0.0072226   -21.709  < 2e-16 ***\nORIGIN_SZBPSZ04       0.4504873  0.0058418    77.115  < 2e-16 ***\nORIGIN_SZBPSZ05       0.5028646  0.0053682    93.675  < 2e-16 ***\nORIGIN_SZBPSZ06      -1.0125668  0.0105638   -95.853  < 2e-16 ***\nORIGIN_SZBPSZ07      -0.3859065  0.0098561   -39.154  < 2e-16 ***\nORIGIN_SZBSSZ01       0.1488497  0.0065504    22.724  < 2e-16 ***\nORIGIN_SZBSSZ02       0.4269498  0.0055893    76.387  < 2e-16 ***\nORIGIN_SZBSSZ03      -0.2437385  0.0062020   -39.300  < 2e-16 ***\nORIGIN_SZBTSZ01       0.1987940  0.0066672    29.817  < 2e-16 ***\nORIGIN_SZBTSZ02      -0.4571546  0.0090784   -50.356  < 2e-16 ***\nORIGIN_SZBTSZ03      -0.2697243  0.0077941   -34.606  < 2e-16 ***\nORIGIN_SZBTSZ04      -1.0997236  0.0115225   -95.441  < 2e-16 ***\nORIGIN_SZBTSZ05      -1.0053122  0.0132594   -75.819  < 2e-16 ***\nORIGIN_SZBTSZ06      -1.0841201  0.0102242  -106.035  < 2e-16 ***\nORIGIN_SZBTSZ07      -2.3134497  0.0158499  -145.960  < 2e-16 ***\nORIGIN_SZBTSZ08      -1.1581618  0.0121161   -95.589  < 2e-16 ***\nORIGIN_SZCBSZ01      -1.0805930  0.0577831   -18.701  < 2e-16 ***\nORIGIN_SZCCSZ01      -0.8145372  0.0152638   -53.364  < 2e-16 ***\nORIGIN_SZCHSZ01       0.0377079  0.0133240     2.830 0.004654 ** \nORIGIN_SZCHSZ02      -0.6209553  0.0096388   -64.422  < 2e-16 ***\nORIGIN_SZCHSZ03       1.6790244  0.0069559   241.381  < 2e-16 ***\nORIGIN_SZCKSZ01       0.0839586  0.0059934    14.008  < 2e-16 ***\nORIGIN_SZCKSZ02       0.4379511  0.0062289    70.309  < 2e-16 ***\nORIGIN_SZCKSZ03       0.7956950  0.0051892   153.335  < 2e-16 ***\nORIGIN_SZCKSZ04       1.2740323  0.0053165   239.637  < 2e-16 ***\nORIGIN_SZCKSZ05       0.9326213  0.0061807   150.893  < 2e-16 ***\nORIGIN_SZCKSZ06       0.3976273  0.0085639    46.431  < 2e-16 ***\nORIGIN_SZCLSZ01      -0.7522917  0.0094655   -79.477  < 2e-16 ***\nORIGIN_SZCLSZ02      -1.3937450  0.0153260   -90.940  < 2e-16 ***\nORIGIN_SZCLSZ03      -0.7898683  0.0091016   -86.784  < 2e-16 ***\nORIGIN_SZCLSZ04       0.8451512  0.0051258   164.882  < 2e-16 ***\nORIGIN_SZCLSZ05      -1.6573818  0.0166091   -99.788  < 2e-16 ***\nORIGIN_SZCLSZ06       0.9478181  0.0048182   196.716  < 2e-16 ***\nORIGIN_SZCLSZ07      -0.2499753  0.0064632   -38.677  < 2e-16 ***\nORIGIN_SZCLSZ08       0.1350119  0.0069296    19.483  < 2e-16 ***\nORIGIN_SZCLSZ09      -1.3868782  0.0192743   -71.955  < 2e-16 ***\nORIGIN_SZDTSZ02      -3.7535792  0.0871325   -43.079  < 2e-16 ***\nORIGIN_SZDTSZ03      -3.8462041  0.0840156   -45.780  < 2e-16 ***\nORIGIN_SZDTSZ13      -2.9738127  0.0349241   -85.151  < 2e-16 ***\nORIGIN_SZGLSZ01      -1.5175198  0.0110135  -137.787  < 2e-16 ***\nORIGIN_SZGLSZ02       0.2405712  0.0058742    40.954  < 2e-16 ***\nORIGIN_SZGLSZ03       0.1940241  0.0061989    31.300  < 2e-16 ***\nORIGIN_SZGLSZ04       1.0292572  0.0049028   209.931  < 2e-16 ***\nORIGIN_SZGLSZ05       0.9864552  0.0050898   193.811  < 2e-16 ***\nORIGIN_SZHGSZ01       0.3073609  0.0054307    56.597  < 2e-16 ***\nORIGIN_SZHGSZ02       0.3827293  0.0054555    70.154  < 2e-16 ***\nORIGIN_SZHGSZ03       0.2342580  0.0059240    39.544  < 2e-16 ***\nORIGIN_SZHGSZ04       0.8750090  0.0049639   176.275  < 2e-16 ***\nORIGIN_SZHGSZ05       1.1695280  0.0049468   236.420  < 2e-16 ***\nORIGIN_SZHGSZ06      -0.0462411  0.0063805    -7.247 4.25e-13 ***\nORIGIN_SZHGSZ07       0.4488583  0.0055139    81.404  < 2e-16 ***\nORIGIN_SZHGSZ08       0.2236095  0.0061279    36.490  < 2e-16 ***\nORIGIN_SZHGSZ09      -1.6376674  0.0084442  -193.941  < 2e-16 ***\nORIGIN_SZHGSZ10      -2.9849025  0.0501042   -59.574  < 2e-16 ***\nORIGIN_SZJESZ01       0.3926525  0.0056268    69.783  < 2e-16 ***\nORIGIN_SZJESZ02       0.1230160  0.0056864    21.633  < 2e-16 ***\nORIGIN_SZJESZ03       0.0188276  0.0061020     3.085 0.002032 ** \nORIGIN_SZJESZ04      -1.3611618  0.0117184  -116.156  < 2e-16 ***\nORIGIN_SZJESZ05      -2.0643662  0.0157083  -131.419  < 2e-16 ***\nORIGIN_SZJESZ06       0.1556368  0.0055245    28.172  < 2e-16 ***\nORIGIN_SZJESZ07      -1.7664532  0.0133171  -132.646  < 2e-16 ***\nORIGIN_SZJESZ08      -0.9115981  0.0138203   -65.961  < 2e-16 ***\nORIGIN_SZJESZ09       0.6121916  0.0060381   101.388  < 2e-16 ***\nORIGIN_SZJESZ10      -1.1953045  0.0233216   -51.253  < 2e-16 ***\nORIGIN_SZJESZ11      -1.4088748  0.0220921   -63.773  < 2e-16 ***\nORIGIN_SZJWSZ01       0.5759093  0.0077741    74.081  < 2e-16 ***\nORIGIN_SZJWSZ02       0.9769314  0.0053029   184.227  < 2e-16 ***\nORIGIN_SZJWSZ03       1.3242695  0.0049068   269.882  < 2e-16 ***\nORIGIN_SZJWSZ04       0.5621088  0.0057831    97.199  < 2e-16 ***\nORIGIN_SZJWSZ05      -1.5744341  0.0146904  -107.174  < 2e-16 ***\nORIGIN_SZJWSZ06      -0.9113320  0.0126913   -71.807  < 2e-16 ***\nORIGIN_SZJWSZ07      -2.3083419  0.0357843   -64.507  < 2e-16 ***\nORIGIN_SZJWSZ08       2.0114225  0.0047956   419.429  < 2e-16 ***\nORIGIN_SZJWSZ09       1.9086705  0.0045255   421.759  < 2e-16 ***\nORIGIN_SZKLSZ01       0.2743166  0.0056908    48.204  < 2e-16 ***\nORIGIN_SZKLSZ02      -0.6443386  0.0074521   -86.463  < 2e-16 ***\nORIGIN_SZKLSZ03      -0.3990113  0.0067213   -59.366  < 2e-16 ***\nORIGIN_SZKLSZ04      -2.1413876  0.0138405  -154.719  < 2e-16 ***\nORIGIN_SZKLSZ05      -1.0913697  0.0121512   -89.816  < 2e-16 ***\nORIGIN_SZKLSZ06      -5.6240764  0.1857405   -30.279  < 2e-16 ***\nORIGIN_SZKLSZ07      -1.1885897  0.0096830  -122.750  < 2e-16 ***\nORIGIN_SZKLSZ08      -1.7018593  0.0114317  -148.872  < 2e-16 ***\nORIGIN_SZLKSZ01      -1.6659670  0.0446420   -37.318  < 2e-16 ***\nORIGIN_SZMDSZ01      -1.1210505  0.0318834   -35.161  < 2e-16 ***\nORIGIN_SZMDSZ02      -0.5096299  0.0116645   -43.691  < 2e-16 ***\nORIGIN_SZMDSZ03      -1.9187039  0.0198291   -96.762  < 2e-16 ***\nORIGIN_SZMPSZ01      -0.5260512  0.0094201   -55.844  < 2e-16 ***\nORIGIN_SZMPSZ02      -0.2905084  0.0077974   -37.257  < 2e-16 ***\nORIGIN_SZMPSZ03       0.3342293  0.0063715    52.457  < 2e-16 ***\nORIGIN_SZMUSZ02      -3.8337096  0.1105053   -34.693  < 2e-16 ***\nORIGIN_SZNTSZ01      -2.9845040  0.0397028   -75.171  < 2e-16 ***\nORIGIN_SZNTSZ02      -3.1812985  0.0249470  -127.522  < 2e-16 ***\nORIGIN_SZNTSZ03      -0.9742991  0.0085424  -114.054  < 2e-16 ***\nORIGIN_SZNTSZ05      -4.2086932  0.0579737   -72.597  < 2e-16 ***\nORIGIN_SZNTSZ06      -4.5831822  0.0583494   -78.547  < 2e-16 ***\nORIGIN_SZNVSZ01       0.3186962  0.0052944    60.195  < 2e-16 ***\nORIGIN_SZNVSZ02      -0.5321136  0.0073747   -72.154  < 2e-16 ***\nORIGIN_SZNVSZ03      -0.9911852  0.0090560  -109.451  < 2e-16 ***\nORIGIN_SZNVSZ04      -0.8329721  0.0099590   -83.640  < 2e-16 ***\nORIGIN_SZNVSZ05      -2.1460777  0.0182401  -117.657  < 2e-16 ***\nORIGIN_SZPGSZ01      -0.5604078  0.0151515   -36.987  < 2e-16 ***\nORIGIN_SZPGSZ02      -0.4025139  0.0085135   -47.279  < 2e-16 ***\nORIGIN_SZPGSZ03       0.6975483  0.0055534   125.608  < 2e-16 ***\nORIGIN_SZPGSZ04       1.2175486  0.0051080   238.363  < 2e-16 ***\nORIGIN_SZPGSZ05       0.3895354  0.0069851    55.767  < 2e-16 ***\nORIGIN_SZPLSZ01      -0.5572701  0.0134473   -41.441  < 2e-16 ***\nORIGIN_SZPLSZ02      -0.9854214  0.0172337   -57.180  < 2e-16 ***\nORIGIN_SZPLSZ03      -1.6991954  0.0472629   -35.952  < 2e-16 ***\nORIGIN_SZPLSZ04      -2.2000217  0.0373580   -58.890  < 2e-16 ***\nORIGIN_SZPLSZ05      -1.7086663  0.0260920   -65.486  < 2e-16 ***\nORIGIN_SZPNSZ01       1.5292867  0.0055102   277.535  < 2e-16 ***\nORIGIN_SZPNSZ02       0.7457519  0.0127815    58.346  < 2e-16 ***\nORIGIN_SZPNSZ03      -1.3659046  0.0216180   -63.184  < 2e-16 ***\nORIGIN_SZPNSZ04      -2.0025379  0.0360655   -55.525  < 2e-16 ***\nORIGIN_SZPNSZ05      -0.9157959  0.0320955   -28.533  < 2e-16 ***\nORIGIN_SZPRSZ01       0.0522611  0.0139142     3.756 0.000173 ***\nORIGIN_SZPRSZ02       1.3063371  0.0053809   242.774  < 2e-16 ***\nORIGIN_SZPRSZ03       0.9963670  0.0054293   183.516  < 2e-16 ***\nORIGIN_SZPRSZ04      -0.0300950  0.0088010    -3.419 0.000627 ***\nORIGIN_SZPRSZ05       1.6840313  0.0050839   331.245  < 2e-16 ***\nORIGIN_SZPRSZ06      -0.8277202  0.0131296   -63.042  < 2e-16 ***\nORIGIN_SZPRSZ07      -2.1698449  0.0177362  -122.340  < 2e-16 ***\nORIGIN_SZPRSZ08       0.4559353  0.0072609    62.793  < 2e-16 ***\nORIGIN_SZQTSZ01      -0.3517047  0.0078770   -44.650  < 2e-16 ***\nORIGIN_SZQTSZ02      -0.8199353  0.0071544  -114.605  < 2e-16 ***\nORIGIN_SZQTSZ03      -0.2457614  0.0065555   -37.490  < 2e-16 ***\nORIGIN_SZQTSZ04      -1.2216614  0.0084050  -145.349  < 2e-16 ***\nORIGIN_SZQTSZ05      -0.7219952  0.0072360   -99.778  < 2e-16 ***\nORIGIN_SZQTSZ06      -0.6729363  0.0076658   -87.784  < 2e-16 ***\nORIGIN_SZQTSZ07      -1.4497690  0.0109365  -132.563  < 2e-16 ***\nORIGIN_SZQTSZ08      -0.2770151  0.0070193   -39.465  < 2e-16 ***\nORIGIN_SZQTSZ09      -0.6157554  0.0078739   -78.202  < 2e-16 ***\nORIGIN_SZQTSZ10      -0.3091547  0.0075471   -40.963  < 2e-16 ***\nORIGIN_SZQTSZ11      -1.9698881  0.0151247  -130.243  < 2e-16 ***\nORIGIN_SZQTSZ12      -2.6449643  0.0205857  -128.485  < 2e-16 ***\nORIGIN_SZQTSZ13      -0.3754107  0.0088433   -42.452  < 2e-16 ***\nORIGIN_SZQTSZ14      -1.6537473  0.0134378  -123.067  < 2e-16 ***\nORIGIN_SZQTSZ15      -0.3435351  0.0131956   -26.034  < 2e-16 ***\nORIGIN_SZRCSZ01      -1.7104390  0.0141179  -121.154  < 2e-16 ***\nORIGIN_SZRCSZ06      -1.1250727  0.0094909  -118.542  < 2e-16 ***\nORIGIN_SZRVSZ01      -3.0220116  0.0339694   -88.963  < 2e-16 ***\nORIGIN_SZRVSZ02      -3.6040075  0.0297641  -121.086  < 2e-16 ***\nORIGIN_SZRVSZ03      -3.2345594  0.0259149  -124.814  < 2e-16 ***\nORIGIN_SZRVSZ04      -3.6900313  0.0575908   -64.073  < 2e-16 ***\nORIGIN_SZRVSZ05      -2.9527570  0.0178582  -165.344  < 2e-16 ***\nORIGIN_SZSBSZ01       0.0238445  0.0078563     3.035 0.002405 ** \nORIGIN_SZSBSZ02      -0.5780602  0.0093054   -62.121  < 2e-16 ***\nORIGIN_SZSBSZ03       0.8961719  0.0054586   164.175  < 2e-16 ***\nORIGIN_SZSBSZ04       0.8421798  0.0061888   136.080  < 2e-16 ***\nORIGIN_SZSBSZ05      -0.1682984  0.0078342   -21.482  < 2e-16 ***\nORIGIN_SZSBSZ06      -1.1482701  0.0196421   -58.460  < 2e-16 ***\nORIGIN_SZSBSZ07      -0.8830317  0.0160709   -54.946  < 2e-16 ***\nORIGIN_SZSBSZ08      -1.1039492  0.0174602   -63.226  < 2e-16 ***\nORIGIN_SZSBSZ09      -0.5946691  0.0101961   -58.323  < 2e-16 ***\nORIGIN_SZSESZ02       1.1144933  0.0050948   218.749  < 2e-16 ***\nORIGIN_SZSESZ03       1.1058963  0.0049026   225.574  < 2e-16 ***\nORIGIN_SZSESZ04       0.7427975  0.0056948   130.433  < 2e-16 ***\nORIGIN_SZSESZ05      -0.2812684  0.0069596   -40.414  < 2e-16 ***\nORIGIN_SZSESZ06       0.8168315  0.0055800   146.387  < 2e-16 ***\nORIGIN_SZSESZ07      -2.2842043  0.0231232   -98.784  < 2e-16 ***\nORIGIN_SZSGSZ01      -0.7313790  0.0098957   -73.909  < 2e-16 ***\nORIGIN_SZSGSZ02      -1.1185406  0.0110919  -100.843  < 2e-16 ***\nORIGIN_SZSGSZ03       0.1752618  0.0060508    28.965  < 2e-16 ***\nORIGIN_SZSGSZ04       0.3764395  0.0056165    67.023  < 2e-16 ***\nORIGIN_SZSGSZ05      -1.7203916  0.0118945  -144.637  < 2e-16 ***\nORIGIN_SZSGSZ06       0.4630857  0.0052886    87.563  < 2e-16 ***\nORIGIN_SZSGSZ07      -0.7051233  0.0073133   -96.417  < 2e-16 ***\nORIGIN_SZSKSZ01       0.2053928  0.0100710    20.395  < 2e-16 ***\nORIGIN_SZSKSZ02       1.2630428  0.0063490   198.935  < 2e-16 ***\nORIGIN_SZSKSZ03      -0.3035297  0.0096788   -31.360  < 2e-16 ***\nORIGIN_SZSKSZ04      -1.7952886  0.0359225   -49.977  < 2e-16 ***\nORIGIN_SZSKSZ05      -0.3836861  0.0176686   -21.716  < 2e-16 ***\nORIGIN_SZSLSZ01      -2.5916326  0.0348001   -74.472  < 2e-16 ***\nORIGIN_SZSLSZ04      -0.2251549  0.0088517   -25.436  < 2e-16 ***\nORIGIN_SZSRSZ01      -2.9590365  0.0173638  -170.414  < 2e-16 ***\nORIGIN_SZTHSZ01      -1.9639893  0.0570321   -34.437  < 2e-16 ***\nORIGIN_SZTHSZ03      -1.7281304  0.0272797   -63.349  < 2e-16 ***\nORIGIN_SZTHSZ04      -2.7837906  0.0343179   -81.118  < 2e-16 ***\nORIGIN_SZTHSZ06      -2.1800693  0.0205491  -106.091  < 2e-16 ***\nORIGIN_SZTMSZ01       0.8228136  0.0066824   123.131  < 2e-16 ***\nORIGIN_SZTMSZ02       2.3174781  0.0044978   515.243  < 2e-16 ***\nORIGIN_SZTMSZ03       1.7061757  0.0048615   350.957  < 2e-16 ***\nORIGIN_SZTMSZ04       1.2407899  0.0058389   212.504  < 2e-16 ***\nORIGIN_SZTMSZ05      -0.1000526  0.0124079    -8.064 7.41e-16 ***\nORIGIN_SZTNSZ01      -2.0347519  0.0139596  -145.760  < 2e-16 ***\nORIGIN_SZTNSZ02      -1.8682671  0.0107901  -173.146  < 2e-16 ***\nORIGIN_SZTNSZ03      -2.1737183  0.0146759  -148.115  < 2e-16 ***\nORIGIN_SZTNSZ04      -0.5006452  0.0081501   -61.428  < 2e-16 ***\nORIGIN_SZTPSZ01      -0.6722487  0.0075606   -88.914  < 2e-16 ***\nORIGIN_SZTPSZ02       0.4552916  0.0050191    90.711  < 2e-16 ***\nORIGIN_SZTPSZ03      -0.7865781  0.0072250  -108.869  < 2e-16 ***\nORIGIN_SZTPSZ04      -0.7049044  0.0066456  -106.071  < 2e-16 ***\nORIGIN_SZTPSZ05      -0.5574925  0.0070366   -79.227  < 2e-16 ***\nORIGIN_SZTPSZ06      -0.4247282  0.0068709   -61.815  < 2e-16 ***\nORIGIN_SZTPSZ07      -0.2846984  0.0071030   -40.081  < 2e-16 ***\nORIGIN_SZTPSZ08      -1.0898051  0.0110046   -99.031  < 2e-16 ***\nORIGIN_SZTPSZ09      -0.8092746  0.0079160  -102.232  < 2e-16 ***\nORIGIN_SZTPSZ10      -0.9332072  0.0086809  -107.502  < 2e-16 ***\nORIGIN_SZTPSZ11      -0.0421981  0.0064343    -6.558 5.44e-11 ***\nORIGIN_SZTPSZ12      -0.6330081  0.0078324   -80.819  < 2e-16 ***\nORIGIN_SZTSSZ01      -1.7650409  0.0517357   -34.116  < 2e-16 ***\nORIGIN_SZTSSZ02       1.1707267  0.0094178   124.310  < 2e-16 ***\nORIGIN_SZTSSZ03       0.6581679  0.0095894    68.635  < 2e-16 ***\nORIGIN_SZTSSZ04       0.8736493  0.0104965    83.233  < 2e-16 ***\nORIGIN_SZTSSZ05       0.0957248  0.0178709     5.356 8.49e-08 ***\nORIGIN_SZTSSZ06       1.7581609  0.0206810    85.013  < 2e-16 ***\nORIGIN_SZWCSZ01       0.8097950  0.0105622    76.669  < 2e-16 ***\nORIGIN_SZWCSZ02      -1.9966163  0.0345747   -57.748  < 2e-16 ***\nORIGIN_SZWCSZ03      -5.0687420  0.1474971   -34.365  < 2e-16 ***\nORIGIN_SZWDSZ01       1.4926003  0.0047216   316.124  < 2e-16 ***\nORIGIN_SZWDSZ02       0.9916597  0.0055755   177.859  < 2e-16 ***\nORIGIN_SZWDSZ03       1.5918065  0.0052180   305.062  < 2e-16 ***\nORIGIN_SZWDSZ04       1.3717152  0.0060516   226.669  < 2e-16 ***\nORIGIN_SZWDSZ05       0.6700111  0.0062287   107.569  < 2e-16 ***\nORIGIN_SZWDSZ06       0.8115996  0.0060947   133.165  < 2e-16 ***\nORIGIN_SZWDSZ07      -0.6488914  0.0093567   -69.351  < 2e-16 ***\nORIGIN_SZWDSZ08      -0.3610234  0.0096440   -37.435  < 2e-16 ***\nORIGIN_SZWDSZ09       1.4445461  0.0052279   276.317  < 2e-16 ***\nORIGIN_SZYSSZ01      -0.2039272  0.0069548   -29.322  < 2e-16 ***\nORIGIN_SZYSSZ02       0.8707707  0.0058957   147.697  < 2e-16 ***\nORIGIN_SZYSSZ03       1.8348842  0.0050377   364.231  < 2e-16 ***\nORIGIN_SZYSSZ04       1.0780641  0.0052960   203.564  < 2e-16 ***\nORIGIN_SZYSSZ05       0.3222765  0.0069700    46.237  < 2e-16 ***\nORIGIN_SZYSSZ06      -0.4424689  0.0124866   -35.435  < 2e-16 ***\nORIGIN_SZYSSZ07      -1.0267883  0.0155821   -65.895  < 2e-16 ***\nORIGIN_SZYSSZ08       0.1833117  0.0070935    25.842  < 2e-16 ***\nORIGIN_SZYSSZ09       1.0766070  0.0050451   213.396  < 2e-16 ***\nlog(DESTIN_AGE25_64)  0.0295428  0.0001051   280.998  < 2e-16 ***\nlog(dist)            -1.7024691  0.0004625 -3681.042  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 36117615  on 14273  degrees of freedom\nResidual deviance: 12983718  on 13993  degrees of freedom\nAIC: 13068835\n\nNumber of Fisher Scoring iterations: 6\n\n\nWe can examine how the constraints hold for destinations this time.\n\nCalcRSquared(orcSIM$data$TRIPS, orcSIM$fitted.values)\n\n[1] 0.4029115\n\n\n\n\n2.7 Destination constrained\nIn this section, we will fit a destination constrained SIM by using the code chunk below.\nThe general formula of Destination Constrained Spatial Interaction Model\n\n\ndecSIM <- glm(formula = TRIPS ~ \n                DESTIN_SZ + \n                log(ORIGIN_AGE25_64) + \n                log(dist),\n              family = poisson(link = \"log\"),\n              data = SIM_data,\n              na.action = na.exclude)\nsummary(decSIM)\n\n\nCall:\nglm(formula = TRIPS ~ DESTIN_SZ + log(ORIGIN_AGE25_64) + log(dist), \n    family = poisson(link = \"log\"), data = SIM_data, na.action = na.exclude)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-189.20   -15.64    -7.08     1.55   379.03  \n\nCoefficients:\n                       Estimate Std. Error   z value Pr(>|z|)    \n(Intercept)          19.4822997  0.0050784  3836.298  < 2e-16 ***\nDESTIN_SZAMSZ02       0.1263056  0.0049743    25.392  < 2e-16 ***\nDESTIN_SZAMSZ03       0.0421788  0.0049859     8.460  < 2e-16 ***\nDESTIN_SZAMSZ04      -1.1668479  0.0074254  -157.143  < 2e-16 ***\nDESTIN_SZAMSZ05      -1.2586639  0.0075854  -165.931  < 2e-16 ***\nDESTIN_SZAMSZ06      -1.1414791  0.0073474  -155.359  < 2e-16 ***\nDESTIN_SZAMSZ07      -1.5565804  0.0109476  -142.185  < 2e-16 ***\nDESTIN_SZAMSZ08      -0.3990754  0.0074159   -53.813  < 2e-16 ***\nDESTIN_SZAMSZ09      -1.0109118  0.0076802  -131.626  < 2e-16 ***\nDESTIN_SZAMSZ10       0.0159285  0.0051765     3.077  0.00209 ** \nDESTIN_SZAMSZ11      -0.3653273  0.0094866   -38.510  < 2e-16 ***\nDESTIN_SZAMSZ12       0.5297606  0.0053243    99.500  < 2e-16 ***\nDESTIN_SZBDSZ01       1.0394822  0.0044226   235.037  < 2e-16 ***\nDESTIN_SZBDSZ02       0.1956964  0.0059564    32.855  < 2e-16 ***\nDESTIN_SZBDSZ03       0.3209267  0.0053718    59.742  < 2e-16 ***\nDESTIN_SZBDSZ04       1.2429874  0.0043104   288.370  < 2e-16 ***\nDESTIN_SZBDSZ05       0.8535842  0.0046360   184.122  < 2e-16 ***\nDESTIN_SZBDSZ06       0.5181443  0.0053736    96.423  < 2e-16 ***\nDESTIN_SZBDSZ07      -0.5849371  0.0110468   -52.951  < 2e-16 ***\nDESTIN_SZBDSZ08      -1.2871050  0.0128623  -100.068  < 2e-16 ***\nDESTIN_SZBKSZ01      -1.0633560  0.0077771  -136.730  < 2e-16 ***\nDESTIN_SZBKSZ02      -0.4065316  0.0066712   -60.938  < 2e-16 ***\nDESTIN_SZBKSZ03      -0.6815674  0.0066509  -102.477  < 2e-16 ***\nDESTIN_SZBKSZ04      -0.4185485  0.0058306   -71.785  < 2e-16 ***\nDESTIN_SZBKSZ05      -0.8887654  0.0073867  -120.319  < 2e-16 ***\nDESTIN_SZBKSZ06      -0.9436078  0.0068625  -137.501  < 2e-16 ***\nDESTIN_SZBKSZ07      -0.0067325  0.0048408    -1.391  0.16430    \nDESTIN_SZBKSZ08      -1.2680903  0.0079177  -160.160  < 2e-16 ***\nDESTIN_SZBKSZ09      -0.0350151  0.0054287    -6.450 1.12e-10 ***\nDESTIN_SZBLSZ01      -0.3045203  0.0081978   -37.146  < 2e-16 ***\nDESTIN_SZBLSZ02       0.6432424  0.0074449    86.400  < 2e-16 ***\nDESTIN_SZBLSZ03       1.9595113  0.0084705   231.333  < 2e-16 ***\nDESTIN_SZBLSZ04       0.0149756  0.0172081     0.870  0.38415    \nDESTIN_SZBMSZ01      -0.0378127  0.0055294    -6.838 8.00e-12 ***\nDESTIN_SZBMSZ02      -0.8458055  0.0054043  -156.505  < 2e-16 ***\nDESTIN_SZBMSZ03      -1.1334399  0.0063720  -177.878  < 2e-16 ***\nDESTIN_SZBMSZ04      -1.1164759  0.0057743  -193.353  < 2e-16 ***\nDESTIN_SZBMSZ05      -1.1078742  0.0078703  -140.766  < 2e-16 ***\nDESTIN_SZBMSZ06      -2.2787234  0.0155126  -146.895  < 2e-16 ***\nDESTIN_SZBMSZ07      -0.2739089  0.0051924   -52.752  < 2e-16 ***\nDESTIN_SZBMSZ08      -1.6825978  0.0071842  -234.209  < 2e-16 ***\nDESTIN_SZBMSZ09      -3.0047801  0.0159980  -187.823  < 2e-16 ***\nDESTIN_SZBMSZ10      -2.2232689  0.0096907  -229.423  < 2e-16 ***\nDESTIN_SZBMSZ11      -1.9657136  0.0086445  -227.394  < 2e-16 ***\nDESTIN_SZBMSZ12      -1.5359286  0.0089658  -171.310  < 2e-16 ***\nDESTIN_SZBMSZ13      -0.5657561  0.0059960   -94.355  < 2e-16 ***\nDESTIN_SZBMSZ14      -1.6904858  0.0084858  -199.214  < 2e-16 ***\nDESTIN_SZBMSZ15      -1.5268383  0.0079959  -190.953  < 2e-16 ***\nDESTIN_SZBMSZ16      -2.2045600  0.0130872  -168.452  < 2e-16 ***\nDESTIN_SZBMSZ17      -2.2992381  0.0184895  -124.353  < 2e-16 ***\nDESTIN_SZBPSZ01      -0.8549497  0.0065168  -131.191  < 2e-16 ***\nDESTIN_SZBPSZ02      -1.7470549  0.0095751  -182.457  < 2e-16 ***\nDESTIN_SZBPSZ03      -1.4015145  0.0090888  -154.203  < 2e-16 ***\nDESTIN_SZBPSZ04      -0.5250632  0.0066496   -78.962  < 2e-16 ***\nDESTIN_SZBPSZ05       0.3413171  0.0046404    73.553  < 2e-16 ***\nDESTIN_SZBPSZ06      -0.8569188  0.0090795   -94.380  < 2e-16 ***\nDESTIN_SZBPSZ07      -0.0751284  0.0089704    -8.375  < 2e-16 ***\nDESTIN_SZBSSZ01       0.1015228  0.0055735    18.215  < 2e-16 ***\nDESTIN_SZBSSZ02      -0.7066412  0.0063845  -110.682  < 2e-16 ***\nDESTIN_SZBSSZ03       0.1622730  0.0046689    34.756  < 2e-16 ***\nDESTIN_SZBTSZ01       0.5470615  0.0047984   114.009  < 2e-16 ***\nDESTIN_SZBTSZ02      -0.1393371  0.0078266   -17.803  < 2e-16 ***\nDESTIN_SZBTSZ03       0.1474771  0.0059428    24.816  < 2e-16 ***\nDESTIN_SZBTSZ04      -1.2857827  0.0122000  -105.392  < 2e-16 ***\nDESTIN_SZBTSZ05      -0.2629188  0.0081769   -32.154  < 2e-16 ***\nDESTIN_SZBTSZ06      -0.8319920  0.0081401  -102.209  < 2e-16 ***\nDESTIN_SZBTSZ07      -1.8829448  0.0121227  -155.324  < 2e-16 ***\nDESTIN_SZBTSZ08      -1.5732123  0.0116752  -134.748  < 2e-16 ***\nDESTIN_SZCBSZ01      -3.5334327  0.3333510   -10.600  < 2e-16 ***\nDESTIN_SZCCSZ01      -0.2129306  0.0093782   -22.705  < 2e-16 ***\nDESTIN_SZCHSZ01      -0.1494972  0.0113078   -13.221  < 2e-16 ***\nDESTIN_SZCHSZ02       0.0041774  0.0063195     0.661  0.50860    \nDESTIN_SZCHSZ03       2.5565450  0.0046495   549.857  < 2e-16 ***\nDESTIN_SZCKSZ01       0.0489719  0.0053801     9.102  < 2e-16 ***\nDESTIN_SZCKSZ02      -0.3548993  0.0060671   -58.496  < 2e-16 ***\nDESTIN_SZCKSZ03       0.5386351  0.0044913   119.928  < 2e-16 ***\nDESTIN_SZCKSZ04      -0.4425512  0.0073837   -59.936  < 2e-16 ***\nDESTIN_SZCKSZ05      -0.4092591  0.0077267   -52.967  < 2e-16 ***\nDESTIN_SZCKSZ06       0.2207041  0.0074252    29.724  < 2e-16 ***\nDESTIN_SZCLSZ01       0.2851460  0.0052362    54.457  < 2e-16 ***\nDESTIN_SZCLSZ02      -1.9270528  0.0147688  -130.482  < 2e-16 ***\nDESTIN_SZCLSZ03      -0.6266521  0.0086780   -72.212  < 2e-16 ***\nDESTIN_SZCLSZ04      -0.1335581  0.0054216   -24.634  < 2e-16 ***\nDESTIN_SZCLSZ05      -0.8912963  0.0096015   -92.829  < 2e-16 ***\nDESTIN_SZCLSZ06       0.1781234  0.0048150    36.993  < 2e-16 ***\nDESTIN_SZCLSZ07      -0.5609619  0.0062277   -90.075  < 2e-16 ***\nDESTIN_SZCLSZ08      -0.3875308  0.0068390   -56.665  < 2e-16 ***\nDESTIN_SZCLSZ09       0.2539453  0.0072623    34.968  < 2e-16 ***\nDESTIN_SZDTSZ02      -2.5036295  0.0373421   -67.046  < 2e-16 ***\nDESTIN_SZDTSZ03      -0.8956407  0.0149971   -59.721  < 2e-16 ***\nDESTIN_SZDTSZ13      -1.6562176  0.0175441   -94.403  < 2e-16 ***\nDESTIN_SZGLSZ01      -0.2716152  0.0056553   -48.029  < 2e-16 ***\nDESTIN_SZGLSZ02      -0.1735665  0.0055548   -31.246  < 2e-16 ***\nDESTIN_SZGLSZ03       0.7029507  0.0044934   156.441  < 2e-16 ***\nDESTIN_SZGLSZ04       0.5788027  0.0045449   127.351  < 2e-16 ***\nDESTIN_SZGLSZ05       0.6865291  0.0045131   152.118  < 2e-16 ***\nDESTIN_SZHGSZ01       0.3275950  0.0043866    74.681  < 2e-16 ***\nDESTIN_SZHGSZ02      -0.6326974  0.0063517   -99.610  < 2e-16 ***\nDESTIN_SZHGSZ03      -1.0597982  0.0073914  -143.382  < 2e-16 ***\nDESTIN_SZHGSZ04      -0.2267013  0.0052178   -43.448  < 2e-16 ***\nDESTIN_SZHGSZ05      -0.3063050  0.0055452   -55.238  < 2e-16 ***\nDESTIN_SZHGSZ06      -0.7483961  0.0065544  -114.182  < 2e-16 ***\nDESTIN_SZHGSZ07       0.1096958  0.0051309    21.379  < 2e-16 ***\nDESTIN_SZHGSZ08      -0.1374201  0.0056692   -24.240  < 2e-16 ***\nDESTIN_SZHGSZ09       0.0775400  0.0060230    12.874  < 2e-16 ***\nDESTIN_SZHGSZ10      -3.3017475  0.0289292  -114.132  < 2e-16 ***\nDESTIN_SZJESZ01      -0.0489065  0.0057246    -8.543  < 2e-16 ***\nDESTIN_SZJESZ02      -0.5101614  0.0060074   -84.921  < 2e-16 ***\nDESTIN_SZJESZ03      -0.5328921  0.0064129   -83.097  < 2e-16 ***\nDESTIN_SZJESZ04      -0.7348953  0.0082249   -89.351  < 2e-16 ***\nDESTIN_SZJESZ05      -1.0864570  0.0111740   -97.231  < 2e-16 ***\nDESTIN_SZJESZ06       0.2407920  0.0046801    51.451  < 2e-16 ***\nDESTIN_SZJESZ07      -1.1523093  0.0090103  -127.888  < 2e-16 ***\nDESTIN_SZJESZ08      -0.4627356  0.0094529   -48.952  < 2e-16 ***\nDESTIN_SZJESZ09       0.0528616  0.0068126     7.759 8.53e-15 ***\nDESTIN_SZJESZ10       1.0240660  0.0084045   121.848  < 2e-16 ***\nDESTIN_SZJESZ11       0.7875517  0.0076251   103.284  < 2e-16 ***\nDESTIN_SZJWSZ01      -0.1533418  0.0076198   -20.124  < 2e-16 ***\nDESTIN_SZJWSZ02      -0.0011019  0.0059389    -0.186  0.85280    \nDESTIN_SZJWSZ03       0.9063789  0.0046747   193.892  < 2e-16 ***\nDESTIN_SZJWSZ04       0.7019286  0.0049743   141.112  < 2e-16 ***\nDESTIN_SZJWSZ05      -0.5197057  0.0072971   -71.220  < 2e-16 ***\nDESTIN_SZJWSZ06       0.3350986  0.0061171    54.780  < 2e-16 ***\nDESTIN_SZJWSZ07      -0.5961960  0.0328336   -18.158  < 2e-16 ***\nDESTIN_SZJWSZ08       0.8054662  0.0056006   143.819  < 2e-16 ***\nDESTIN_SZJWSZ09       1.5860146  0.0040282   393.723  < 2e-16 ***\nDESTIN_SZKLSZ01      -0.6500838  0.0063560  -102.279  < 2e-16 ***\nDESTIN_SZKLSZ02      -0.7039434  0.0064465  -109.197  < 2e-16 ***\nDESTIN_SZKLSZ03      -1.1972384  0.0075577  -158.413  < 2e-16 ***\nDESTIN_SZKLSZ04      -1.7172228  0.0097573  -175.993  < 2e-16 ***\nDESTIN_SZKLSZ05      -0.6042386  0.0093730   -64.466  < 2e-16 ***\nDESTIN_SZKLSZ06      -3.0201496  0.0389503   -77.539  < 2e-16 ***\nDESTIN_SZKLSZ07      -1.1522413  0.0076607  -150.409  < 2e-16 ***\nDESTIN_SZKLSZ08      -0.6977825  0.0057610  -121.122  < 2e-16 ***\nDESTIN_SZLKSZ01      -0.6895952  0.0268661   -25.668  < 2e-16 ***\nDESTIN_SZMDSZ01      -0.7155951  0.0228203   -31.358  < 2e-16 ***\nDESTIN_SZMDSZ02      -0.8153643  0.0123003   -66.288  < 2e-16 ***\nDESTIN_SZMDSZ03      -2.7745226  0.0301326   -92.077  < 2e-16 ***\nDESTIN_SZMPSZ01      -0.5492095  0.0087198   -62.984  < 2e-16 ***\nDESTIN_SZMPSZ02      -0.6104744  0.0069346   -88.033  < 2e-16 ***\nDESTIN_SZMPSZ03       0.2775047  0.0054964    50.489  < 2e-16 ***\nDESTIN_SZMUSZ02      -2.6322870  0.0214943  -122.464  < 2e-16 ***\nDESTIN_SZNTSZ01      -4.0762008  0.0531046   -76.758  < 2e-16 ***\nDESTIN_SZNTSZ02      -1.9765545  0.0125659  -157.296  < 2e-16 ***\nDESTIN_SZNTSZ03      -1.4563069  0.0085433  -170.462  < 2e-16 ***\nDESTIN_SZNTSZ05      -2.0125598  0.0270737   -74.336  < 2e-16 ***\nDESTIN_SZNTSZ06      -3.0145357  0.0504986   -59.695  < 2e-16 ***\nDESTIN_SZNVSZ01      -0.4693625  0.0053866   -87.135  < 2e-16 ***\nDESTIN_SZNVSZ02      -0.4525631  0.0060428   -74.894  < 2e-16 ***\nDESTIN_SZNVSZ03      -0.4821492  0.0064725   -74.492  < 2e-16 ***\nDESTIN_SZNVSZ04      -1.8929756  0.0128397  -147.432  < 2e-16 ***\nDESTIN_SZNVSZ05      -1.4501752  0.0099737  -145.400  < 2e-16 ***\nDESTIN_SZPGSZ01      -1.2305867  0.0174321   -70.593  < 2e-16 ***\nDESTIN_SZPGSZ02      -0.8232919  0.0080153  -102.715  < 2e-16 ***\nDESTIN_SZPGSZ03       0.2138480  0.0050850    42.054  < 2e-16 ***\nDESTIN_SZPGSZ04       0.1045757  0.0053579    19.518  < 2e-16 ***\nDESTIN_SZPGSZ05      -0.7542450  0.0088883   -84.858  < 2e-16 ***\nDESTIN_SZPLSZ01      -0.0098642  0.0080428    -1.226  0.22003    \nDESTIN_SZPLSZ02      -1.2630412  0.0152594   -82.771  < 2e-16 ***\nDESTIN_SZPLSZ03      -0.1554479  0.0108611   -14.312  < 2e-16 ***\nDESTIN_SZPLSZ04      -1.5505819  0.0114768  -135.105  < 2e-16 ***\nDESTIN_SZPLSZ05      -0.2417805  0.0130391   -18.543  < 2e-16 ***\nDESTIN_SZPNSZ01       0.7926715  0.0073628   107.659  < 2e-16 ***\nDESTIN_SZPNSZ02       2.1914920  0.0073537   298.013  < 2e-16 ***\nDESTIN_SZPNSZ03       1.0246845  0.0086874   117.951  < 2e-16 ***\nDESTIN_SZPNSZ04       2.5522612  0.0091789   278.057  < 2e-16 ***\nDESTIN_SZPNSZ05       1.7995301  0.0138562   129.872  < 2e-16 ***\nDESTIN_SZPRSZ01      -0.6576686  0.0096037   -68.481  < 2e-16 ***\nDESTIN_SZPRSZ02       0.3113532  0.0059851    52.021  < 2e-16 ***\nDESTIN_SZPRSZ03       0.9255296  0.0044779   206.687  < 2e-16 ***\nDESTIN_SZPRSZ04      -0.0028578  0.0093218    -0.307  0.75917    \nDESTIN_SZPRSZ05       0.2457863  0.0058261    42.187  < 2e-16 ***\nDESTIN_SZPRSZ06       0.3692137  0.0064542    57.205  < 2e-16 ***\nDESTIN_SZPRSZ07      -1.6733306  0.0138440  -120.871  < 2e-16 ***\nDESTIN_SZPRSZ08      -0.2221048  0.0074846   -29.675  < 2e-16 ***\nDESTIN_SZQTSZ01      -1.0185488  0.0093179  -109.311  < 2e-16 ***\nDESTIN_SZQTSZ02      -1.2802688  0.0081670  -156.761  < 2e-16 ***\nDESTIN_SZQTSZ03      -1.3322708  0.0079106  -168.415  < 2e-16 ***\nDESTIN_SZQTSZ04      -1.1803631  0.0077366  -152.568  < 2e-16 ***\nDESTIN_SZQTSZ05      -1.2215818  0.0072829  -167.734  < 2e-16 ***\nDESTIN_SZQTSZ06      -1.3213145  0.0074858  -176.509  < 2e-16 ***\nDESTIN_SZQTSZ07      -1.6426306  0.0123347  -133.171  < 2e-16 ***\nDESTIN_SZQTSZ08      -0.2224169  0.0058405   -38.082  < 2e-16 ***\nDESTIN_SZQTSZ09      -0.8142678  0.0069796  -116.665  < 2e-16 ***\nDESTIN_SZQTSZ10      -0.1090496  0.0062573   -17.428  < 2e-16 ***\nDESTIN_SZQTSZ11      -0.0108951  0.0061145    -1.782  0.07477 .  \nDESTIN_SZQTSZ12      -0.8582515  0.0090243   -95.105  < 2e-16 ***\nDESTIN_SZQTSZ13       0.1834409  0.0065231    28.122  < 2e-16 ***\nDESTIN_SZQTSZ14       0.1994454  0.0073615    27.093  < 2e-16 ***\nDESTIN_SZQTSZ15       0.6740197  0.0088699    75.990  < 2e-16 ***\nDESTIN_SZRCSZ01      -0.7746427  0.0079375   -97.593  < 2e-16 ***\nDESTIN_SZRCSZ06      -1.4394098  0.0209931   -68.566  < 2e-16 ***\nDESTIN_SZRVSZ01      -2.6060495  0.0175759  -148.274  < 2e-16 ***\nDESTIN_SZRVSZ02      -2.5823769  0.0354706   -72.803  < 2e-16 ***\nDESTIN_SZRVSZ03      -2.5890601  0.0152644  -169.614  < 2e-16 ***\nDESTIN_SZRVSZ04      -2.2277482  0.0165661  -134.477  < 2e-16 ***\nDESTIN_SZRVSZ05      -3.8610445  0.0298251  -129.456  < 2e-16 ***\nDESTIN_SZSBSZ01      -1.2035529  0.0103954  -115.777  < 2e-16 ***\nDESTIN_SZSBSZ02      -1.0267199  0.0085239  -120.452  < 2e-16 ***\nDESTIN_SZSBSZ03       0.5977382  0.0050336   118.750  < 2e-16 ***\nDESTIN_SZSBSZ04       0.5362769  0.0060573    88.534  < 2e-16 ***\nDESTIN_SZSBSZ05      -1.0440525  0.0089622  -116.495  < 2e-16 ***\nDESTIN_SZSBSZ06      -1.3939595  0.0246679   -56.509  < 2e-16 ***\nDESTIN_SZSBSZ07       0.1029116  0.0235414     4.372 1.23e-05 ***\nDESTIN_SZSBSZ08       1.3564902  0.0060529   224.105  < 2e-16 ***\nDESTIN_SZSBSZ09       0.4573712  0.0056585    80.829  < 2e-16 ***\nDESTIN_SZSESZ02      -0.1553609  0.0056716   -27.393  < 2e-16 ***\nDESTIN_SZSESZ03       0.5412776  0.0043801   123.576  < 2e-16 ***\nDESTIN_SZSESZ04      -0.6382091  0.0065411   -97.568  < 2e-16 ***\nDESTIN_SZSESZ05      -0.3332093  0.0055002   -60.581  < 2e-16 ***\nDESTIN_SZSESZ06      -0.3085951  0.0072340   -42.659  < 2e-16 ***\nDESTIN_SZSESZ07      -2.6237684  0.0245753  -106.764  < 2e-16 ***\nDESTIN_SZSGSZ01      -0.1062372  0.0066634   -15.943  < 2e-16 ***\nDESTIN_SZSGSZ02      -0.0475568  0.0058908    -8.073 6.85e-16 ***\nDESTIN_SZSGSZ03      -0.2118402  0.0055056   -38.477  < 2e-16 ***\nDESTIN_SZSGSZ04      -0.1099618  0.0054841   -20.051  < 2e-16 ***\nDESTIN_SZSGSZ05      -2.1556963  0.0113821  -189.394  < 2e-16 ***\nDESTIN_SZSGSZ06       0.4416352  0.0043842   100.734  < 2e-16 ***\nDESTIN_SZSGSZ07      -0.3949335  0.0059250   -66.655  < 2e-16 ***\nDESTIN_SZSISZ01      -1.2847094  0.0288610   -44.514  < 2e-16 ***\nDESTIN_SZSKSZ01       0.3089834  0.0082924    37.261  < 2e-16 ***\nDESTIN_SZSKSZ02       1.4139309  0.0059981   235.729  < 2e-16 ***\nDESTIN_SZSKSZ03       0.2427688  0.0067373    36.034  < 2e-16 ***\nDESTIN_SZSKSZ04      -0.2527488  0.0161286   -15.671  < 2e-16 ***\nDESTIN_SZSKSZ05       0.6046051  0.0122766    49.249  < 2e-16 ***\nDESTIN_SZSLSZ01      -0.3927387  0.0099790   -39.356  < 2e-16 ***\nDESTIN_SZSLSZ04      -0.5942110  0.0086225   -68.914  < 2e-16 ***\nDESTIN_SZSRSZ01      -2.6855766  0.0138707  -193.615  < 2e-16 ***\nDESTIN_SZTHSZ01      -3.2750084  0.0402668   -81.333  < 2e-16 ***\nDESTIN_SZTHSZ03      -1.7964408  0.0261810   -68.616  < 2e-16 ***\nDESTIN_SZTHSZ04      -2.6323994  0.0241831  -108.853  < 2e-16 ***\nDESTIN_SZTHSZ06      -1.9444390  0.0166052  -117.098  < 2e-16 ***\nDESTIN_SZTMSZ01       0.3856054  0.0063086    61.123  < 2e-16 ***\nDESTIN_SZTMSZ02       1.8586526  0.0039229   473.790  < 2e-16 ***\nDESTIN_SZTMSZ03       1.2601385  0.0044018   286.278  < 2e-16 ***\nDESTIN_SZTMSZ04       1.5884327  0.0043362   366.316  < 2e-16 ***\nDESTIN_SZTMSZ05       1.0377553  0.0063271   164.018  < 2e-16 ***\nDESTIN_SZTNSZ01      -0.9954275  0.0080345  -123.895  < 2e-16 ***\nDESTIN_SZTNSZ02      -2.1032696  0.0109228  -192.557  < 2e-16 ***\nDESTIN_SZTNSZ03      -2.0044892  0.0129215  -155.128  < 2e-16 ***\nDESTIN_SZTNSZ04      -0.9750326  0.0081677  -119.377  < 2e-16 ***\nDESTIN_SZTPSZ01      -0.7788383  0.0068769  -113.254  < 2e-16 ***\nDESTIN_SZTPSZ02       0.2866080  0.0042843    66.898  < 2e-16 ***\nDESTIN_SZTPSZ03      -0.8749841  0.0065470  -133.646  < 2e-16 ***\nDESTIN_SZTPSZ04      -1.6852792  0.0081488  -206.812  < 2e-16 ***\nDESTIN_SZTPSZ05      -1.3721346  0.0068230  -201.104  < 2e-16 ***\nDESTIN_SZTPSZ06      -0.7832133  0.0069164  -113.239  < 2e-16 ***\nDESTIN_SZTPSZ07      -2.3109126  0.0130830  -176.635  < 2e-16 ***\nDESTIN_SZTPSZ08      -1.6406531  0.0104897  -156.406  < 2e-16 ***\nDESTIN_SZTPSZ09      -0.5636273  0.0076848   -73.343  < 2e-16 ***\nDESTIN_SZTPSZ10      -1.5640843  0.0099984  -156.433  < 2e-16 ***\nDESTIN_SZTPSZ11      -0.3700482  0.0059834   -61.846  < 2e-16 ***\nDESTIN_SZTPSZ12      -0.8828228  0.0072302  -122.102  < 2e-16 ***\nDESTIN_SZTSSZ01       0.3529526  0.0221887    15.907  < 2e-16 ***\nDESTIN_SZTSSZ02       1.0265792  0.0153515    66.871  < 2e-16 ***\nDESTIN_SZTSSZ03       1.9647347  0.0092388   212.662  < 2e-16 ***\nDESTIN_SZTSSZ04       1.8649836  0.0089976   207.275  < 2e-16 ***\nDESTIN_SZTSSZ05       2.8437058  0.0085738   331.673  < 2e-16 ***\nDESTIN_SZTSSZ06       3.4238870  0.0161304   212.263  < 2e-16 ***\nDESTIN_SZWCSZ01       2.9550693  0.0051690   571.689  < 2e-16 ***\nDESTIN_SZWCSZ02      -0.8214103  0.0129213   -63.570  < 2e-16 ***\nDESTIN_SZWCSZ03      -1.7393427  0.0347472   -50.057  < 2e-16 ***\nDESTIN_SZWDSZ01       1.3424417  0.0039957   335.972  < 2e-16 ***\nDESTIN_SZWDSZ02      -0.2103694  0.0068601   -30.666  < 2e-16 ***\nDESTIN_SZWDSZ03       0.8268551  0.0051363   160.983  < 2e-16 ***\nDESTIN_SZWDSZ04      -0.0643997  0.0079076    -8.144 3.82e-16 ***\nDESTIN_SZWDSZ05       0.0451985  0.0075732     5.968 2.40e-09 ***\nDESTIN_SZWDSZ06       0.6981330  0.0051936   134.423  < 2e-16 ***\nDESTIN_SZWDSZ07      -0.0403233  0.0067749    -5.952 2.65e-09 ***\nDESTIN_SZWDSZ08       0.2850631  0.0069225    41.179  < 2e-16 ***\nDESTIN_SZWDSZ09       1.3016106  0.0050365   258.433  < 2e-16 ***\nDESTIN_SZYSSZ01       0.7598564  0.0044144   172.133  < 2e-16 ***\nDESTIN_SZYSSZ02       0.2648061  0.0058239    45.469  < 2e-16 ***\nDESTIN_SZYSSZ03      -0.0412163  0.0068337    -6.031 1.63e-09 ***\nDESTIN_SZYSSZ04      -0.0561054  0.0060829    -9.223  < 2e-16 ***\nDESTIN_SZYSSZ05      -0.9970159  0.0121827   -81.839  < 2e-16 ***\nDESTIN_SZYSSZ06      -1.3808376  0.0125738  -109.819  < 2e-16 ***\nDESTIN_SZYSSZ07      -0.7128364  0.0165296   -43.125  < 2e-16 ***\nDESTIN_SZYSSZ08       0.9409510  0.0045886   205.064  < 2e-16 ***\nDESTIN_SZYSSZ09       0.3738436  0.0047971    77.930  < 2e-16 ***\nlog(ORIGIN_AGE25_64)  0.1928847  0.0001667  1157.214  < 2e-16 ***\nlog(dist)            -1.7828141  0.0004794 -3718.501  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 36117615  on 14273  degrees of freedom\nResidual deviance: 12319763  on 13992  degrees of freedom\nAIC: 12404881\n\nNumber of Fisher Scoring iterations: 7\n\n\nWe can examine how the constraints hold for destinations this time.\n\nCalcRSquared(decSIM$data$TRIPS, decSIM$fitted.values)\n\n[1] 0.496166\n\n\n\n\n2.8 Doubly constrained\nIn this section, we will fit a doubly constrained SIM by using the code chunk below.\nThe general formula of Doubly Constrained Spatial Interaction Model\n\n\ndbcSIM <- glm(formula = TRIPS ~ \n                ORIGIN_SZ + \n                DESTIN_SZ + \n                log(dist),\n              family = poisson(link = \"log\"),\n              data = SIM_data,\n              na.action = na.exclude)\nsummary(dbcSIM)\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_SZ + DESTIN_SZ + log(dist), family = poisson(link = \"log\"), \n    data = SIM_data, na.action = na.exclude)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-159.373   -12.413    -4.694     2.892   270.252  \n\nCoefficients:\n                  Estimate Std. Error   z value Pr(>|z|)    \n(Intercept)     21.9587595  0.0066831  3285.715  < 2e-16 ***\nORIGIN_SZAMSZ02  0.4778050  0.0054127    88.275  < 2e-16 ***\nORIGIN_SZAMSZ03  0.2895973  0.0055517    52.163  < 2e-16 ***\nORIGIN_SZAMSZ04 -0.2628080  0.0060720   -43.282  < 2e-16 ***\nORIGIN_SZAMSZ05 -0.2631404  0.0069008   -38.132  < 2e-16 ***\nORIGIN_SZAMSZ06  0.1722337  0.0062028    27.767  < 2e-16 ***\nORIGIN_SZAMSZ07 -0.9883200  0.0111224   -88.859  < 2e-16 ***\nORIGIN_SZAMSZ08 -0.4052821  0.0104095   -38.934  < 2e-16 ***\nORIGIN_SZAMSZ09  0.0356290  0.0064816     5.497 3.86e-08 ***\nORIGIN_SZAMSZ10  0.4815569  0.0055521    86.735  < 2e-16 ***\nORIGIN_SZAMSZ11 -1.4440079  0.0146079   -98.851  < 2e-16 ***\nORIGIN_SZAMSZ12 -1.7862677  0.0128071  -139.475  < 2e-16 ***\nORIGIN_SZBDSZ01  0.8653749  0.0054381   159.132  < 2e-16 ***\nORIGIN_SZBDSZ02  0.0841000  0.0062834    13.385  < 2e-16 ***\nORIGIN_SZBDSZ03  0.3158343  0.0057510    54.918  < 2e-16 ***\nORIGIN_SZBDSZ04  1.4556701  0.0049986   291.215  < 2e-16 ***\nORIGIN_SZBDSZ05  0.6363125  0.0057193   111.257  < 2e-16 ***\nORIGIN_SZBDSZ06  0.6749341  0.0058650   115.078  < 2e-16 ***\nORIGIN_SZBDSZ07 -1.2176407  0.0113698  -107.095  < 2e-16 ***\nORIGIN_SZBDSZ08 -0.9803580  0.0105604   -92.833  < 2e-16 ***\nORIGIN_SZBKSZ01 -0.2919642  0.0080763   -36.151  < 2e-16 ***\nORIGIN_SZBKSZ02  0.4609570  0.0067997    67.791  < 2e-16 ***\nORIGIN_SZBKSZ03  0.6273448  0.0065989    95.068  < 2e-16 ***\nORIGIN_SZBKSZ04 -0.2499063  0.0076555   -32.644  < 2e-16 ***\nORIGIN_SZBKSZ05 -0.2628428  0.0078905   -33.311  < 2e-16 ***\nORIGIN_SZBKSZ06 -0.2174034  0.0075134   -28.936  < 2e-16 ***\nORIGIN_SZBKSZ07  0.7094093  0.0058574   121.114  < 2e-16 ***\nORIGIN_SZBKSZ08 -0.1614362  0.0067626   -23.872  < 2e-16 ***\nORIGIN_SZBKSZ09 -0.2739085  0.0072969   -37.537  < 2e-16 ***\nORIGIN_SZBLSZ01 -2.4281074  0.0181172  -134.022  < 2e-16 ***\nORIGIN_SZBLSZ02 -2.7305447  0.0219341  -124.489  < 2e-16 ***\nORIGIN_SZBLSZ03 -3.3071431  0.0540398   -61.198  < 2e-16 ***\nORIGIN_SZBLSZ04 -2.4550671  0.0263946   -93.014  < 2e-16 ***\nORIGIN_SZBMSZ01  0.1198976  0.0065964    18.176  < 2e-16 ***\nORIGIN_SZBMSZ02 -1.3908667  0.0083230  -167.112  < 2e-16 ***\nORIGIN_SZBMSZ03 -0.6999122  0.0069754  -100.339  < 2e-16 ***\nORIGIN_SZBMSZ04 -0.2691159  0.0066184   -40.662  < 2e-16 ***\nORIGIN_SZBMSZ05 -2.6163780  0.0190989  -136.991  < 2e-16 ***\nORIGIN_SZBMSZ06 -2.9729956  0.0197182  -150.774  < 2e-16 ***\nORIGIN_SZBMSZ07 -0.7309916  0.0072407  -100.956  < 2e-16 ***\nORIGIN_SZBMSZ08 -1.0019514  0.0073169  -136.936  < 2e-16 ***\nORIGIN_SZBMSZ09 -1.3667460  0.0105325  -129.764  < 2e-16 ***\nORIGIN_SZBMSZ10 -1.6907268  0.0106687  -158.476  < 2e-16 ***\nORIGIN_SZBMSZ11 -1.2288802  0.0082919  -148.202  < 2e-16 ***\nORIGIN_SZBMSZ12 -1.6517767  0.0115101  -143.507  < 2e-16 ***\nORIGIN_SZBMSZ13 -0.7251351  0.0075289   -96.314  < 2e-16 ***\nORIGIN_SZBMSZ14 -1.1534912  0.0082629  -139.599  < 2e-16 ***\nORIGIN_SZBMSZ15 -0.5476774  0.0075710   -72.339  < 2e-16 ***\nORIGIN_SZBMSZ16 -1.5195034  0.0111459  -136.329  < 2e-16 ***\nORIGIN_SZBMSZ17 -1.6026767  0.0184419   -86.904  < 2e-16 ***\nORIGIN_SZBPSZ01  0.5571291  0.0071866    77.523  < 2e-16 ***\nORIGIN_SZBPSZ02  0.0523197  0.0082259     6.360 2.01e-10 ***\nORIGIN_SZBPSZ03  0.2942047  0.0080482    36.555  < 2e-16 ***\nORIGIN_SZBPSZ04  0.6246296  0.0065878    94.816  < 2e-16 ***\nORIGIN_SZBPSZ05  0.8663708  0.0060852   142.372  < 2e-16 ***\nORIGIN_SZBPSZ06 -0.9896182  0.0109551   -90.334  < 2e-16 ***\nORIGIN_SZBPSZ07 -0.5219250  0.0101830   -51.255  < 2e-16 ***\nORIGIN_SZBSSZ01  0.3299588  0.0066440    49.663  < 2e-16 ***\nORIGIN_SZBSSZ02  0.2851357  0.0057077    49.956  < 2e-16 ***\nORIGIN_SZBSSZ03 -0.2084740  0.0063364   -32.901  < 2e-16 ***\nORIGIN_SZBTSZ01  0.1425664  0.0071103    20.051  < 2e-16 ***\nORIGIN_SZBTSZ02 -0.5591999  0.0093616   -59.733  < 2e-16 ***\nORIGIN_SZBTSZ03 -0.3648190  0.0081677   -44.666  < 2e-16 ***\nORIGIN_SZBTSZ04 -1.4555078  0.0120138  -121.152  < 2e-16 ***\nORIGIN_SZBTSZ05 -0.8635510  0.0133848   -64.517  < 2e-16 ***\nORIGIN_SZBTSZ06 -1.1383111  0.0106421  -106.963  < 2e-16 ***\nORIGIN_SZBTSZ07 -2.3477669  0.0160858  -145.953  < 2e-16 ***\nORIGIN_SZBTSZ08 -1.2918779  0.0124862  -103.464  < 2e-16 ***\nORIGIN_SZCBSZ01 -3.3713588  0.0578683   -58.259  < 2e-16 ***\nORIGIN_SZCCSZ01 -0.6029242  0.0153385   -39.308  < 2e-16 ***\nORIGIN_SZCHSZ01 -0.7641380  0.0135100   -56.561  < 2e-16 ***\nORIGIN_SZCHSZ02 -0.8400736  0.0101951   -82.400  < 2e-16 ***\nORIGIN_SZCHSZ03  1.2753127  0.0072576   175.720  < 2e-16 ***\nORIGIN_SZCKSZ01  0.2470943  0.0067135    36.806  < 2e-16 ***\nORIGIN_SZCKSZ02  0.5793581  0.0070498    82.181  < 2e-16 ***\nORIGIN_SZCKSZ03  1.0795767  0.0060642   178.025  < 2e-16 ***\nORIGIN_SZCKSZ04  1.4947920  0.0063122   236.808  < 2e-16 ***\nORIGIN_SZCKSZ05  0.7457580  0.0074071   100.681  < 2e-16 ***\nORIGIN_SZCKSZ06  0.5760952  0.0094861    60.730  < 2e-16 ***\nORIGIN_SZCLSZ01 -0.9061335  0.0098617   -91.884  < 2e-16 ***\nORIGIN_SZCLSZ02 -1.7609479  0.0156124  -112.791  < 2e-16 ***\nORIGIN_SZCLSZ03 -1.0081325  0.0095171  -105.929  < 2e-16 ***\nORIGIN_SZCLSZ04  0.6181200  0.0057953   106.659  < 2e-16 ***\nORIGIN_SZCLSZ05 -2.0462335  0.0168934  -121.127  < 2e-16 ***\nORIGIN_SZCLSZ06  0.7902389  0.0055680   141.924  < 2e-16 ***\nORIGIN_SZCLSZ07 -0.5472929  0.0071001   -77.082  < 2e-16 ***\nORIGIN_SZCLSZ08 -0.2197650  0.0077460   -28.372  < 2e-16 ***\nORIGIN_SZCLSZ09 -1.8175782  0.0195989   -92.739  < 2e-16 ***\nORIGIN_SZDTSZ02 -3.7618796  0.0872098   -43.136  < 2e-16 ***\nORIGIN_SZDTSZ03 -3.4514766  0.0840812   -41.049  < 2e-16 ***\nORIGIN_SZDTSZ13 -3.0627578  0.0352485   -86.891  < 2e-16 ***\nORIGIN_SZGLSZ01 -1.8055929  0.0111938  -161.303  < 2e-16 ***\nORIGIN_SZGLSZ02 -0.1588829  0.0061413   -25.871  < 2e-16 ***\nORIGIN_SZGLSZ03 -0.2508524  0.0064276   -39.027  < 2e-16 ***\nORIGIN_SZGLSZ04  0.8819358  0.0051993   169.627  < 2e-16 ***\nORIGIN_SZGLSZ05  0.6062778  0.0053735   112.828  < 2e-16 ***\nORIGIN_SZHGSZ01  0.3841503  0.0056776    67.660  < 2e-16 ***\nORIGIN_SZHGSZ02  0.3962330  0.0057579    68.815  < 2e-16 ***\nORIGIN_SZHGSZ03  0.2159531  0.0061671    35.017  < 2e-16 ***\nORIGIN_SZHGSZ04  0.7831941  0.0052216   149.992  < 2e-16 ***\nORIGIN_SZHGSZ05  1.1741558  0.0051799   226.677  < 2e-16 ***\nORIGIN_SZHGSZ06 -0.1891403  0.0065556   -28.852  < 2e-16 ***\nORIGIN_SZHGSZ07  0.3105421  0.0057186    54.304  < 2e-16 ***\nORIGIN_SZHGSZ08 -0.0766364  0.0063474   -12.074  < 2e-16 ***\nORIGIN_SZHGSZ09 -1.2211107  0.0101434  -120.384  < 2e-16 ***\nORIGIN_SZHGSZ10 -3.4844709  0.0504793   -69.028  < 2e-16 ***\nORIGIN_SZJESZ01  0.4916496  0.0063444    77.493  < 2e-16 ***\nORIGIN_SZJESZ02  0.1343893  0.0063762    21.077  < 2e-16 ***\nORIGIN_SZJESZ03 -0.2761723  0.0068085   -40.563  < 2e-16 ***\nORIGIN_SZJESZ04 -1.5932744  0.0121402  -131.240  < 2e-16 ***\nORIGIN_SZJESZ05 -2.3041311  0.0160245  -143.788  < 2e-16 ***\nORIGIN_SZJESZ06  0.2811076  0.0062495    44.981  < 2e-16 ***\nORIGIN_SZJESZ07 -1.9413956  0.0136276  -142.461  < 2e-16 ***\nORIGIN_SZJESZ08 -1.3315645  0.0143168   -93.007  < 2e-16 ***\nORIGIN_SZJESZ09  0.4418314  0.0069208    63.841  < 2e-16 ***\nORIGIN_SZJESZ10 -1.5551555  0.0236523   -65.751  < 2e-16 ***\nORIGIN_SZJESZ11 -1.8888230  0.0224630   -84.086  < 2e-16 ***\nORIGIN_SZJWSZ01  0.2564586  0.0084699    30.279  < 2e-16 ***\nORIGIN_SZJWSZ02  0.6899398  0.0061751   111.729  < 2e-16 ***\nORIGIN_SZJWSZ03  1.4761229  0.0057392   257.198  < 2e-16 ***\nORIGIN_SZJWSZ04  0.5701272  0.0065749    86.713  < 2e-16 ***\nORIGIN_SZJWSZ05 -2.1253657  0.0150769  -140.968  < 2e-16 ***\nORIGIN_SZJWSZ06 -1.5307265  0.0131906  -116.047  < 2e-16 ***\nORIGIN_SZJWSZ07 -2.8801618  0.0360772   -79.833  < 2e-16 ***\nORIGIN_SZJWSZ08  1.4428820  0.0059638   241.938  < 2e-16 ***\nORIGIN_SZJWSZ09  1.8968475  0.0055649   340.860  < 2e-16 ***\nORIGIN_SZKLSZ01  0.1116580  0.0059844    18.658  < 2e-16 ***\nORIGIN_SZKLSZ02 -0.9618787  0.0077344  -124.364  < 2e-16 ***\nORIGIN_SZKLSZ03 -0.7070626  0.0070275  -100.613  < 2e-16 ***\nORIGIN_SZKLSZ04 -2.2742765  0.0139991  -162.459  < 2e-16 ***\nORIGIN_SZKLSZ05 -1.1907262  0.0123719   -96.244  < 2e-16 ***\nORIGIN_SZKLSZ06 -5.9774897  0.1857994   -32.172  < 2e-16 ***\nORIGIN_SZKLSZ07 -1.4258369  0.0103083  -138.320  < 2e-16 ***\nORIGIN_SZKLSZ08 -1.7625888  0.0116107  -151.808  < 2e-16 ***\nORIGIN_SZLKSZ01 -2.0541388  0.0448216   -45.829  < 2e-16 ***\nORIGIN_SZMDSZ01 -0.8571117  0.0321054   -26.697  < 2e-16 ***\nORIGIN_SZMDSZ02 -0.6034597  0.0120724   -49.987  < 2e-16 ***\nORIGIN_SZMDSZ03 -2.1681163  0.0201078  -107.825  < 2e-16 ***\nORIGIN_SZMPSZ01 -0.9331562  0.0096218   -96.984  < 2e-16 ***\nORIGIN_SZMPSZ02 -1.0268229  0.0081379  -126.178  < 2e-16 ***\nORIGIN_SZMPSZ03  0.0054001  0.0066875     0.807 0.419385    \nORIGIN_SZMUSZ02 -3.6269863  0.1105492   -32.809  < 2e-16 ***\nORIGIN_SZNTSZ01 -3.0593717  0.0399843   -76.514  < 2e-16 ***\nORIGIN_SZNTSZ02 -3.3331415  0.0251754  -132.397  < 2e-16 ***\nORIGIN_SZNTSZ03 -0.8351522  0.0090372   -92.413  < 2e-16 ***\nORIGIN_SZNTSZ05 -4.2082472  0.0583343   -72.140  < 2e-16 ***\nORIGIN_SZNTSZ06 -3.8549296  0.0593793   -64.920  < 2e-16 ***\nORIGIN_SZNVSZ01  0.2789069  0.0056024    49.784  < 2e-16 ***\nORIGIN_SZNVSZ02 -0.6036857  0.0077126   -78.273  < 2e-16 ***\nORIGIN_SZNVSZ03 -1.0072683  0.0092678  -108.685  < 2e-16 ***\nORIGIN_SZNVSZ04 -0.8723996  0.0101399   -86.037  < 2e-16 ***\nORIGIN_SZNVSZ05 -2.1552928  0.0183064  -117.734  < 2e-16 ***\nORIGIN_SZPGSZ01  0.0520607  0.0157846     3.298 0.000973 ***\nORIGIN_SZPGSZ02 -0.3481687  0.0089328   -38.976  < 2e-16 ***\nORIGIN_SZPGSZ03  0.9095292  0.0058835   154.590  < 2e-16 ***\nORIGIN_SZPGSZ04  1.3653717  0.0054727   249.489  < 2e-16 ***\nORIGIN_SZPGSZ05  0.3762720  0.0073841    50.957  < 2e-16 ***\nORIGIN_SZPLSZ01 -0.9142754  0.0136552   -66.954  < 2e-16 ***\nORIGIN_SZPLSZ02 -1.0987582  0.0175891   -62.468  < 2e-16 ***\nORIGIN_SZPLSZ03 -2.3427113  0.0474176   -49.406  < 2e-16 ***\nORIGIN_SZPLSZ04 -2.9140779  0.0374458   -77.821  < 2e-16 ***\nORIGIN_SZPLSZ05 -2.2381965  0.0261572   -85.567  < 2e-16 ***\nORIGIN_SZPNSZ01  0.9659006  0.0075177   128.484  < 2e-16 ***\nORIGIN_SZPNSZ02 -0.0158348  0.0143869    -1.101 0.271053    \nORIGIN_SZPNSZ03 -2.1837321  0.0224396   -97.316  < 2e-16 ***\nORIGIN_SZPNSZ04 -3.2481509  0.0370762   -87.608  < 2e-16 ***\nORIGIN_SZPNSZ05 -2.0450679  0.0328165   -62.318  < 2e-16 ***\nORIGIN_SZPRSZ01 -0.6701245  0.0141567   -47.336  < 2e-16 ***\nORIGIN_SZPRSZ02  0.7931907  0.0058079   136.570  < 2e-16 ***\nORIGIN_SZPRSZ03  0.4249094  0.0058610    72.498  < 2e-16 ***\nORIGIN_SZPRSZ04 -0.8529967  0.0090997   -93.739  < 2e-16 ***\nORIGIN_SZPRSZ05  0.7865479  0.0055282   142.278  < 2e-16 ***\nORIGIN_SZPRSZ06 -1.3303664  0.0134512   -98.903  < 2e-16 ***\nORIGIN_SZPRSZ07 -3.0458370  0.0181514  -167.802  < 2e-16 ***\nORIGIN_SZPRSZ08 -0.5342399  0.0075966   -70.327  < 2e-16 ***\nORIGIN_SZQTSZ01 -0.2548930  0.0086485   -29.473  < 2e-16 ***\nORIGIN_SZQTSZ02 -0.8662439  0.0076549  -113.162  < 2e-16 ***\nORIGIN_SZQTSZ03 -0.0890168  0.0072455   -12.286  < 2e-16 ***\nORIGIN_SZQTSZ04 -1.4634370  0.0089384  -163.724  < 2e-16 ***\nORIGIN_SZQTSZ05 -0.6535669  0.0077612   -84.210  < 2e-16 ***\nORIGIN_SZQTSZ06 -0.8275765  0.0081835  -101.128  < 2e-16 ***\nORIGIN_SZQTSZ07 -1.5369800  0.0112808  -136.248  < 2e-16 ***\nORIGIN_SZQTSZ08 -0.4437979  0.0075302   -58.936  < 2e-16 ***\nORIGIN_SZQTSZ09 -0.8184934  0.0083589   -97.918  < 2e-16 ***\nORIGIN_SZQTSZ10 -0.6906597  0.0080980   -85.288  < 2e-16 ***\nORIGIN_SZQTSZ11 -2.3251162  0.0154191  -150.795  < 2e-16 ***\nORIGIN_SZQTSZ12 -3.0442790  0.0208985  -145.670  < 2e-16 ***\nORIGIN_SZQTSZ13 -0.7241013  0.0093441   -77.493  < 2e-16 ***\nORIGIN_SZQTSZ14 -1.8225351  0.0138207  -131.870  < 2e-16 ***\nORIGIN_SZQTSZ15 -0.8720806  0.0138589   -62.926  < 2e-16 ***\nORIGIN_SZRCSZ01 -1.8063415  0.0144295  -125.184  < 2e-16 ***\nORIGIN_SZRCSZ06 -0.5370905  0.0101573   -52.877  < 2e-16 ***\nORIGIN_SZRVSZ01 -2.7426167  0.0341386   -80.338  < 2e-16 ***\nORIGIN_SZRVSZ02 -3.0827269  0.0302299  -101.976  < 2e-16 ***\nORIGIN_SZRVSZ03 -2.9133853  0.0262543  -110.968  < 2e-16 ***\nORIGIN_SZRVSZ04 -3.4220022  0.0582209   -58.776  < 2e-16 ***\nORIGIN_SZRVSZ05 -2.6206257  0.0197470  -132.710  < 2e-16 ***\nORIGIN_SZSBSZ01  0.1010337  0.0085117    11.870  < 2e-16 ***\nORIGIN_SZSBSZ02 -0.8810456  0.0098244   -89.680  < 2e-16 ***\nORIGIN_SZSBSZ03  0.8303668  0.0063009   131.785  < 2e-16 ***\nORIGIN_SZSBSZ04  0.3489128  0.0071456    48.829  < 2e-16 ***\nORIGIN_SZSBSZ05 -0.3182914  0.0085560   -37.201  < 2e-16 ***\nORIGIN_SZSBSZ06 -0.9074308  0.0200035   -45.364  < 2e-16 ***\nORIGIN_SZSBSZ07 -0.2217124  0.0167188   -13.261  < 2e-16 ***\nORIGIN_SZSBSZ08 -1.3007367  0.0178771   -72.760  < 2e-16 ***\nORIGIN_SZSBSZ09 -0.9813703  0.0107885   -90.965  < 2e-16 ***\nORIGIN_SZSESZ02  1.1283424  0.0054209   208.146  < 2e-16 ***\nORIGIN_SZSESZ03  1.2389996  0.0051926   238.610  < 2e-16 ***\nORIGIN_SZSESZ04  0.7535119  0.0060371   124.814  < 2e-16 ***\nORIGIN_SZSESZ05 -0.2347978  0.0071482   -32.847  < 2e-16 ***\nORIGIN_SZSESZ06  0.9520620  0.0057572   165.368  < 2e-16 ***\nORIGIN_SZSESZ07 -2.4296685  0.0231677  -104.873  < 2e-16 ***\nORIGIN_SZSGSZ01 -0.6995899  0.0099969   -69.980  < 2e-16 ***\nORIGIN_SZSGSZ02 -1.2602157  0.0111471  -113.053  < 2e-16 ***\nORIGIN_SZSGSZ03  0.0725860  0.0061970    11.713  < 2e-16 ***\nORIGIN_SZSGSZ04  0.2738315  0.0057524    47.603  < 2e-16 ***\nORIGIN_SZSGSZ05 -2.0207710  0.0119838  -168.625  < 2e-16 ***\nORIGIN_SZSGSZ06  0.4885608  0.0054646    89.404  < 2e-16 ***\nORIGIN_SZSGSZ07 -0.8892155  0.0075074  -118.445  < 2e-16 ***\nORIGIN_SZSKSZ01 -0.3682754  0.0108025   -34.092  < 2e-16 ***\nORIGIN_SZSKSZ02  1.1826086  0.0071388   165.659  < 2e-16 ***\nORIGIN_SZSKSZ03 -0.3230177  0.0101683   -31.767  < 2e-16 ***\nORIGIN_SZSKSZ04 -1.8504236  0.0362400   -51.060  < 2e-16 ***\nORIGIN_SZSKSZ05 -0.2759035  0.0185157   -14.901  < 2e-16 ***\nORIGIN_SZSLSZ01 -2.2757902  0.0348766   -65.253  < 2e-16 ***\nORIGIN_SZSLSZ04 -0.0899820  0.0090356    -9.959  < 2e-16 ***\nORIGIN_SZSRSZ01 -2.1460151  0.0187871  -114.228  < 2e-16 ***\nORIGIN_SZTHSZ01 -2.6851549  0.0571841   -46.956  < 2e-16 ***\nORIGIN_SZTHSZ03 -1.0121495  0.0275551   -36.732  < 2e-16 ***\nORIGIN_SZTHSZ04 -2.6129645  0.0345167   -75.701  < 2e-16 ***\nORIGIN_SZTHSZ06 -1.7229100  0.0208134   -82.779  < 2e-16 ***\nORIGIN_SZTMSZ01 -0.2254986  0.0070312   -32.071  < 2e-16 ***\nORIGIN_SZTMSZ02  1.7271575  0.0049219   350.914  < 2e-16 ***\nORIGIN_SZTMSZ03  0.9891319  0.0052266   189.250  < 2e-16 ***\nORIGIN_SZTMSZ04  0.2018090  0.0062114    32.490  < 2e-16 ***\nORIGIN_SZTMSZ05 -1.1882870  0.0125842   -94.427  < 2e-16 ***\nORIGIN_SZTNSZ01 -1.6122620  0.0141911  -113.611  < 2e-16 ***\nORIGIN_SZTNSZ02 -1.5630967  0.0112227  -139.280  < 2e-16 ***\nORIGIN_SZTNSZ03 -2.0739538  0.0149298  -138.914  < 2e-16 ***\nORIGIN_SZTNSZ04 -0.2816960  0.0085295   -33.026  < 2e-16 ***\nORIGIN_SZTPSZ01 -0.7822239  0.0077901  -100.412  < 2e-16 ***\nORIGIN_SZTPSZ02  0.5735478  0.0053042   108.131  < 2e-16 ***\nORIGIN_SZTPSZ03 -0.8748650  0.0074202  -117.903  < 2e-16 ***\nORIGIN_SZTPSZ04 -0.8537831  0.0069792  -122.332  < 2e-16 ***\nORIGIN_SZTPSZ05 -0.5581114  0.0077012   -72.471  < 2e-16 ***\nORIGIN_SZTPSZ06  0.0262001  0.0075241     3.482 0.000497 ***\nORIGIN_SZTPSZ07 -0.5969952  0.0074272   -80.380  < 2e-16 ***\nORIGIN_SZTPSZ08 -1.0537959  0.0111297   -94.683  < 2e-16 ***\nORIGIN_SZTPSZ09 -0.9588508  0.0081314  -117.920  < 2e-16 ***\nORIGIN_SZTPSZ10 -1.1177249  0.0089403  -125.021  < 2e-16 ***\nORIGIN_SZTPSZ11 -0.2799677  0.0067135   -41.702  < 2e-16 ***\nORIGIN_SZTPSZ12 -0.8898871  0.0080215  -110.938  < 2e-16 ***\nORIGIN_SZTSSZ01 -2.6146463  0.0521606   -50.127  < 2e-16 ***\nORIGIN_SZTSSZ02  0.1682588  0.0119965    14.026  < 2e-16 ***\nORIGIN_SZTSSZ03  0.2587653  0.0123809    20.900  < 2e-16 ***\nORIGIN_SZTSSZ04 -0.5473825  0.0135215   -40.482  < 2e-16 ***\nORIGIN_SZTSSZ05 -0.9967379  0.0206068   -48.369  < 2e-16 ***\nORIGIN_SZTSSZ06  0.4933147  0.0229597    21.486  < 2e-16 ***\nORIGIN_SZWCSZ01  1.2524706  0.0111133   112.700  < 2e-16 ***\nORIGIN_SZWCSZ02 -2.8544820  0.0347805   -82.071  < 2e-16 ***\nORIGIN_SZWCSZ03 -5.1277334  0.1475585   -34.751  < 2e-16 ***\nORIGIN_SZWDSZ01  1.4725308  0.0056496   260.645  < 2e-16 ***\nORIGIN_SZWDSZ02  0.1571680  0.0064909    24.214  < 2e-16 ***\nORIGIN_SZWDSZ03  1.2584097  0.0061471   204.717  < 2e-16 ***\nORIGIN_SZWDSZ04  0.8578765  0.0069277   123.833  < 2e-16 ***\nORIGIN_SZWDSZ05  0.1702728  0.0069687    24.434  < 2e-16 ***\nORIGIN_SZWDSZ06  0.1736910  0.0069507    24.989  < 2e-16 ***\nORIGIN_SZWDSZ07 -1.5610176  0.0100803  -154.859  < 2e-16 ***\nORIGIN_SZWDSZ08 -0.9490906  0.0102047   -93.005  < 2e-16 ***\nORIGIN_SZWDSZ09  1.2107011  0.0062294   194.354  < 2e-16 ***\nORIGIN_SZYSSZ01 -0.3324158  0.0074537   -44.598  < 2e-16 ***\nORIGIN_SZYSSZ02  0.8177113  0.0066108   123.693  < 2e-16 ***\nORIGIN_SZYSSZ03  1.6751777  0.0058470   286.503  < 2e-16 ***\nORIGIN_SZYSSZ04  0.8130044  0.0059025   137.738  < 2e-16 ***\nORIGIN_SZYSSZ05  0.3678420  0.0072431    50.785  < 2e-16 ***\nORIGIN_SZYSSZ06 -0.6024384  0.0126722   -47.540  < 2e-16 ***\nORIGIN_SZYSSZ07 -0.7631918  0.0158478   -48.157  < 2e-16 ***\nORIGIN_SZYSSZ08  0.2141930  0.0076154    28.126  < 2e-16 ***\nORIGIN_SZYSSZ09  1.0809368  0.0057973   186.457  < 2e-16 ***\nDESTIN_SZAMSZ02  0.0761304  0.0051207    14.867  < 2e-16 ***\nDESTIN_SZAMSZ03  0.0143394  0.0050755     2.825 0.004724 ** \nDESTIN_SZAMSZ04 -1.2516780  0.0074947  -167.008  < 2e-16 ***\nDESTIN_SZAMSZ05 -1.2312375  0.0076598  -160.741  < 2e-16 ***\nDESTIN_SZAMSZ06 -1.0333412  0.0075283  -137.261  < 2e-16 ***\nDESTIN_SZAMSZ07 -1.5338249  0.0110036  -139.392  < 2e-16 ***\nDESTIN_SZAMSZ08 -0.3751665  0.0075358   -49.784  < 2e-16 ***\nDESTIN_SZAMSZ09 -1.1633493  0.0077556  -150.001  < 2e-16 ***\nDESTIN_SZAMSZ10  0.1017717  0.0053151    19.148  < 2e-16 ***\nDESTIN_SZAMSZ11 -0.8840362  0.0097007   -91.131  < 2e-16 ***\nDESTIN_SZAMSZ12  0.1628123  0.0055220    29.484  < 2e-16 ***\nDESTIN_SZBDSZ01  1.0040794  0.0047922   209.523  < 2e-16 ***\nDESTIN_SZBDSZ02 -0.2478149  0.0063085   -39.283  < 2e-16 ***\nDESTIN_SZBDSZ03  0.1016088  0.0057420    17.696  < 2e-16 ***\nDESTIN_SZBDSZ04  1.1082928  0.0047747   232.116  < 2e-16 ***\nDESTIN_SZBDSZ05  0.8737933  0.0050593   172.712  < 2e-16 ***\nDESTIN_SZBDSZ06  0.2897032  0.0058244    49.740  < 2e-16 ***\nDESTIN_SZBDSZ07 -0.9026193  0.0113656   -79.416  < 2e-16 ***\nDESTIN_SZBDSZ08 -1.7063577  0.0131234  -130.024  < 2e-16 ***\nDESTIN_SZBKSZ01 -1.3892839  0.0083307  -166.767  < 2e-16 ***\nDESTIN_SZBKSZ02 -0.6661120  0.0073464   -90.672  < 2e-16 ***\nDESTIN_SZBKSZ03 -0.9536826  0.0073196  -130.292  < 2e-16 ***\nDESTIN_SZBKSZ04 -0.6655610  0.0065868  -101.044  < 2e-16 ***\nDESTIN_SZBKSZ05 -0.9053119  0.0079264  -114.215  < 2e-16 ***\nDESTIN_SZBKSZ06 -1.2622159  0.0075079  -168.119  < 2e-16 ***\nDESTIN_SZBKSZ07 -0.0423370  0.0056686    -7.469 8.10e-14 ***\nDESTIN_SZBKSZ08 -1.3811240  0.0084985  -162.515  < 2e-16 ***\nDESTIN_SZBKSZ09 -0.0797012  0.0061428   -12.975  < 2e-16 ***\nDESTIN_SZBLSZ01 -0.8859670  0.0088108  -100.555  < 2e-16 ***\nDESTIN_SZBLSZ02  0.1362723  0.0082167    16.585  < 2e-16 ***\nDESTIN_SZBLSZ03  1.2037396  0.0093508   128.732  < 2e-16 ***\nDESTIN_SZBLSZ04 -0.9316219  0.0178080   -52.315  < 2e-16 ***\nDESTIN_SZBMSZ01  0.7188470  0.0061160   117.536  < 2e-16 ***\nDESTIN_SZBMSZ02 -0.0597895  0.0061206    -9.769  < 2e-16 ***\nDESTIN_SZBMSZ03 -0.2427075  0.0069937   -34.704  < 2e-16 ***\nDESTIN_SZBMSZ04 -0.0622494  0.0065569    -9.494  < 2e-16 ***\nDESTIN_SZBMSZ05 -0.2857019  0.0086450   -33.048  < 2e-16 ***\nDESTIN_SZBMSZ06 -1.3486558  0.0158904   -84.872  < 2e-16 ***\nDESTIN_SZBMSZ07  0.4549687  0.0058315    78.020  < 2e-16 ***\nDESTIN_SZBMSZ08 -0.8730268  0.0077814  -112.195  < 2e-16 ***\nDESTIN_SZBMSZ09 -2.0319890  0.0163038  -124.633  < 2e-16 ***\nDESTIN_SZBMSZ10 -1.4319101  0.0102616  -139.541  < 2e-16 ***\nDESTIN_SZBMSZ11 -1.2429176  0.0092250  -134.733  < 2e-16 ***\nDESTIN_SZBMSZ12 -0.8526549  0.0096009   -88.810  < 2e-16 ***\nDESTIN_SZBMSZ13  0.1399907  0.0066885    20.930  < 2e-16 ***\nDESTIN_SZBMSZ14 -1.0103155  0.0091377  -110.566  < 2e-16 ***\nDESTIN_SZBMSZ15 -0.6819769  0.0086179   -79.135  < 2e-16 ***\nDESTIN_SZBMSZ16 -1.4468308  0.0134051  -107.931  < 2e-16 ***\nDESTIN_SZBMSZ17 -1.5312175  0.0186843   -81.952  < 2e-16 ***\nDESTIN_SZBPSZ01 -1.1726725  0.0073257  -160.077  < 2e-16 ***\nDESTIN_SZBPSZ02 -2.1072012  0.0103320  -203.949  < 2e-16 ***\nDESTIN_SZBPSZ03 -1.6944911  0.0098520  -171.995  < 2e-16 ***\nDESTIN_SZBPSZ04 -0.7664610  0.0074458  -102.939  < 2e-16 ***\nDESTIN_SZBPSZ05  0.1358370  0.0056258    24.145  < 2e-16 ***\nDESTIN_SZBPSZ06 -1.2425471  0.0096942  -128.175  < 2e-16 ***\nDESTIN_SZBPSZ07 -0.1666192  0.0094969   -17.545  < 2e-16 ***\nDESTIN_SZBSSZ01  0.3857894  0.0057261    67.374  < 2e-16 ***\nDESTIN_SZBSSZ02 -0.5293265  0.0064886   -81.578  < 2e-16 ***\nDESTIN_SZBSSZ03  0.3909966  0.0048540    80.551  < 2e-16 ***\nDESTIN_SZBTSZ01  0.7114965  0.0054528   130.482  < 2e-16 ***\nDESTIN_SZBTSZ02 -0.0487084  0.0082474    -5.906 3.51e-09 ***\nDESTIN_SZBTSZ03  0.5539032  0.0064423    85.979  < 2e-16 ***\nDESTIN_SZBTSZ04 -0.7120734  0.0128676   -55.339  < 2e-16 ***\nDESTIN_SZBTSZ05  0.2176097  0.0086791    25.073  < 2e-16 ***\nDESTIN_SZBTSZ06 -0.2167084  0.0084925   -25.518  < 2e-16 ***\nDESTIN_SZBTSZ07 -1.4045618  0.0124363  -112.940  < 2e-16 ***\nDESTIN_SZBTSZ08 -0.8213918  0.0120793   -68.000  < 2e-16 ***\nDESTIN_SZCBSZ01 -5.7340877  0.3333916   -17.199  < 2e-16 ***\nDESTIN_SZCCSZ01 -0.0304192  0.0095920    -3.171 0.001518 ** \nDESTIN_SZCHSZ01 -0.2598507  0.0115311   -22.535  < 2e-16 ***\nDESTIN_SZCHSZ02  0.3497750  0.0068334    51.186  < 2e-16 ***\nDESTIN_SZCHSZ03  2.4550172  0.0050883   482.481  < 2e-16 ***\nDESTIN_SZCKSZ01 -0.4691744  0.0063130   -74.319  < 2e-16 ***\nDESTIN_SZCKSZ02 -0.9557084  0.0069331  -137.847  < 2e-16 ***\nDESTIN_SZCKSZ03  0.0442112  0.0057117     7.740 9.91e-15 ***\nDESTIN_SZCKSZ04 -0.8592063  0.0081238  -105.764  < 2e-16 ***\nDESTIN_SZCKSZ05 -1.1745333  0.0087305  -134.532  < 2e-16 ***\nDESTIN_SZCKSZ06 -0.4982877  0.0085514   -58.269  < 2e-16 ***\nDESTIN_SZCLSZ01  0.2665065  0.0059712    44.632  < 2e-16 ***\nDESTIN_SZCLSZ02 -1.9758876  0.0150823  -131.007  < 2e-16 ***\nDESTIN_SZCLSZ03 -0.9051310  0.0091479   -98.944  < 2e-16 ***\nDESTIN_SZCLSZ04 -0.0828732  0.0061559   -13.462  < 2e-16 ***\nDESTIN_SZCLSZ05 -1.1414780  0.0100760  -113.287  < 2e-16 ***\nDESTIN_SZCLSZ06  0.3229402  0.0056269    57.392  < 2e-16 ***\nDESTIN_SZCLSZ07 -0.4833612  0.0069777   -69.272  < 2e-16 ***\nDESTIN_SZCLSZ08 -0.3219670  0.0075615   -42.580  < 2e-16 ***\nDESTIN_SZCLSZ09  0.0564166  0.0080703     6.991 2.74e-12 ***\nDESTIN_SZDTSZ02 -1.6384236  0.0374725   -43.723  < 2e-16 ***\nDESTIN_SZDTSZ03 -0.4021571  0.0152716   -26.334  < 2e-16 ***\nDESTIN_SZDTSZ13 -1.2799441  0.0177095   -72.274  < 2e-16 ***\nDESTIN_SZGLSZ01 -0.0190303  0.0060665    -3.137 0.001707 ** \nDESTIN_SZGLSZ02 -0.0308469  0.0058724    -5.253 1.50e-07 ***\nDESTIN_SZGLSZ03  0.6927638  0.0048456   142.969  < 2e-16 ***\nDESTIN_SZGLSZ04  0.9325848  0.0049183   189.616  < 2e-16 ***\nDESTIN_SZGLSZ05  0.8480056  0.0048801   173.768  < 2e-16 ***\nDESTIN_SZHGSZ01  0.0652969  0.0047795    13.662  < 2e-16 ***\nDESTIN_SZHGSZ02 -0.9498251  0.0066577  -142.667  < 2e-16 ***\nDESTIN_SZHGSZ03 -1.4372499  0.0076387  -188.154  < 2e-16 ***\nDESTIN_SZHGSZ04 -0.5236292  0.0055353   -94.599  < 2e-16 ***\nDESTIN_SZHGSZ05 -0.5420295  0.0058099   -93.295  < 2e-16 ***\nDESTIN_SZHGSZ06 -0.9054730  0.0067581  -133.983  < 2e-16 ***\nDESTIN_SZHGSZ07  0.0215109  0.0054019     3.982 6.83e-05 ***\nDESTIN_SZHGSZ08 -0.0490979  0.0059206    -8.293  < 2e-16 ***\nDESTIN_SZHGSZ09 -0.0711560  0.0062875   -11.317  < 2e-16 ***\nDESTIN_SZHGSZ10 -3.5807154  0.0290642  -123.200  < 2e-16 ***\nDESTIN_SZJESZ01 -0.4023638  0.0065057   -61.848  < 2e-16 ***\nDESTIN_SZJESZ02 -0.7654353  0.0067096  -114.081  < 2e-16 ***\nDESTIN_SZJESZ03 -0.8778812  0.0071238  -123.232  < 2e-16 ***\nDESTIN_SZJESZ04 -1.1998075  0.0088733  -135.215  < 2e-16 ***\nDESTIN_SZJESZ05 -1.5623652  0.0116898  -133.652  < 2e-16 ***\nDESTIN_SZJESZ06  0.2311474  0.0055595    41.577  < 2e-16 ***\nDESTIN_SZJESZ07 -1.2753348  0.0094838  -134.475  < 2e-16 ***\nDESTIN_SZJESZ08 -0.7654533  0.0099306   -77.081  < 2e-16 ***\nDESTIN_SZJESZ09  0.1637628  0.0074164    22.081  < 2e-16 ***\nDESTIN_SZJESZ10  0.7394958  0.0091249    81.041  < 2e-16 ***\nDESTIN_SZJESZ11  0.5157364  0.0086546    59.591  < 2e-16 ***\nDESTIN_SZJWSZ01 -1.0165204  0.0083025  -122.435  < 2e-16 ***\nDESTIN_SZJWSZ02 -0.8530646  0.0067851  -125.727  < 2e-16 ***\nDESTIN_SZJWSZ03  0.5176135  0.0056449    91.695  < 2e-16 ***\nDESTIN_SZJWSZ04  0.3427105  0.0058499    58.584  < 2e-16 ***\nDESTIN_SZJWSZ05 -1.1695940  0.0080069  -146.073  < 2e-16 ***\nDESTIN_SZJWSZ06 -0.7466462  0.0070240  -106.299  < 2e-16 ***\nDESTIN_SZJWSZ07 -3.0124535  0.0333481   -90.334  < 2e-16 ***\nDESTIN_SZJWSZ08 -0.4253502  0.0066584   -63.881  < 2e-16 ***\nDESTIN_SZJWSZ09  0.9428005  0.0053190   177.251  < 2e-16 ***\nDESTIN_SZKLSZ01 -0.2965013  0.0066422   -44.639  < 2e-16 ***\nDESTIN_SZKLSZ02 -0.4921137  0.0067689   -72.702  < 2e-16 ***\nDESTIN_SZKLSZ03 -0.8489213  0.0078294  -108.427  < 2e-16 ***\nDESTIN_SZKLSZ04 -1.2656342  0.0099918  -126.667  < 2e-16 ***\nDESTIN_SZKLSZ05 -0.3570126  0.0096300   -37.073  < 2e-16 ***\nDESTIN_SZKLSZ06 -2.4764906  0.0390868   -63.359  < 2e-16 ***\nDESTIN_SZKLSZ07 -0.7316189  0.0080994   -90.330  < 2e-16 ***\nDESTIN_SZKLSZ08 -0.1115398  0.0061168   -18.235  < 2e-16 ***\nDESTIN_SZLKSZ01 -1.4940710  0.0271518   -55.027  < 2e-16 ***\nDESTIN_SZMDSZ01 -1.6101440  0.0231238   -69.631  < 2e-16 ***\nDESTIN_SZMDSZ02 -0.9339318  0.0126277   -73.959  < 2e-16 ***\nDESTIN_SZMDSZ03 -3.4868547  0.0303657  -114.829  < 2e-16 ***\nDESTIN_SZMPSZ01 -0.4518483  0.0089869   -50.279  < 2e-16 ***\nDESTIN_SZMPSZ02 -0.5868264  0.0073193   -80.176  < 2e-16 ***\nDESTIN_SZMPSZ03  0.4805365  0.0059041    81.391  < 2e-16 ***\nDESTIN_SZMUSZ02 -1.3837581  0.0218713   -63.268  < 2e-16 ***\nDESTIN_SZNTSZ01 -3.0694691  0.0533346   -57.551  < 2e-16 ***\nDESTIN_SZNTSZ02 -1.4992973  0.0130358  -115.014  < 2e-16 ***\nDESTIN_SZNTSZ03 -0.5221236  0.0089923   -58.064  < 2e-16 ***\nDESTIN_SZNTSZ05 -1.9751162  0.0282369   -69.948  < 2e-16 ***\nDESTIN_SZNTSZ06 -3.9959411  0.0511214   -78.166  < 2e-16 ***\nDESTIN_SZNVSZ01 -0.1126966  0.0057077   -19.745  < 2e-16 ***\nDESTIN_SZNVSZ02 -0.0259250  0.0064427    -4.024 5.72e-05 ***\nDESTIN_SZNVSZ03 -0.0123214  0.0067692    -1.820 0.068725 .  \nDESTIN_SZNVSZ04 -1.3371298  0.0130261  -102.650  < 2e-16 ***\nDESTIN_SZNVSZ05 -0.9686333  0.0101539   -95.395  < 2e-16 ***\nDESTIN_SZPGSZ01 -1.1798309  0.0180543   -65.349  < 2e-16 ***\nDESTIN_SZPGSZ02 -1.3289737  0.0085335  -155.736  < 2e-16 ***\nDESTIN_SZPGSZ03 -0.1661373  0.0055166   -30.116  < 2e-16 ***\nDESTIN_SZPGSZ04 -0.3046408  0.0058469   -52.103  < 2e-16 ***\nDESTIN_SZPGSZ05 -1.5412612  0.0093261  -165.264  < 2e-16 ***\nDESTIN_SZPLSZ01 -0.3439667  0.0083504   -41.192  < 2e-16 ***\nDESTIN_SZPLSZ02 -1.7574919  0.0154244  -113.942  < 2e-16 ***\nDESTIN_SZPLSZ03 -0.3455776  0.0112089   -30.831  < 2e-16 ***\nDESTIN_SZPLSZ04 -2.0749385  0.0141153  -146.999  < 2e-16 ***\nDESTIN_SZPLSZ05 -0.4855216  0.0134069   -36.214  < 2e-16 ***\nDESTIN_SZPNSZ01  0.0117816  0.0083558     1.410 0.158543    \nDESTIN_SZPNSZ02  0.7389858  0.0089823    82.272  < 2e-16 ***\nDESTIN_SZPNSZ03 -0.4708719  0.0098588   -47.761  < 2e-16 ***\nDESTIN_SZPNSZ04  1.3156771  0.0111200   118.316  < 2e-16 ***\nDESTIN_SZPNSZ05  0.9881886  0.0153169    64.516  < 2e-16 ***\nDESTIN_SZPRSZ01 -1.0678999  0.0098295  -108.642  < 2e-16 ***\nDESTIN_SZPRSZ02  0.0650279  0.0063927    10.172  < 2e-16 ***\nDESTIN_SZPRSZ03  0.6348138  0.0050147   126.592  < 2e-16 ***\nDESTIN_SZPRSZ04 -0.3640286  0.0097572   -37.309  < 2e-16 ***\nDESTIN_SZPRSZ05  0.0380410  0.0062577     6.079 1.21e-09 ***\nDESTIN_SZPRSZ06  0.3153712  0.0068742    45.877  < 2e-16 ***\nDESTIN_SZPRSZ07 -1.6669973  0.0145573  -114.513  < 2e-16 ***\nDESTIN_SZPRSZ08 -0.6170648  0.0078424   -78.683  < 2e-16 ***\nDESTIN_SZQTSZ01 -0.5496582  0.0098285   -55.925  < 2e-16 ***\nDESTIN_SZQTSZ02 -0.7318114  0.0086807   -84.303  < 2e-16 ***\nDESTIN_SZQTSZ03 -0.5893064  0.0084789   -69.503  < 2e-16 ***\nDESTIN_SZQTSZ04 -0.7103906  0.0085341   -83.242  < 2e-16 ***\nDESTIN_SZQTSZ05 -0.4721472  0.0078164   -60.405  < 2e-16 ***\nDESTIN_SZQTSZ06 -0.6591466  0.0080069   -82.322  < 2e-16 ***\nDESTIN_SZQTSZ07 -0.9540454  0.0126807   -75.236  < 2e-16 ***\nDESTIN_SZQTSZ08  0.4508867  0.0064870    69.507  < 2e-16 ***\nDESTIN_SZQTSZ09 -0.4061810  0.0075485   -53.810  < 2e-16 ***\nDESTIN_SZQTSZ10  0.1351889  0.0068202    19.822  < 2e-16 ***\nDESTIN_SZQTSZ11  0.3181553  0.0067958    46.816  < 2e-16 ***\nDESTIN_SZQTSZ12 -0.1055766  0.0095576   -11.046  < 2e-16 ***\nDESTIN_SZQTSZ13  0.5199663  0.0071928    72.290  < 2e-16 ***\nDESTIN_SZQTSZ14  0.6086332  0.0078537    77.496  < 2e-16 ***\nDESTIN_SZQTSZ15  1.3906866  0.0092250   150.753  < 2e-16 ***\nDESTIN_SZRCSZ01 -0.0862091  0.0085363   -10.099  < 2e-16 ***\nDESTIN_SZRCSZ06 -1.0186282  0.0211113   -48.250  < 2e-16 ***\nDESTIN_SZRVSZ01 -1.5294454  0.0179337   -85.283  < 2e-16 ***\nDESTIN_SZRVSZ02 -2.3607754  0.0355628   -66.383  < 2e-16 ***\nDESTIN_SZRVSZ03 -1.5266254  0.0156276   -97.688  < 2e-16 ***\nDESTIN_SZRVSZ04 -1.0986565  0.0168695   -65.127  < 2e-16 ***\nDESTIN_SZRVSZ05 -2.4004418  0.0320917   -74.799  < 2e-16 ***\nDESTIN_SZSBSZ01 -1.4023966  0.0109496  -128.078  < 2e-16 ***\nDESTIN_SZSBSZ02 -1.3899893  0.0090891  -152.929  < 2e-16 ***\nDESTIN_SZSBSZ03  0.4509008  0.0059864    75.321  < 2e-16 ***\nDESTIN_SZSBSZ04  0.1796309  0.0070142    25.610  < 2e-16 ***\nDESTIN_SZSBSZ05 -1.3159699  0.0096485  -136.391  < 2e-16 ***\nDESTIN_SZSBSZ06 -1.7705263  0.0253064   -69.964  < 2e-16 ***\nDESTIN_SZSBSZ07 -0.7471529  0.0238628   -31.310  < 2e-16 ***\nDESTIN_SZSBSZ08  0.7884520  0.0069638   113.221  < 2e-16 ***\nDESTIN_SZSBSZ09  0.0131702  0.0066350     1.985 0.047150 *  \nDESTIN_SZSESZ02 -0.7247347  0.0060626  -119.541  < 2e-16 ***\nDESTIN_SZSESZ03  0.1032728  0.0048330    21.368  < 2e-16 ***\nDESTIN_SZSESZ04 -1.0992420  0.0068328  -160.878  < 2e-16 ***\nDESTIN_SZSESZ05 -0.8374712  0.0058155  -144.006  < 2e-16 ***\nDESTIN_SZSESZ06 -0.5531619  0.0074766   -73.985  < 2e-16 ***\nDESTIN_SZSESZ07 -3.0328672  0.0246371  -123.101  < 2e-16 ***\nDESTIN_SZSGSZ01 -0.1933777  0.0068235   -28.340  < 2e-16 ***\nDESTIN_SZSGSZ02 -0.3000845  0.0060284   -49.779  < 2e-16 ***\nDESTIN_SZSGSZ03 -0.4322879  0.0057308   -75.433  < 2e-16 ***\nDESTIN_SZSGSZ04 -0.1214792  0.0056548   -21.482  < 2e-16 ***\nDESTIN_SZSGSZ05 -2.0309074  0.0114993  -176.611  < 2e-16 ***\nDESTIN_SZSGSZ06  0.6592095  0.0046364   142.182  < 2e-16 ***\nDESTIN_SZSGSZ07 -0.4618538  0.0062027   -74.460  < 2e-16 ***\nDESTIN_SZSISZ01 -0.5227257  0.0293399   -17.816  < 2e-16 ***\nDESTIN_SZSKSZ01 -0.4797341  0.0091087   -52.668  < 2e-16 ***\nDESTIN_SZSKSZ02  0.8477357  0.0067821   124.996  < 2e-16 ***\nDESTIN_SZSKSZ03 -0.2477566  0.0074817   -33.115  < 2e-16 ***\nDESTIN_SZSKSZ04 -1.3315992  0.0167055   -79.710  < 2e-16 ***\nDESTIN_SZSKSZ05 -0.3519096  0.0131326   -26.797  < 2e-16 ***\nDESTIN_SZSLSZ01 -0.8570431  0.0102100   -83.941  < 2e-16 ***\nDESTIN_SZSLSZ04 -0.9949105  0.0088280  -112.699  < 2e-16 ***\nDESTIN_SZSRSZ01 -1.0260696  0.0154393   -66.458  < 2e-16 ***\nDESTIN_SZTHSZ01 -4.2040410  0.0404795  -103.856  < 2e-16 ***\nDESTIN_SZTHSZ03 -2.4907000  0.0264056   -94.325  < 2e-16 ***\nDESTIN_SZTHSZ04 -3.0701470  0.0244975  -125.325  < 2e-16 ***\nDESTIN_SZTHSZ06 -2.5308161  0.0169699  -149.135  < 2e-16 ***\nDESTIN_SZTMSZ01 -0.2354889  0.0067201   -35.042  < 2e-16 ***\nDESTIN_SZTMSZ02  1.7379292  0.0044573   389.906  < 2e-16 ***\nDESTIN_SZTMSZ03  0.9112458  0.0048718   187.043  < 2e-16 ***\nDESTIN_SZTMSZ04  1.0731075  0.0048626   220.685  < 2e-16 ***\nDESTIN_SZTMSZ05  0.6398583  0.0067321    95.046  < 2e-16 ***\nDESTIN_SZTNSZ01 -0.3500456  0.0083835   -41.754  < 2e-16 ***\nDESTIN_SZTNSZ02 -1.0573515  0.0112412   -94.060  < 2e-16 ***\nDESTIN_SZTNSZ03 -1.4069979  0.0132733  -106.002  < 2e-16 ***\nDESTIN_SZTNSZ04 -0.3616604  0.0085207   -42.445  < 2e-16 ***\nDESTIN_SZTPSZ01 -0.5919243  0.0071153   -83.190  < 2e-16 ***\nDESTIN_SZTPSZ02  0.7083350  0.0046540   152.198  < 2e-16 ***\nDESTIN_SZTPSZ03 -0.5746433  0.0069625   -82.534  < 2e-16 ***\nDESTIN_SZTPSZ04 -1.5821259  0.0084517  -187.196  < 2e-16 ***\nDESTIN_SZTPSZ05 -1.1796256  0.0073039  -161.505  < 2e-16 ***\nDESTIN_SZTPSZ06 -0.3968272  0.0077295   -51.339  < 2e-16 ***\nDESTIN_SZTPSZ07 -2.1796617  0.0135199  -161.219  < 2e-16 ***\nDESTIN_SZTPSZ08 -1.2568483  0.0107267  -117.170  < 2e-16 ***\nDESTIN_SZTPSZ09 -0.2446623  0.0080840   -30.265  < 2e-16 ***\nDESTIN_SZTPSZ10 -1.2542191  0.0102049  -122.904  < 2e-16 ***\nDESTIN_SZTPSZ11 -0.0886883  0.0062888   -14.102  < 2e-16 ***\nDESTIN_SZTPSZ12 -0.7211823  0.0075086   -96.048  < 2e-16 ***\nDESTIN_SZTSSZ01 -1.6271921  0.0238498   -68.227  < 2e-16 ***\nDESTIN_SZTSSZ02 -0.3340439  0.0169137   -19.750  < 2e-16 ***\nDESTIN_SZTSSZ03  0.3924580  0.0111060    35.338  < 2e-16 ***\nDESTIN_SZTSSZ04  0.4169932  0.0114926    36.283  < 2e-16 ***\nDESTIN_SZTSSZ05  1.3206287  0.0120381   109.704  < 2e-16 ***\nDESTIN_SZTSSZ06  2.4023725  0.0192840   124.579  < 2e-16 ***\nDESTIN_SZWCSZ01  2.0697378  0.0061379   337.206  < 2e-16 ***\nDESTIN_SZWCSZ02 -2.0934025  0.0134782  -155.318  < 2e-16 ***\nDESTIN_SZWCSZ03 -3.0670149  0.0349748   -87.692  < 2e-16 ***\nDESTIN_SZWDSZ01  1.0113215  0.0051461   196.522  < 2e-16 ***\nDESTIN_SZWDSZ02 -1.3383793  0.0076482  -174.993  < 2e-16 ***\nDESTIN_SZWDSZ03  0.3394361  0.0060396    56.202  < 2e-16 ***\nDESTIN_SZWDSZ04 -0.8324928  0.0086019   -96.780  < 2e-16 ***\nDESTIN_SZWDSZ05 -0.8279090  0.0083251   -99.447  < 2e-16 ***\nDESTIN_SZWDSZ06 -0.2252899  0.0061074   -36.888  < 2e-16 ***\nDESTIN_SZWDSZ07 -1.3638599  0.0077990  -174.877  < 2e-16 ***\nDESTIN_SZWDSZ08 -0.4350176  0.0077566   -56.083  < 2e-16 ***\nDESTIN_SZWDSZ09  0.5461048  0.0060745    89.901  < 2e-16 ***\nDESTIN_SZYSSZ01  0.0243093  0.0053476     4.546 5.47e-06 ***\nDESTIN_SZYSSZ02 -0.3398962  0.0065947   -51.540  < 2e-16 ***\nDESTIN_SZYSSZ03 -0.3694187  0.0074032   -49.900  < 2e-16 ***\nDESTIN_SZYSSZ04 -0.5222848  0.0067396   -77.495  < 2e-16 ***\nDESTIN_SZYSSZ05 -1.5460539  0.0124899  -123.784  < 2e-16 ***\nDESTIN_SZYSSZ06 -1.5556892  0.0127640  -121.881  < 2e-16 ***\nDESTIN_SZYSSZ07 -0.8673403  0.0167723   -51.713  < 2e-16 ***\nDESTIN_SZYSSZ08  0.5389364  0.0052540   102.577  < 2e-16 ***\nDESTIN_SZYSSZ09  0.1199483  0.0055235    21.716  < 2e-16 ***\nlog(dist)       -1.8906989  0.0005319 -3554.786  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 36117615  on 14273  degrees of freedom\nResidual deviance:  8091747  on 13715  degrees of freedom\nAIC: 8177420\n\nNumber of Fisher Scoring iterations: 7\n\n\nWe can examine how the constraints hold for destinations this time.\n\nCalcRSquared(dbcSIM$data$TRIPS, dbcSIM$fitted.values)\n\n[1] 0.6883675\n\n\nNotice that there is a relatively greater improvement in the R^2 value.\n\n\n2.9 Model comparison\nAnother useful model performance measure for continuous dependent variable is Root Mean Squared Error. In this sub-section, you will learn how to use compare_performance() of performance package\nFirst of all, let us create a list called model_list by using the code chun below.\n\nmodel_list <- list(unconstrained=uncSIM,\n                   originConstrained=orcSIM,\n                   destinationConstrained=decSIM,\n                   doublyConstrained=dbcSIM)\n\nNext, we will compute the RMSE of all the models in model_list file by using the code chunk below.\n\ncompare_performance(model_list,\n                    metrics = \"RMSE\")\n\n# Comparison of Model Performance Indices\n\nName                   | Model |     RMSE\n-----------------------------------------\nunconstrained          |   glm | 2429.978\noriginConstrained      |   glm | 2057.579\ndestinationConstrained |   glm | 1891.724\ndoublyConstrained      |   glm | 1487.111\n\n\nThe print above reveals that doubly constrained SIM is the best model among all the four SIMs because it has the smallest RMSE value of 1487.111.\n\n\n2.10 Visualising fitted\nIn this section, you will learn how to visualise the observed values and the fitted values.\nFirstly we will extract the fitted values from each model by using the code chunk below.\n\ndf <- as.data.frame(uncSIM$fitted.values) %>%\n  round(digits = 0)\n\nNext, we will join the values to SIM_data data frame.\n\nSIM_data <- SIM_data %>%\n  cbind(df) %>%\n  rename(uncTRIPS = \"uncSIM$fitted.values\")\n\nRepeat the same step by for Origin Constrained SIM (i.e. orcSIM)\n\ndf <- as.data.frame(orcSIM$fitted.values) %>%\n  round(digits = 0)\n\nSIM_data <- SIM_data %>%\n  cbind(df) %>%\n  rename(orcTRIPS = \"orcSIM$fitted.values\")\n\nRepeat the same step by for Destination Constrained SIM (i.e. decSIM)\n\ndf <- as.data.frame(decSIM$fitted.values) %>%\n  round(digits = 0)\n\nSIM_data <- SIM_data %>%\n  cbind(df) %>%\n  rename(decTRIPS = \"decSIM$fitted.values\")\n\nRepeat the same step by for Doubly Constrained SIM (i.e. dbcSIM)\n\ndf <- as.data.frame(dbcSIM$fitted.values) %>%\n  round(digits = 0)\n\nSIM_data <- SIM_data %>%\n  cbind(df) %>%\n  rename(dbcTRIPS = \"dbcSIM$fitted.values\")\n\n\n\n2.11 Plots\n\nunc_p <- ggplot(data = SIM_data,\n                aes(x = uncTRIPS,\n                    y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\norc_p <- ggplot(data = SIM_data,\n                aes(x = orcTRIPS,\n                    y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\ndec_p <- ggplot(data = SIM_data,\n                aes(x = decTRIPS,\n                    y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\ndbc_p <- ggplot(data = SIM_data,\n                aes(x = dbcTRIPS,\n                    y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\nggarrange(unc_p, orc_p, dec_p, dbc_p,\n          ncol = 2,\n          nrow = 2)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex09/In-class_Ex09.html",
    "href": "In-class_Ex/In-class_Ex09/In-class_Ex09.html",
    "title": "In-class_Ex09: Geospatial random forest",
    "section": "",
    "text": "pacman::p_load(olsrr, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, tidymodels, SpatialML, devtools, rsample)\n\n\n\n\n\nmdata <- read_rds(\"data/aspatial/mdata.rds\")\n\n\nset.seed(1234)\nresale_split <- initial_split(mdata,\n                              prop = 6.5/10,)\ntrain_data <- training(resale_split)\ntest_data <- testing(resale_split)\n\n\nwrite_rds(train_data,\"data/aspatial/train_data.rds\")\nwrite_rds(test_data, \"data/aspatial/test_data.rds\")\n\n\ntrain_data <- read_rds(\"data/aspatial/train_data.rds\")\ntest_data <-read_rds(\"data/aspatial/test_data.rds\")\n\n\nprice_mlr <- lm(resale_price ~ floor_area_sqm +storey_order +\nremaining_lease_mths +PROX_CBD +PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT+\nPROX_PARK + PROX_GOOD_PRISCH+PROX_MALL +PROX_CHAS + PROX_SUPERMARKET + \nWITHIN_350M_KINDERGARTEN +WITHIN_350M_CHILDCARE +WITHIN_350M_BUS +WITHIN_1KM_PRISCH,\ndata = train_data)\nsummary(price_mlr)\n\n\nCall:\nlm(formula = resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths + \n    PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK + \n    PROX_GOOD_PRISCH + PROX_MALL + PROX_CHAS + PROX_SUPERMARKET + \n    WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + \n    WITHIN_1KM_PRISCH, data = train_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-215500  -39329   -2061   35882  457192 \n\nCoefficients:\n                           Estimate Std. Error t value Pr(>|t|)    \n(Intercept)              103911.650  10586.618   9.815  < 2e-16 ***\nfloor_area_sqm             2851.494     90.977  31.343  < 2e-16 ***\nstorey_order              14171.222    338.680  41.843  < 2e-16 ***\nremaining_lease_mths        342.656      4.601  74.476  < 2e-16 ***\nPROX_CBD                 -17867.040    233.448 -76.535  < 2e-16 ***\nPROX_ELDERLYCARE         -14911.480    998.345 -14.936  < 2e-16 ***\nPROX_HAWKER              -18379.532   1294.887 -14.194  < 2e-16 ***\nPROX_MRT                 -31730.480   1744.108 -18.193  < 2e-16 ***\nPROX_PARK                 -8187.270   1514.995  -5.404 6.66e-08 ***\nPROX_GOOD_PRISCH           2667.018    340.037   7.843 4.82e-15 ***\nPROX_MALL                -12988.289   2017.587  -6.438 1.27e-10 ***\nPROX_CHAS                 -9223.168   6417.595  -1.437    0.151    \nPROX_SUPERMARKET         -27036.308   4496.035  -6.013 1.88e-09 ***\nWITHIN_350M_KINDERGARTEN   8486.601    631.011  13.449  < 2e-16 ***\nWITHIN_350M_CHILDCARE     -4416.925    353.505 -12.495  < 2e-16 ***\nWITHIN_350M_BUS             887.666    222.500   3.990 6.67e-05 ***\nWITHIN_1KM_PRISCH         -7795.347    490.834 -15.882  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 61470 on 10318 degrees of freedom\nMultiple R-squared:  0.7389,    Adjusted R-squared:  0.7385 \nF-statistic:  1825 on 16 and 10318 DF,  p-value: < 2.2e-16\n\n\n\n\n\n\n\n\ntrain_data_sp <- as_Spatial(train_data)\ntrain_data_sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 10335 \nextent      : 11597.31, 42623.63, 28217.39, 48741.06  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 17\nnames       : resale_price, floor_area_sqm, storey_order, remaining_lease_mths,          PROX_CBD,     PROX_ELDERLYCARE,        PROX_HAWKER,           PROX_MRT,          PROX_PARK,   PROX_GOOD_PRISCH,        PROX_MALL,            PROX_CHAS,     PROX_SUPERMARKET, WITHIN_350M_KINDERGARTEN, WITHIN_350M_CHILDCARE, ... \nmin values  :       218000,             74,            1,                  555, 0.999393538715878, 1.98943787433087e-08, 0.0333358643817954, 0.0220407324774434, 0.0441643212802781, 0.0652540365486641,                0, 6.20621206270077e-09, 1.21715176356525e-07,                        0,                     0, ... \nmax values  :      1186888,            133,           17,                 1164,  19.6500691667807,     3.30163731686804,   2.86763031236184,   2.13060636038504,   2.41313695915468,   10.6223726149914, 2.27100643784442,    0.808332738794272,     1.57131703651196,                        7,                    20, ... \n\n\n\nbw_gwr<- bw.gwr(resale_price ~ floor_area_sqm +storey_order +\nremaining_lease_mths +PROX_CBD +PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT+\nPROX_PARK + PROX_GOOD_PRISCH+PROX_MALL +PROX_CHAS + PROX_SUPERMARKET + \nWITHIN_350M_KINDERGARTEN +WITHIN_350M_CHILDCARE +WITHIN_350M_BUS +WITHIN_1KM_PRISCH,\ndata = train_data,\napproach = \"CV\",\n       kernel = \"gaussian\")\n\n\ncoords <- st_coordinates(mdata)\ncoords_train <- st_coordinates(train_data)\ncoords_test <- st_coordinates(test_data)\n\n\ncoords_train <- write_rds(coords_train, \"data/aspatial/coords_train.rds\")\ncoords_test <- write_rds(coords_test, \"data/aspatial/coords_test.rds\")\n\n\n\n\n\n\n\n\ntrain_data <- train_data %>%\n  st_drop_geometry()\n\n\n\n\n\n\nset.seed(1234)\nrf <- ranger(resale_price ~ floor_area_sqm +storey_order +\nremaining_lease_mths +PROX_CBD +PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT+\nPROX_PARK + PROX_GOOD_PRISCH+PROX_MALL +PROX_CHAS + PROX_SUPERMARKET + \nWITHIN_350M_KINDERGARTEN +WITHIN_350M_CHILDCARE +WITHIN_350M_BUS +WITHIN_1KM_PRISCH,\ndata = train_data)\n\n\nprint(rf)\n\nRanger result\n\nCall:\n ranger(resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_GOOD_PRISCH + PROX_MALL + PROX_CHAS + PROX_SUPERMARKET +      WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +      WITHIN_1KM_PRISCH, data = train_data) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      10335 \nNumber of independent variables:  16 \nMtry:                             4 \nTarget node size:                 5 \nVariable importance mode:         none \nSplitrule:                        variance \nOOB prediction error (MSE):       684937637 \nR squared (OOB):                  0.9525949 \n\n\n\nbw_grf <- grf.bw(formula = resale_price ~ floor_area_sqm +storey_order +\nremaining_lease_mths +PROX_CBD +PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT+\nPROX_PARK + PROX_GOOD_PRISCH+PROX_MALL +PROX_CHAS + PROX_SUPERMARKET + \nWITHIN_350M_KINDERGARTEN +WITHIN_350M_CHILDCARE +WITHIN_350M_BUS +WITHIN_1KM_PRISCH,\ndata = train_data,\nkernel = \"adaptive\",\ntrees = 30,\ncoords = coords_train)\n\n\nset.seed(1234)\ngwRF_adaptive <- grf(formula = resale_price ~ floor_area_sqm +storey_order +\nremaining_lease_mths +PROX_CBD +PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT+\nPROX_PARK + PROX_GOOD_PRISCH+PROX_MALL +PROX_CHAS + PROX_SUPERMARKET + \nWITHIN_350M_KINDERGARTEN +WITHIN_350M_CHILDCARE +WITHIN_350M_BUS +WITHIN_1KM_PRISCH,\ndframe = train_data,\nbw = 55,\nkernel = \"adaptive\",\ncoords = coords_train)\n\n\nwrite_rds(gwRF_adaptive, file = \"data/aspatial/gwRF_adaptive.rds\")\n\n\ngwRF_adaptive<- read_rds(\"data/aspatial/gwRF_adaptive.rds\")\n\n\n\n\n\n\ntest_data <- cbind(test_data, coords_test) %>%\n  st_drop_geometry()\n\n\ngwRF_pred <- predict.grf(gwRF_adaptive,\n                         test_data,\n                         x.var.name= \"X\",\n                         y.var.name =\"Y\",\n                         local.w = 1,\n                         global.w =1)\n\n\nwrite_rds(gwRF_pred, \"data/aspatial/gwRF_pred.rds\")\n\n\n\n\n\ngwRF_pred <- read_rds(\"data/aspatial/gwRF_pred.rds\")\n\n\ngwRF_pred_df <- as.data.frame(gwRF_pred)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html",
    "title": "In-class Exercise 7: Global and Local Measures",
    "section": "",
    "text": "Unlike the Hands-on Ex07, we will mainly use sfdep package for calculating the global and local measures. This is because spdep is going to be discontinued.\n\n\n\npacman::p_load(sf,sfdep,tmap,tidyverse)\n\n\n\n\n\nhunan <- st_read(dsn = \"data/geospatial\",\n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/In-class_Ex/In-class_Ex07/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n\n\nhunan_GDPPC <- left_join(hunan, hunan2012) %>%\n  select(1:4, 7, 15)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#deriving-contiguity-weights-queens-method",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#deriving-contiguity-weights-queens-method",
    "title": "In-class Exercise 7: Global and Local Measures",
    "section": "2.1 Deriving contiguity weights: Queen’s method",
    "text": "2.1 Deriving contiguity weights: Queen’s method\n\nwm_q <- hunan_GDPPC %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#computing-global-morans-i",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#computing-global-morans-i",
    "title": "In-class Exercise 7: Global and Local Measures",
    "section": "2.2 Computing Global Moran’s I",
    "text": "2.2 Computing Global Moran’s I\n\nmoranI <- global_moran(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#performing-global-morans-i-test",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#performing-global-morans-i-test",
    "title": "In-class Exercise 7: Global and Local Measures",
    "section": "2.3 Performing Global Moran’s I Test",
    "text": "2.3 Performing Global Moran’s I Test\n\nglobal_moran_test(wm_q$GDPPC,\n                  wm_q$nb,\n                  wm_q$wt)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#performing-global-morani-permutation-test",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#performing-global-morani-permutation-test",
    "title": "In-class Exercise 7: Global and Local Measures",
    "section": "2.4 Performing Global Moran’I permutation test",
    "text": "2.4 Performing Global Moran’I permutation test\n\nset.seed(1234)\n\n\nglobal_moran_perm(wm_q$GDPPC,\n                  wm_q$nb,\n                  wm_q$wt,\n                  nsim=99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.30075, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#computing-local-morans-i",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#computing-local-morans-i",
    "title": "In-class Exercise 7: Global and Local Measures",
    "section": "2.5 Computing Local Moran’s I",
    "text": "2.5 Computing Local Moran’s I\n\nlisa <- wm_q %>%\n  mutate(local_moran = local_moran(GDPPC,\n                                   nb,\n                                   wt, \n                                   nsim =99),\n         .before = 1) %>%\n  unnest(local_moran)\nlisa\n\nSimple feature collection with 88 features and 20 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n# A tibble: 88 × 21\n         ii        eii   var_ii    z_ii    p_ii p_ii_…¹ p_fol…² skewn…³ kurtosis\n      <dbl>      <dbl>    <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>    <dbl>\n 1 -0.00147  0.00177    4.18e-4 -0.158  0.874      0.82    0.41  -0.812  0.652  \n 2  0.0259   0.00641    1.05e-2  0.190  0.849      0.96    0.48  -1.09   1.89   \n 3 -0.0120  -0.0374     1.02e-1  0.0796 0.937      0.76    0.38   0.824  0.0461 \n 4  0.00102 -0.0000349  4.37e-6  0.506  0.613      0.64    0.32   1.04   1.61   \n 5  0.0148  -0.00340    1.65e-3  0.449  0.654      0.5     0.25   1.64   3.96   \n 6 -0.0388  -0.00339    5.45e-3 -0.480  0.631      0.82    0.41   0.614 -0.264  \n 7  3.37    -0.198      1.41e+0  3.00   0.00266    0.08    0.04   1.46   2.74   \n 8  1.56    -0.265      8.04e-1  2.04   0.0417     0.08    0.04   0.459 -0.519  \n 9  4.42     0.0450     1.79e+0  3.27   0.00108    0.02    0.01   0.746 -0.00582\n10 -0.399   -0.0505     8.59e-2 -1.19   0.234      0.28    0.14  -0.685  0.134  \n# … with 78 more rows, 12 more variables: mean <fct>, median <fct>,\n#   pysal <fct>, nb <nb>, wt <list>, NAME_2 <chr>, ID_3 <int>, NAME_3 <chr>,\n#   ENGTYPE_3 <chr>, County <chr>, GDPPC <dbl>, geometry <POLYGON [°]>, and\n#   abbreviated variable names ¹​p_ii_sim, ²​p_folded_sim, ³​skewness"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#visualizing-lisa",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#visualizing-lisa",
    "title": "In-class Exercise 7: Global and Local Measures",
    "section": "2.6 Visualizing Lisa",
    "text": "2.6 Visualizing Lisa\n\n2.6.1 Visualize Local Moran’s I plot\n\ntmap_mode(\"plot\")\ntm_shape(lisa) +\n  tm_fill(\"ii\") +\n  tm_borders(alpha = 0.5)+\n  tm_view(set.zoom.limits = c(6,8))\n\n\n\n\n\n\n2.6.2 p-value plot\n\ntmap_mode(\"plot\")\ntm_shape(lisa) +\n  tm_fill(\"p_ii\") +\n  tm_borders(alpha = 0.5)+\n  tm_view(set.zoom.limits = c(6,8))\n\n\n\n\n\nlisa_sig <- lisa %>%\n  filter(p_ii <0.05)\ntmap_mode(\"plot\")\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") +\n  tm_borders(alpha = 0.4)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#computing-local-moransi",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#computing-local-moransi",
    "title": "In-class Exercise 7: Global and Local Measures",
    "section": "3.1 Computing local Moran’sI",
    "text": "3.1 Computing local Moran’sI\n\nHCSA <- wm_q %>%\n  mutate(local_Gi = local_gstar_perm(\n    GDPPC, nb, wt, nsim =99),\n    .before = 1) %>%\n  unnest(local_Gi)\nHCSA\n\nSimple feature collection with 88 features and 16 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n# A tibble: 88 × 17\n    gi_star   e_gi     var_gi  p_value p_sim p_fol…¹ skewn…² kurto…³ nb    wt   \n      <dbl>  <dbl>      <dbl>    <dbl> <dbl>   <dbl>   <dbl>   <dbl> <nb>  <lis>\n 1 -0.00567 0.0115 0.00000812  9.95e-1  0.82    0.41   1.03    1.23  <int> <dbl>\n 2 -0.235   0.0110 0.00000581  8.14e-1  1       0.5    0.912   1.05  <int> <dbl>\n 3  0.298   0.0114 0.00000776  7.65e-1  0.7     0.35   0.455  -0.732 <int> <dbl>\n 4  0.145   0.0121 0.0000111   8.84e-1  0.64    0.32   0.900   0.726 <int> <dbl>\n 5  0.356   0.0113 0.0000119   7.21e-1  0.64    0.32   1.08    1.31  <int> <dbl>\n 6 -0.480   0.0116 0.00000706  6.31e-1  0.82    0.41   0.364  -0.676 <int> <dbl>\n 7  3.66    0.0116 0.00000825  2.47e-4  0.02    0.01   0.909   0.664 <int> <dbl>\n 8  2.14    0.0116 0.00000714  3.26e-2  0.16    0.08   1.13    1.48  <int> <dbl>\n 9  4.55    0.0113 0.00000656  5.28e-6  0.02    0.01   1.36    4.14  <int> <dbl>\n10  1.61    0.0109 0.00000341  1.08e-1  0.18    0.09   0.269  -0.396 <int> <dbl>\n# … with 78 more rows, 7 more variables: NAME_2 <chr>, ID_3 <int>,\n#   NAME_3 <chr>, ENGTYPE_3 <chr>, County <chr>, GDPPC <dbl>,\n#   geometry <POLYGON [°]>, and abbreviated variable names ¹​p_folded_sim,\n#   ²​skewness, ³​kurtosis"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#visualizing-gi",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#visualizing-gi",
    "title": "In-class Exercise 7: Global and Local Measures",
    "section": "3.2 Visualizing Gi*",
    "text": "3.2 Visualizing Gi*\n\ntmap_mode(\"view\")\ntm_shape(HCSA)+\n  tm_fill(\"gi_star\") +\n  tm_borders(alpha=0.5)+\n  tm_view(set.zoom.limits = c(6,8))\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\ntm_shape(HCSA) +\n  tm_fill(\"p_sim\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\npacman::p_load(plotly)\n\n\nGDPPC <- read_csv(\"data/aspatial/Hunan_GDPPC.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#creating-a-time-series-cube",
    "href": "In-class_Ex/In-class_Ex07/In-class_Ex07.html#creating-a-time-series-cube",
    "title": "In-class Exercise 7: Global and Local Measures",
    "section": "3.3 Creating a Time Series Cube",
    "text": "3.3 Creating a Time Series Cube\nThe code chunk below creates a spatio-temporal cube by using spacetime() from the sfdep packagePC\n\nGDPPC_st <- spacetime(GDPPC, hunan,\n                      .loc_col = \"County\",\n                      .time_col = \"Year\")\n\n\nGDPPC_nb <- GDPPC_st %>%\n  activate(\"geometry\") %>%\n  mutate(\n    nb = include_self(st_contiguity(geometry)),\n    wt = st_weights(nb)) %>%\n  set_nbs(\"nb\") %>%\n  set_wts(\"wt\")\n\n\n3.3.1 Computing Gi\n\ngi_star <- GDPPC_nb %>%\n  group_by(Year) %>%\n  mutate(gi_star = local_gstar_perm(\n    GDPPC, nb, wt, nsim = 99)) %>%\n  tidyr::unnest(gi_star)\n\n\n\n3.3.2 Performing Emerging Hotspot analysis"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html",
    "title": "In-class Exercise 6",
    "section": "",
    "text": "pacman::p_load(sf, sfdep, tidyverse, tmap)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#importing-geospatial-data",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#importing-geospatial-data",
    "title": "In-class Exercise 6",
    "section": "2.1 Importing Geospatial data",
    "text": "2.1 Importing Geospatial data\n\nhunan <- st_read(dsn = \"data/geospatial/\",\n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/In-class_Ex/In-class_Ex06/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#importing-aspatial-data",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#importing-aspatial-data",
    "title": "In-class Exercise 6",
    "section": "2.2 Importing Aspatial data",
    "text": "2.2 Importing Aspatial data\n\nhunan_2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\nhunan_GDPPC <- dplyr::left_join(hunan, hunan_2012) %>%\n  select(1:4, 7, 15)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#visualize-the-data-on-a-choropleth-map",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#visualize-the-data-on-a-choropleth-map",
    "title": "In-class Exercise 6",
    "section": "2.3 Visualize the data on a Choropleth Map",
    "text": "2.3 Visualize the data on a Choropleth Map\n\ntmap_mode(\"plot\")\ntm_shape(hunan_GDPPC) +\n  tm_fill(\"GDPPC\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          title = \"GDPPC\") +\n  tm_layout(main.title = \"Distribution of GDP per capita by district\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha =0.5) +\n  tm_compass(type = \"8star\", size =2) +\n  tm_scale_bar() +\n  tm_grid(alpha = 0.2)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#contiguity-neighbours-method",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#contiguity-neighbours-method",
    "title": "In-class Exercise 6",
    "section": "3.1 Contiguity neighbours method",
    "text": "3.1 Contiguity neighbours method\nIn the code chunk below, st_contiguity() is used to derive a contiguity neighbour list by using Queen’s method. By default, st_contiguity() uses queen = TRUE.\n\ncn_queen <- hunan_GDPPC %>%\n  mutate(nb= st_contiguity(geometry),\n         .before = 1)\n\nThe code chunk below uses st_contiguity() with queen = FALSE. This makes the contiguity neighbor list using the Rook’s method.\n\ncn_rook <- hunan_GDPPC %>%\n  mutate(nb = st_contiguity(geometry, \n                            queen = FALSE),\n         .before = 1)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#computing-contiguity-weights",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html#computing-contiguity-weights",
    "title": "In-class Exercise 6",
    "section": "3.2 Computing contiguity weights",
    "text": "3.2 Computing contiguity weights\n\n3.2.1 Queen’s method\n\nwm_q <- hunan_GDPPC %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb),\n         .before = 1)\n\n\n\n3.2.2 Rook’s method\n\nwm_q <- hunan_GDPPC %>%\n  mutate(nb = st_contiguity(geometry),\n         queen = FALSE,\n         wt = st_weights(nb),\n         .before = 1)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html",
    "title": "In-class_Ex08",
    "section": "",
    "text": "pacman::p_load(olsrr, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary, sfdep)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#load-data-in",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#load-data-in",
    "title": "In-class_Ex08",
    "section": "2.1 Load Data in",
    "text": "2.1 Load Data in\n\nmpsz <- st_read(dsn = \"data/geospatial\",\n                layer =\"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/junhaoteo/Documents/junhao2309/IS415/In-class_Ex/In-class_Ex08/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#load-data-in-1",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#load-data-in-1",
    "title": "In-class_Ex08",
    "section": "3.1 Load Data in",
    "text": "3.1 Load Data in\n\ncondo_resale = read_csv(\"data/aspatial/Condo_resale_2015.csv\")\n\n\ncondo_resale.sf <- st_as_sf(condo_resale,\n                            coords = c(\"LONGITUDE\", \"LATITUDE\"),\n                            crs = 4326) %>%\n  st_transform(crs = 3414)"
  }
]